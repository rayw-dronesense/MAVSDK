// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: camera/camera.proto

#include "camera/camera.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace mavsdk {
namespace rpc {
namespace camera {

inline constexpr ZoomStopRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : component_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ZoomStopRequest::ZoomStopRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ZoomStopRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ZoomStopRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ZoomStopRequestDefaultTypeInternal() {}
  union {
    ZoomStopRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ZoomStopRequestDefaultTypeInternal _ZoomStopRequest_default_instance_;

inline constexpr ZoomRangeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : component_id_{0},
        range_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ZoomRangeRequest::ZoomRangeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ZoomRangeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ZoomRangeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ZoomRangeRequestDefaultTypeInternal() {}
  union {
    ZoomRangeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ZoomRangeRequestDefaultTypeInternal _ZoomRangeRequest_default_instance_;

inline constexpr ZoomOutStartRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : component_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ZoomOutStartRequest::ZoomOutStartRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ZoomOutStartRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ZoomOutStartRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ZoomOutStartRequestDefaultTypeInternal() {}
  union {
    ZoomOutStartRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ZoomOutStartRequestDefaultTypeInternal _ZoomOutStartRequest_default_instance_;

inline constexpr ZoomInStartRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : component_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ZoomInStartRequest::ZoomInStartRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ZoomInStartRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ZoomInStartRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ZoomInStartRequestDefaultTypeInternal() {}
  union {
    ZoomInStartRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ZoomInStartRequestDefaultTypeInternal _ZoomInStartRequest_default_instance_;

inline constexpr VideoStreamSettings::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : uri_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        frame_rate_hz_{0},
        horizontal_resolution_pix_{0u},
        vertical_resolution_pix_{0u},
        bit_rate_b_s_{0u},
        rotation_deg_{0u},
        horizontal_fov_deg_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VideoStreamSettings::VideoStreamSettings(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VideoStreamSettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VideoStreamSettingsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VideoStreamSettingsDefaultTypeInternal() {}
  union {
    VideoStreamSettings _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VideoStreamSettingsDefaultTypeInternal _VideoStreamSettings_default_instance_;

inline constexpr TrackStopRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : component_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TrackStopRequest::TrackStopRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TrackStopRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TrackStopRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TrackStopRequestDefaultTypeInternal() {}
  union {
    TrackStopRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TrackStopRequestDefaultTypeInternal _TrackStopRequest_default_instance_;

inline constexpr TrackRectangleRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : component_id_{0},
        top_left_x_{0},
        top_left_y_{0},
        bottom_right_x_{0},
        bottom_right_y_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TrackRectangleRequest::TrackRectangleRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TrackRectangleRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TrackRectangleRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TrackRectangleRequestDefaultTypeInternal() {}
  union {
    TrackRectangleRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TrackRectangleRequestDefaultTypeInternal _TrackRectangleRequest_default_instance_;

inline constexpr TrackPointRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : component_id_{0},
        point_x_{0},
        point_y_{0},
        radius_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TrackPointRequest::TrackPointRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TrackPointRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TrackPointRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TrackPointRequestDefaultTypeInternal() {}
  union {
    TrackPointRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TrackPointRequestDefaultTypeInternal _TrackPointRequest_default_instance_;

inline constexpr TakePhotoRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : component_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TakePhotoRequest::TakePhotoRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TakePhotoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TakePhotoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TakePhotoRequestDefaultTypeInternal() {}
  union {
    TakePhotoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TakePhotoRequestDefaultTypeInternal _TakePhotoRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SubscribeVideoStreamInfoRequest::SubscribeVideoStreamInfoRequest(::_pbi::ConstantInitialized) {}
struct SubscribeVideoStreamInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeVideoStreamInfoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeVideoStreamInfoRequestDefaultTypeInternal() {}
  union {
    SubscribeVideoStreamInfoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeVideoStreamInfoRequestDefaultTypeInternal _SubscribeVideoStreamInfoRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SubscribeStorageRequest::SubscribeStorageRequest(::_pbi::ConstantInitialized) {}
struct SubscribeStorageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeStorageRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeStorageRequestDefaultTypeInternal() {}
  union {
    SubscribeStorageRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeStorageRequestDefaultTypeInternal _SubscribeStorageRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SubscribePossibleSettingOptionsRequest::SubscribePossibleSettingOptionsRequest(::_pbi::ConstantInitialized) {}
struct SubscribePossibleSettingOptionsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribePossibleSettingOptionsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribePossibleSettingOptionsRequestDefaultTypeInternal() {}
  union {
    SubscribePossibleSettingOptionsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribePossibleSettingOptionsRequestDefaultTypeInternal _SubscribePossibleSettingOptionsRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SubscribeModeRequest::SubscribeModeRequest(::_pbi::ConstantInitialized) {}
struct SubscribeModeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeModeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeModeRequestDefaultTypeInternal() {}
  union {
    SubscribeModeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeModeRequestDefaultTypeInternal _SubscribeModeRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SubscribeCurrentSettingsRequest::SubscribeCurrentSettingsRequest(::_pbi::ConstantInitialized) {}
struct SubscribeCurrentSettingsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeCurrentSettingsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeCurrentSettingsRequestDefaultTypeInternal() {}
  union {
    SubscribeCurrentSettingsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeCurrentSettingsRequestDefaultTypeInternal _SubscribeCurrentSettingsRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SubscribeCaptureInfoRequest::SubscribeCaptureInfoRequest(::_pbi::ConstantInitialized) {}
struct SubscribeCaptureInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeCaptureInfoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeCaptureInfoRequestDefaultTypeInternal() {}
  union {
    SubscribeCaptureInfoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeCaptureInfoRequestDefaultTypeInternal _SubscribeCaptureInfoRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SubscribeCameraListRequest::SubscribeCameraListRequest(::_pbi::ConstantInitialized) {}
struct SubscribeCameraListRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeCameraListRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeCameraListRequestDefaultTypeInternal() {}
  union {
    SubscribeCameraListRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeCameraListRequestDefaultTypeInternal _SubscribeCameraListRequest_default_instance_;

inline constexpr Storage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : media_folder_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        component_id_{0},
        video_on_{false},
        photo_interval_on_{false},
        used_storage_mib_{0},
        available_storage_mib_{0},
        total_storage_mib_{0},
        recording_time_s_{0},
        storage_status_{static_cast< ::mavsdk::rpc::camera::Storage_StorageStatus >(0)},
        storage_id_{0u},
        storage_type_{static_cast< ::mavsdk::rpc::camera::Storage_StorageType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Storage::Storage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StorageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StorageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StorageDefaultTypeInternal() {}
  union {
    Storage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StorageDefaultTypeInternal _Storage_default_instance_;

inline constexpr StopVideoStreamingRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : component_id_{0},
        stream_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StopVideoStreamingRequest::StopVideoStreamingRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StopVideoStreamingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopVideoStreamingRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopVideoStreamingRequestDefaultTypeInternal() {}
  union {
    StopVideoStreamingRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopVideoStreamingRequestDefaultTypeInternal _StopVideoStreamingRequest_default_instance_;

inline constexpr StopVideoRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : component_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StopVideoRequest::StopVideoRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StopVideoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopVideoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopVideoRequestDefaultTypeInternal() {}
  union {
    StopVideoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopVideoRequestDefaultTypeInternal _StopVideoRequest_default_instance_;

inline constexpr StopPhotoIntervalRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : component_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StopPhotoIntervalRequest::StopPhotoIntervalRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StopPhotoIntervalRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopPhotoIntervalRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopPhotoIntervalRequestDefaultTypeInternal() {}
  union {
    StopPhotoIntervalRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopPhotoIntervalRequestDefaultTypeInternal _StopPhotoIntervalRequest_default_instance_;

inline constexpr StartVideoStreamingRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : component_id_{0},
        stream_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StartVideoStreamingRequest::StartVideoStreamingRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StartVideoStreamingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartVideoStreamingRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartVideoStreamingRequestDefaultTypeInternal() {}
  union {
    StartVideoStreamingRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartVideoStreamingRequestDefaultTypeInternal _StartVideoStreamingRequest_default_instance_;

inline constexpr StartVideoRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : component_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StartVideoRequest::StartVideoRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StartVideoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartVideoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartVideoRequestDefaultTypeInternal() {}
  union {
    StartVideoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartVideoRequestDefaultTypeInternal _StartVideoRequest_default_instance_;

inline constexpr StartPhotoIntervalRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : component_id_{0},
        interval_s_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StartPhotoIntervalRequest::StartPhotoIntervalRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StartPhotoIntervalRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartPhotoIntervalRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartPhotoIntervalRequestDefaultTypeInternal() {}
  union {
    StartPhotoIntervalRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartPhotoIntervalRequestDefaultTypeInternal _StartPhotoIntervalRequest_default_instance_;

inline constexpr SetModeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : component_id_{0},
        mode_{static_cast< ::mavsdk::rpc::camera::Mode >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetModeRequest::SetModeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetModeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetModeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetModeRequestDefaultTypeInternal() {}
  union {
    SetModeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetModeRequestDefaultTypeInternal _SetModeRequest_default_instance_;

inline constexpr ResetSettingsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : component_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ResetSettingsRequest::ResetSettingsRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ResetSettingsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResetSettingsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResetSettingsRequestDefaultTypeInternal() {}
  union {
    ResetSettingsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResetSettingsRequestDefaultTypeInternal _ResetSettingsRequest_default_instance_;

inline constexpr Quaternion::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : w_{0},
        x_{0},
        y_{0},
        z_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Quaternion::Quaternion(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct QuaternionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuaternionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuaternionDefaultTypeInternal() {}
  union {
    Quaternion _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuaternionDefaultTypeInternal _Quaternion_default_instance_;

inline constexpr Position::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : latitude_deg_{0},
        longitude_deg_{0},
        absolute_altitude_m_{0},
        relative_altitude_m_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Position::Position(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionDefaultTypeInternal() {}
  union {
    Position _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionDefaultTypeInternal _Position_default_instance_;

inline constexpr Option::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : option_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        option_description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Option::Option(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OptionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OptionDefaultTypeInternal() {}
  union {
    Option _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OptionDefaultTypeInternal _Option_default_instance_;

inline constexpr ModeUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : component_id_{0},
        mode_{static_cast< ::mavsdk::rpc::camera::Mode >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ModeUpdate::ModeUpdate(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ModeUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModeUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModeUpdateDefaultTypeInternal() {}
  union {
    ModeUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModeUpdateDefaultTypeInternal _ModeUpdate_default_instance_;

inline constexpr ListPhotosRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : component_id_{0},
        photos_range_{static_cast< ::mavsdk::rpc::camera::PhotosRange >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListPhotosRequest::ListPhotosRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ListPhotosRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListPhotosRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListPhotosRequestDefaultTypeInternal() {}
  union {
    ListPhotosRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListPhotosRequestDefaultTypeInternal _ListPhotosRequest_default_instance_;

inline constexpr Information::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : vendor_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        model_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        component_id_{0},
        focal_length_mm_{0},
        horizontal_sensor_size_mm_{0},
        vertical_sensor_size_mm_{0},
        horizontal_resolution_px_{0u},
        vertical_resolution_px_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Information::Information(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct InformationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InformationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InformationDefaultTypeInternal() {}
  union {
    Information _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InformationDefaultTypeInternal _Information_default_instance_;

inline constexpr GetVideoStreamInfoRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : component_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetVideoStreamInfoRequest::GetVideoStreamInfoRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetVideoStreamInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetVideoStreamInfoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetVideoStreamInfoRequestDefaultTypeInternal() {}
  union {
    GetVideoStreamInfoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetVideoStreamInfoRequestDefaultTypeInternal _GetVideoStreamInfoRequest_default_instance_;

inline constexpr GetStorageRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : component_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetStorageRequest::GetStorageRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetStorageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetStorageRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetStorageRequestDefaultTypeInternal() {}
  union {
    GetStorageRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetStorageRequestDefaultTypeInternal _GetStorageRequest_default_instance_;

inline constexpr GetPossibleSettingOptionsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : component_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetPossibleSettingOptionsRequest::GetPossibleSettingOptionsRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetPossibleSettingOptionsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPossibleSettingOptionsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPossibleSettingOptionsRequestDefaultTypeInternal() {}
  union {
    GetPossibleSettingOptionsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPossibleSettingOptionsRequestDefaultTypeInternal _GetPossibleSettingOptionsRequest_default_instance_;

inline constexpr GetModeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : component_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetModeRequest::GetModeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetModeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetModeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetModeRequestDefaultTypeInternal() {}
  union {
    GetModeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetModeRequestDefaultTypeInternal _GetModeRequest_default_instance_;

inline constexpr GetCurrentSettingsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : component_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetCurrentSettingsRequest::GetCurrentSettingsRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetCurrentSettingsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCurrentSettingsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCurrentSettingsRequestDefaultTypeInternal() {}
  union {
    GetCurrentSettingsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCurrentSettingsRequestDefaultTypeInternal _GetCurrentSettingsRequest_default_instance_;

inline constexpr FormatStorageRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : component_id_{0},
        storage_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FormatStorageRequest::FormatStorageRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FormatStorageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FormatStorageRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FormatStorageRequestDefaultTypeInternal() {}
  union {
    FormatStorageRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FormatStorageRequestDefaultTypeInternal _FormatStorageRequest_default_instance_;

inline constexpr FocusStopRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : component_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FocusStopRequest::FocusStopRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FocusStopRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FocusStopRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FocusStopRequestDefaultTypeInternal() {}
  union {
    FocusStopRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FocusStopRequestDefaultTypeInternal _FocusStopRequest_default_instance_;

inline constexpr FocusRangeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : component_id_{0},
        range_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FocusRangeRequest::FocusRangeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FocusRangeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FocusRangeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FocusRangeRequestDefaultTypeInternal() {}
  union {
    FocusRangeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FocusRangeRequestDefaultTypeInternal _FocusRangeRequest_default_instance_;

inline constexpr FocusOutStartRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : component_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FocusOutStartRequest::FocusOutStartRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FocusOutStartRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FocusOutStartRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FocusOutStartRequestDefaultTypeInternal() {}
  union {
    FocusOutStartRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FocusOutStartRequestDefaultTypeInternal _FocusOutStartRequest_default_instance_;

inline constexpr FocusInStartRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : component_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FocusInStartRequest::FocusInStartRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FocusInStartRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FocusInStartRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FocusInStartRequestDefaultTypeInternal() {}
  union {
    FocusInStartRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FocusInStartRequestDefaultTypeInternal _FocusInStartRequest_default_instance_;

inline constexpr EulerAngle::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : roll_deg_{0},
        pitch_deg_{0},
        yaw_deg_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EulerAngle::EulerAngle(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct EulerAngleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EulerAngleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EulerAngleDefaultTypeInternal() {}
  union {
    EulerAngle _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EulerAngleDefaultTypeInternal _EulerAngle_default_instance_;

inline constexpr CameraResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : result_str_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_{static_cast< ::mavsdk::rpc::camera::CameraResult_Result >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CameraResult::CameraResult(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CameraResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CameraResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CameraResultDefaultTypeInternal() {}
  union {
    CameraResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CameraResultDefaultTypeInternal _CameraResult_default_instance_;

inline constexpr ZoomStopResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ZoomStopResponse::ZoomStopResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ZoomStopResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ZoomStopResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ZoomStopResponseDefaultTypeInternal() {}
  union {
    ZoomStopResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ZoomStopResponseDefaultTypeInternal _ZoomStopResponse_default_instance_;

inline constexpr ZoomRangeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ZoomRangeResponse::ZoomRangeResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ZoomRangeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ZoomRangeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ZoomRangeResponseDefaultTypeInternal() {}
  union {
    ZoomRangeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ZoomRangeResponseDefaultTypeInternal _ZoomRangeResponse_default_instance_;

inline constexpr ZoomOutStartResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ZoomOutStartResponse::ZoomOutStartResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ZoomOutStartResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ZoomOutStartResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ZoomOutStartResponseDefaultTypeInternal() {}
  union {
    ZoomOutStartResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ZoomOutStartResponseDefaultTypeInternal _ZoomOutStartResponse_default_instance_;

inline constexpr ZoomInStartResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ZoomInStartResponse::ZoomInStartResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ZoomInStartResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ZoomInStartResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ZoomInStartResponseDefaultTypeInternal() {}
  union {
    ZoomInStartResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ZoomInStartResponseDefaultTypeInternal _ZoomInStartResponse_default_instance_;

inline constexpr VideoStreamInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        settings_{nullptr},
        stream_id_{0},
        status_{static_cast< ::mavsdk::rpc::camera::VideoStreamInfo_VideoStreamStatus >(0)},
        spectrum_{static_cast< ::mavsdk::rpc::camera::VideoStreamInfo_VideoStreamSpectrum >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR VideoStreamInfo::VideoStreamInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VideoStreamInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VideoStreamInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VideoStreamInfoDefaultTypeInternal() {}
  union {
    VideoStreamInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VideoStreamInfoDefaultTypeInternal _VideoStreamInfo_default_instance_;

inline constexpr TrackStopResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR TrackStopResponse::TrackStopResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TrackStopResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TrackStopResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TrackStopResponseDefaultTypeInternal() {}
  union {
    TrackStopResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TrackStopResponseDefaultTypeInternal _TrackStopResponse_default_instance_;

inline constexpr TrackRectangleResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR TrackRectangleResponse::TrackRectangleResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TrackRectangleResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TrackRectangleResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TrackRectangleResponseDefaultTypeInternal() {}
  union {
    TrackRectangleResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TrackRectangleResponseDefaultTypeInternal _TrackRectangleResponse_default_instance_;

inline constexpr TrackPointResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR TrackPointResponse::TrackPointResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TrackPointResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TrackPointResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TrackPointResponseDefaultTypeInternal() {}
  union {
    TrackPointResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TrackPointResponseDefaultTypeInternal _TrackPointResponse_default_instance_;

inline constexpr TakePhotoResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR TakePhotoResponse::TakePhotoResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TakePhotoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TakePhotoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TakePhotoResponseDefaultTypeInternal() {}
  union {
    TakePhotoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TakePhotoResponseDefaultTypeInternal _TakePhotoResponse_default_instance_;

inline constexpr StorageUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        storage_{nullptr},
        component_id_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StorageUpdate::StorageUpdate(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StorageUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StorageUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StorageUpdateDefaultTypeInternal() {}
  union {
    StorageUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StorageUpdateDefaultTypeInternal _StorageUpdate_default_instance_;

inline constexpr StopVideoStreamingResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR StopVideoStreamingResponse::StopVideoStreamingResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StopVideoStreamingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopVideoStreamingResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopVideoStreamingResponseDefaultTypeInternal() {}
  union {
    StopVideoStreamingResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopVideoStreamingResponseDefaultTypeInternal _StopVideoStreamingResponse_default_instance_;

inline constexpr StopVideoResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR StopVideoResponse::StopVideoResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StopVideoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopVideoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopVideoResponseDefaultTypeInternal() {}
  union {
    StopVideoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopVideoResponseDefaultTypeInternal _StopVideoResponse_default_instance_;

inline constexpr StopPhotoIntervalResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR StopPhotoIntervalResponse::StopPhotoIntervalResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StopPhotoIntervalResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopPhotoIntervalResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopPhotoIntervalResponseDefaultTypeInternal() {}
  union {
    StopPhotoIntervalResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopPhotoIntervalResponseDefaultTypeInternal _StopPhotoIntervalResponse_default_instance_;

inline constexpr StartVideoStreamingResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR StartVideoStreamingResponse::StartVideoStreamingResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StartVideoStreamingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartVideoStreamingResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartVideoStreamingResponseDefaultTypeInternal() {}
  union {
    StartVideoStreamingResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartVideoStreamingResponseDefaultTypeInternal _StartVideoStreamingResponse_default_instance_;

inline constexpr StartVideoResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR StartVideoResponse::StartVideoResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StartVideoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartVideoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartVideoResponseDefaultTypeInternal() {}
  union {
    StartVideoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartVideoResponseDefaultTypeInternal _StartVideoResponse_default_instance_;

inline constexpr StartPhotoIntervalResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR StartPhotoIntervalResponse::StartPhotoIntervalResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StartPhotoIntervalResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartPhotoIntervalResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartPhotoIntervalResponseDefaultTypeInternal() {}
  union {
    StartPhotoIntervalResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartPhotoIntervalResponseDefaultTypeInternal _StartPhotoIntervalResponse_default_instance_;

inline constexpr SettingOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : options_{},
        setting_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        setting_description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        component_id_{0},
        is_range_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SettingOptions::SettingOptions(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SettingOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SettingOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SettingOptionsDefaultTypeInternal() {}
  union {
    SettingOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SettingOptionsDefaultTypeInternal _SettingOptions_default_instance_;

inline constexpr Setting::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        setting_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        setting_description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        option_{nullptr},
        is_range_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Setting::Setting(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SettingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SettingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SettingDefaultTypeInternal() {}
  union {
    Setting _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SettingDefaultTypeInternal _Setting_default_instance_;

inline constexpr SetSettingResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetSettingResponse::SetSettingResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetSettingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetSettingResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetSettingResponseDefaultTypeInternal() {}
  union {
    SetSettingResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetSettingResponseDefaultTypeInternal _SetSettingResponse_default_instance_;

inline constexpr SetModeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetModeResponse::SetModeResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetModeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetModeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetModeResponseDefaultTypeInternal() {}
  union {
    SetModeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetModeResponseDefaultTypeInternal _SetModeResponse_default_instance_;

inline constexpr ResetSettingsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ResetSettingsResponse::ResetSettingsResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ResetSettingsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResetSettingsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResetSettingsResponseDefaultTypeInternal() {}
  union {
    ResetSettingsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResetSettingsResponseDefaultTypeInternal _ResetSettingsResponse_default_instance_;

inline constexpr ModeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        update_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ModeResponse::ModeResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ModeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModeResponseDefaultTypeInternal() {}
  union {
    ModeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModeResponseDefaultTypeInternal _ModeResponse_default_instance_;

inline constexpr GetStorageResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_result_{nullptr},
        storage_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetStorageResponse::GetStorageResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetStorageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetStorageResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetStorageResponseDefaultTypeInternal() {}
  union {
    GetStorageResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetStorageResponseDefaultTypeInternal _GetStorageResponse_default_instance_;

inline constexpr GetModeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_result_{nullptr},
        mode_{static_cast< ::mavsdk::rpc::camera::Mode >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR GetModeResponse::GetModeResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetModeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetModeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetModeResponseDefaultTypeInternal() {}
  union {
    GetModeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetModeResponseDefaultTypeInternal _GetModeResponse_default_instance_;

inline constexpr FormatStorageResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR FormatStorageResponse::FormatStorageResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FormatStorageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FormatStorageResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FormatStorageResponseDefaultTypeInternal() {}
  union {
    FormatStorageResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FormatStorageResponseDefaultTypeInternal _FormatStorageResponse_default_instance_;

inline constexpr FocusStopResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR FocusStopResponse::FocusStopResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FocusStopResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FocusStopResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FocusStopResponseDefaultTypeInternal() {}
  union {
    FocusStopResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FocusStopResponseDefaultTypeInternal _FocusStopResponse_default_instance_;

inline constexpr FocusRangeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR FocusRangeResponse::FocusRangeResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FocusRangeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FocusRangeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FocusRangeResponseDefaultTypeInternal() {}
  union {
    FocusRangeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FocusRangeResponseDefaultTypeInternal _FocusRangeResponse_default_instance_;

inline constexpr FocusOutStartResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR FocusOutStartResponse::FocusOutStartResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FocusOutStartResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FocusOutStartResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FocusOutStartResponseDefaultTypeInternal() {}
  union {
    FocusOutStartResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FocusOutStartResponseDefaultTypeInternal _FocusOutStartResponse_default_instance_;

inline constexpr FocusInStartResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR FocusInStartResponse::FocusInStartResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FocusInStartResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FocusInStartResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FocusInStartResponseDefaultTypeInternal() {}
  union {
    FocusInStartResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FocusInStartResponseDefaultTypeInternal _FocusInStartResponse_default_instance_;

inline constexpr CaptureInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        file_url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        position_{nullptr},
        attitude_quaternion_{nullptr},
        attitude_euler_angle_{nullptr},
        component_id_{0},
        is_success_{false},
        time_utc_us_{::uint64_t{0u}},
        index_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CaptureInfo::CaptureInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CaptureInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CaptureInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CaptureInfoDefaultTypeInternal() {}
  union {
    CaptureInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CaptureInfoDefaultTypeInternal _CaptureInfo_default_instance_;

inline constexpr CameraList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : cameras_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CameraList::CameraList(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CameraListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CameraListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CameraListDefaultTypeInternal() {}
  union {
    CameraList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CameraListDefaultTypeInternal _CameraList_default_instance_;

inline constexpr VideoStreamUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        video_stream_info_{nullptr},
        component_id_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VideoStreamUpdate::VideoStreamUpdate(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VideoStreamUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VideoStreamUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VideoStreamUpdateDefaultTypeInternal() {}
  union {
    VideoStreamUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VideoStreamUpdateDefaultTypeInternal _VideoStreamUpdate_default_instance_;

inline constexpr StorageResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        update_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR StorageResponse::StorageResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StorageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StorageResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StorageResponseDefaultTypeInternal() {}
  union {
    StorageResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StorageResponseDefaultTypeInternal _StorageResponse_default_instance_;

inline constexpr SetSettingRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        setting_{nullptr},
        component_id_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetSettingRequest::SetSettingRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetSettingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetSettingRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetSettingRequestDefaultTypeInternal() {}
  union {
    SetSettingRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetSettingRequestDefaultTypeInternal _SetSettingRequest_default_instance_;

inline constexpr PossibleSettingOptionsUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : setting_options_{},
        component_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PossibleSettingOptionsUpdate::PossibleSettingOptionsUpdate(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PossibleSettingOptionsUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PossibleSettingOptionsUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PossibleSettingOptionsUpdateDefaultTypeInternal() {}
  union {
    PossibleSettingOptionsUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PossibleSettingOptionsUpdateDefaultTypeInternal _PossibleSettingOptionsUpdate_default_instance_;

inline constexpr ListPhotosResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        capture_infos_{},
        camera_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ListPhotosResponse::ListPhotosResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ListPhotosResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListPhotosResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListPhotosResponseDefaultTypeInternal() {}
  union {
    ListPhotosResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListPhotosResponseDefaultTypeInternal _ListPhotosResponse_default_instance_;

inline constexpr GetVideoStreamInfoResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_result_{nullptr},
        video_stream_info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetVideoStreamInfoResponse::GetVideoStreamInfoResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetVideoStreamInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetVideoStreamInfoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetVideoStreamInfoResponseDefaultTypeInternal() {}
  union {
    GetVideoStreamInfoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetVideoStreamInfoResponseDefaultTypeInternal _GetVideoStreamInfoResponse_default_instance_;

inline constexpr GetSettingResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_result_{nullptr},
        setting_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetSettingResponse::GetSettingResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetSettingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSettingResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSettingResponseDefaultTypeInternal() {}
  union {
    GetSettingResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSettingResponseDefaultTypeInternal _GetSettingResponse_default_instance_;

inline constexpr GetSettingRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        setting_{nullptr},
        component_id_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetSettingRequest::GetSettingRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetSettingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSettingRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSettingRequestDefaultTypeInternal() {}
  union {
    GetSettingRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSettingRequestDefaultTypeInternal _GetSettingRequest_default_instance_;

inline constexpr GetPossibleSettingOptionsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        setting_options_{},
        camera_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetPossibleSettingOptionsResponse::GetPossibleSettingOptionsResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetPossibleSettingOptionsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPossibleSettingOptionsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPossibleSettingOptionsResponseDefaultTypeInternal() {}
  union {
    GetPossibleSettingOptionsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPossibleSettingOptionsResponseDefaultTypeInternal _GetPossibleSettingOptionsResponse_default_instance_;

inline constexpr GetCurrentSettingsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        current_settings_{},
        camera_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetCurrentSettingsResponse::GetCurrentSettingsResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetCurrentSettingsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCurrentSettingsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCurrentSettingsResponseDefaultTypeInternal() {}
  union {
    GetCurrentSettingsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCurrentSettingsResponseDefaultTypeInternal _GetCurrentSettingsResponse_default_instance_;

inline constexpr CurrentSettingsUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : current_settings_{},
        component_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CurrentSettingsUpdate::CurrentSettingsUpdate(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CurrentSettingsUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CurrentSettingsUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CurrentSettingsUpdateDefaultTypeInternal() {}
  union {
    CurrentSettingsUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CurrentSettingsUpdateDefaultTypeInternal _CurrentSettingsUpdate_default_instance_;

inline constexpr CaptureInfoResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        capture_info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CaptureInfoResponse::CaptureInfoResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CaptureInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CaptureInfoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CaptureInfoResponseDefaultTypeInternal() {}
  union {
    CaptureInfoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CaptureInfoResponseDefaultTypeInternal _CaptureInfoResponse_default_instance_;

inline constexpr CameraListResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_list_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CameraListResponse::CameraListResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CameraListResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CameraListResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CameraListResponseDefaultTypeInternal() {}
  union {
    CameraListResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CameraListResponseDefaultTypeInternal _CameraListResponse_default_instance_;

inline constexpr VideoStreamInfoResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        update_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR VideoStreamInfoResponse::VideoStreamInfoResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VideoStreamInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VideoStreamInfoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VideoStreamInfoResponseDefaultTypeInternal() {}
  union {
    VideoStreamInfoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VideoStreamInfoResponseDefaultTypeInternal _VideoStreamInfoResponse_default_instance_;

inline constexpr PossibleSettingOptionsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        update_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PossibleSettingOptionsResponse::PossibleSettingOptionsResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PossibleSettingOptionsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PossibleSettingOptionsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PossibleSettingOptionsResponseDefaultTypeInternal() {}
  union {
    PossibleSettingOptionsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PossibleSettingOptionsResponseDefaultTypeInternal _PossibleSettingOptionsResponse_default_instance_;

inline constexpr CurrentSettingsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        update_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CurrentSettingsResponse::CurrentSettingsResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CurrentSettingsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CurrentSettingsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CurrentSettingsResponseDefaultTypeInternal() {}
  union {
    CurrentSettingsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CurrentSettingsResponseDefaultTypeInternal _CurrentSettingsResponse_default_instance_;
}  // namespace camera
}  // namespace rpc
}  // namespace mavsdk
static ::_pb::Metadata file_level_metadata_camera_2fcamera_2eproto[90];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_camera_2fcamera_2eproto[7];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_camera_2fcamera_2eproto = nullptr;
const ::uint32_t TableStruct_camera_2fcamera_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Option, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Option, _impl_.option_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Option, _impl_.option_description_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Setting, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Setting, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Setting, _impl_.setting_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Setting, _impl_.setting_description_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Setting, _impl_.option_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Setting, _impl_.is_range_),
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::SettingOptions, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::SettingOptions, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::SettingOptions, _impl_.setting_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::SettingOptions, _impl_.setting_description_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::SettingOptions, _impl_.options_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::SettingOptions, _impl_.is_range_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::VideoStreamSettings, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::VideoStreamSettings, _impl_.frame_rate_hz_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::VideoStreamSettings, _impl_.horizontal_resolution_pix_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::VideoStreamSettings, _impl_.vertical_resolution_pix_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::VideoStreamSettings, _impl_.bit_rate_b_s_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::VideoStreamSettings, _impl_.rotation_deg_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::VideoStreamSettings, _impl_.uri_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::VideoStreamSettings, _impl_.horizontal_fov_deg_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::VideoStreamInfo, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::VideoStreamInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::VideoStreamInfo, _impl_.stream_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::VideoStreamInfo, _impl_.settings_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::VideoStreamInfo, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::VideoStreamInfo, _impl_.spectrum_),
    ~0u,
    0,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::TakePhotoRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::TakePhotoRequest, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::TakePhotoResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::TakePhotoResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::TakePhotoResponse, _impl_.camera_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StartPhotoIntervalRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StartPhotoIntervalRequest, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StartPhotoIntervalRequest, _impl_.interval_s_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StartPhotoIntervalResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StartPhotoIntervalResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StartPhotoIntervalResponse, _impl_.camera_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StopPhotoIntervalRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StopPhotoIntervalRequest, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StopPhotoIntervalResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StopPhotoIntervalResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StopPhotoIntervalResponse, _impl_.camera_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StartVideoRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StartVideoRequest, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StartVideoResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StartVideoResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StartVideoResponse, _impl_.camera_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StopVideoRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StopVideoRequest, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StopVideoResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StopVideoResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StopVideoResponse, _impl_.camera_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StartVideoStreamingRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StartVideoStreamingRequest, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StartVideoStreamingRequest, _impl_.stream_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StartVideoStreamingResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StartVideoStreamingResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StartVideoStreamingResponse, _impl_.camera_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StopVideoStreamingRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StopVideoStreamingRequest, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StopVideoStreamingRequest, _impl_.stream_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StopVideoStreamingResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StopVideoStreamingResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StopVideoStreamingResponse, _impl_.camera_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::SetModeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::SetModeRequest, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::SetModeRequest, _impl_.mode_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::SetModeResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::SetModeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::SetModeResponse, _impl_.camera_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ListPhotosRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ListPhotosRequest, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ListPhotosRequest, _impl_.photos_range_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ListPhotosResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ListPhotosResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ListPhotosResponse, _impl_.camera_result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ListPhotosResponse, _impl_.capture_infos_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::SubscribeCameraListRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::CameraListResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::CameraListResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::CameraListResponse, _impl_.camera_list_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ModeUpdate, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ModeUpdate, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ModeUpdate, _impl_.mode_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::SubscribeModeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ModeResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ModeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ModeResponse, _impl_.update_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::VideoStreamUpdate, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::VideoStreamUpdate, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::VideoStreamUpdate, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::VideoStreamUpdate, _impl_.video_stream_info_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::SubscribeVideoStreamInfoRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::VideoStreamInfoResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::VideoStreamInfoResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::VideoStreamInfoResponse, _impl_.update_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::SubscribeCaptureInfoRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::CaptureInfoResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::CaptureInfoResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::CaptureInfoResponse, _impl_.capture_info_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Storage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Storage, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Storage, _impl_.video_on_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Storage, _impl_.photo_interval_on_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Storage, _impl_.used_storage_mib_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Storage, _impl_.available_storage_mib_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Storage, _impl_.total_storage_mib_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Storage, _impl_.recording_time_s_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Storage, _impl_.media_folder_name_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Storage, _impl_.storage_status_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Storage, _impl_.storage_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Storage, _impl_.storage_type_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StorageUpdate, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StorageUpdate, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StorageUpdate, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StorageUpdate, _impl_.storage_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::SubscribeStorageRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StorageResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StorageResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::StorageResponse, _impl_.update_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::CurrentSettingsUpdate, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::CurrentSettingsUpdate, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::CurrentSettingsUpdate, _impl_.current_settings_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::SubscribeCurrentSettingsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::CurrentSettingsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::CurrentSettingsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::CurrentSettingsResponse, _impl_.update_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::PossibleSettingOptionsUpdate, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::PossibleSettingOptionsUpdate, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::PossibleSettingOptionsUpdate, _impl_.setting_options_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::SubscribePossibleSettingOptionsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::PossibleSettingOptionsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::PossibleSettingOptionsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::PossibleSettingOptionsResponse, _impl_.update_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::SetSettingRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::SetSettingRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::SetSettingRequest, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::SetSettingRequest, _impl_.setting_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::SetSettingResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::SetSettingResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::SetSettingResponse, _impl_.camera_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetModeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetModeRequest, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetModeResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetModeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetModeResponse, _impl_.camera_result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetModeResponse, _impl_.mode_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetVideoStreamInfoRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetVideoStreamInfoRequest, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetVideoStreamInfoResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetVideoStreamInfoResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetVideoStreamInfoResponse, _impl_.camera_result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetVideoStreamInfoResponse, _impl_.video_stream_info_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetStorageRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetStorageRequest, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetStorageResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetStorageResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetStorageResponse, _impl_.camera_result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetStorageResponse, _impl_.storage_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetCurrentSettingsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetCurrentSettingsRequest, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetCurrentSettingsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetCurrentSettingsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetCurrentSettingsResponse, _impl_.camera_result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetCurrentSettingsResponse, _impl_.current_settings_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetPossibleSettingOptionsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetPossibleSettingOptionsRequest, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetPossibleSettingOptionsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetPossibleSettingOptionsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetPossibleSettingOptionsResponse, _impl_.camera_result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetPossibleSettingOptionsResponse, _impl_.setting_options_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetSettingRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetSettingRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetSettingRequest, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetSettingRequest, _impl_.setting_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetSettingResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetSettingResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetSettingResponse, _impl_.camera_result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::GetSettingResponse, _impl_.setting_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::FormatStorageRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::FormatStorageRequest, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::FormatStorageRequest, _impl_.storage_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::FormatStorageResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::FormatStorageResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::FormatStorageResponse, _impl_.camera_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ResetSettingsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ResetSettingsRequest, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ResetSettingsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ResetSettingsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ResetSettingsResponse, _impl_.camera_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ZoomInStartRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ZoomInStartRequest, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ZoomInStartResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ZoomInStartResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ZoomInStartResponse, _impl_.camera_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ZoomOutStartRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ZoomOutStartRequest, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ZoomOutStartResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ZoomOutStartResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ZoomOutStartResponse, _impl_.camera_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ZoomStopRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ZoomStopRequest, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ZoomStopResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ZoomStopResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ZoomStopResponse, _impl_.camera_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ZoomRangeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ZoomRangeRequest, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ZoomRangeRequest, _impl_.range_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ZoomRangeResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ZoomRangeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::ZoomRangeResponse, _impl_.camera_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::TrackPointRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::TrackPointRequest, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::TrackPointRequest, _impl_.point_x_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::TrackPointRequest, _impl_.point_y_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::TrackPointRequest, _impl_.radius_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::TrackPointResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::TrackPointResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::TrackPointResponse, _impl_.camera_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::TrackRectangleRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::TrackRectangleRequest, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::TrackRectangleRequest, _impl_.top_left_x_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::TrackRectangleRequest, _impl_.top_left_y_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::TrackRectangleRequest, _impl_.bottom_right_x_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::TrackRectangleRequest, _impl_.bottom_right_y_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::TrackRectangleResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::TrackRectangleResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::TrackRectangleResponse, _impl_.camera_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::TrackStopRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::TrackStopRequest, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::TrackStopResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::TrackStopResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::TrackStopResponse, _impl_.camera_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::FocusInStartRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::FocusInStartRequest, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::FocusInStartResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::FocusInStartResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::FocusInStartResponse, _impl_.camera_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::FocusOutStartRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::FocusOutStartRequest, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::FocusOutStartResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::FocusOutStartResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::FocusOutStartResponse, _impl_.camera_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::FocusStopRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::FocusStopRequest, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::FocusStopResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::FocusStopResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::FocusStopResponse, _impl_.camera_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::FocusRangeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::FocusRangeRequest, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::FocusRangeRequest, _impl_.range_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::FocusRangeResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::FocusRangeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::FocusRangeResponse, _impl_.camera_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::CameraResult, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::CameraResult, _impl_.result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::CameraResult, _impl_.result_str_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Position, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Position, _impl_.latitude_deg_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Position, _impl_.longitude_deg_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Position, _impl_.absolute_altitude_m_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Position, _impl_.relative_altitude_m_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Quaternion, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Quaternion, _impl_.w_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Quaternion, _impl_.x_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Quaternion, _impl_.y_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Quaternion, _impl_.z_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::EulerAngle, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::EulerAngle, _impl_.roll_deg_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::EulerAngle, _impl_.pitch_deg_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::EulerAngle, _impl_.yaw_deg_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::CaptureInfo, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::CaptureInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::CaptureInfo, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::CaptureInfo, _impl_.position_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::CaptureInfo, _impl_.attitude_quaternion_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::CaptureInfo, _impl_.attitude_euler_angle_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::CaptureInfo, _impl_.time_utc_us_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::CaptureInfo, _impl_.is_success_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::CaptureInfo, _impl_.index_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::CaptureInfo, _impl_.file_url_),
    ~0u,
    0,
    1,
    2,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Information, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Information, _impl_.component_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Information, _impl_.vendor_name_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Information, _impl_.model_name_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Information, _impl_.focal_length_mm_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Information, _impl_.horizontal_sensor_size_mm_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Information, _impl_.vertical_sensor_size_mm_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Information, _impl_.horizontal_resolution_px_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::Information, _impl_.vertical_resolution_px_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::CameraList, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera::CameraList, _impl_.cameras_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::mavsdk::rpc::camera::Option)},
        {10, 22, -1, sizeof(::mavsdk::rpc::camera::Setting)},
        {26, -1, -1, sizeof(::mavsdk::rpc::camera::SettingOptions)},
        {39, -1, -1, sizeof(::mavsdk::rpc::camera::VideoStreamSettings)},
        {54, 66, -1, sizeof(::mavsdk::rpc::camera::VideoStreamInfo)},
        {70, -1, -1, sizeof(::mavsdk::rpc::camera::TakePhotoRequest)},
        {79, 88, -1, sizeof(::mavsdk::rpc::camera::TakePhotoResponse)},
        {89, -1, -1, sizeof(::mavsdk::rpc::camera::StartPhotoIntervalRequest)},
        {99, 108, -1, sizeof(::mavsdk::rpc::camera::StartPhotoIntervalResponse)},
        {109, -1, -1, sizeof(::mavsdk::rpc::camera::StopPhotoIntervalRequest)},
        {118, 127, -1, sizeof(::mavsdk::rpc::camera::StopPhotoIntervalResponse)},
        {128, -1, -1, sizeof(::mavsdk::rpc::camera::StartVideoRequest)},
        {137, 146, -1, sizeof(::mavsdk::rpc::camera::StartVideoResponse)},
        {147, -1, -1, sizeof(::mavsdk::rpc::camera::StopVideoRequest)},
        {156, 165, -1, sizeof(::mavsdk::rpc::camera::StopVideoResponse)},
        {166, -1, -1, sizeof(::mavsdk::rpc::camera::StartVideoStreamingRequest)},
        {176, 185, -1, sizeof(::mavsdk::rpc::camera::StartVideoStreamingResponse)},
        {186, -1, -1, sizeof(::mavsdk::rpc::camera::StopVideoStreamingRequest)},
        {196, 205, -1, sizeof(::mavsdk::rpc::camera::StopVideoStreamingResponse)},
        {206, -1, -1, sizeof(::mavsdk::rpc::camera::SetModeRequest)},
        {216, 225, -1, sizeof(::mavsdk::rpc::camera::SetModeResponse)},
        {226, -1, -1, sizeof(::mavsdk::rpc::camera::ListPhotosRequest)},
        {236, 246, -1, sizeof(::mavsdk::rpc::camera::ListPhotosResponse)},
        {248, -1, -1, sizeof(::mavsdk::rpc::camera::SubscribeCameraListRequest)},
        {256, 265, -1, sizeof(::mavsdk::rpc::camera::CameraListResponse)},
        {266, -1, -1, sizeof(::mavsdk::rpc::camera::ModeUpdate)},
        {276, -1, -1, sizeof(::mavsdk::rpc::camera::SubscribeModeRequest)},
        {284, 293, -1, sizeof(::mavsdk::rpc::camera::ModeResponse)},
        {294, 304, -1, sizeof(::mavsdk::rpc::camera::VideoStreamUpdate)},
        {306, -1, -1, sizeof(::mavsdk::rpc::camera::SubscribeVideoStreamInfoRequest)},
        {314, 323, -1, sizeof(::mavsdk::rpc::camera::VideoStreamInfoResponse)},
        {324, -1, -1, sizeof(::mavsdk::rpc::camera::SubscribeCaptureInfoRequest)},
        {332, 341, -1, sizeof(::mavsdk::rpc::camera::CaptureInfoResponse)},
        {342, -1, -1, sizeof(::mavsdk::rpc::camera::Storage)},
        {361, 371, -1, sizeof(::mavsdk::rpc::camera::StorageUpdate)},
        {373, -1, -1, sizeof(::mavsdk::rpc::camera::SubscribeStorageRequest)},
        {381, 390, -1, sizeof(::mavsdk::rpc::camera::StorageResponse)},
        {391, -1, -1, sizeof(::mavsdk::rpc::camera::CurrentSettingsUpdate)},
        {401, -1, -1, sizeof(::mavsdk::rpc::camera::SubscribeCurrentSettingsRequest)},
        {409, 418, -1, sizeof(::mavsdk::rpc::camera::CurrentSettingsResponse)},
        {419, -1, -1, sizeof(::mavsdk::rpc::camera::PossibleSettingOptionsUpdate)},
        {429, -1, -1, sizeof(::mavsdk::rpc::camera::SubscribePossibleSettingOptionsRequest)},
        {437, 446, -1, sizeof(::mavsdk::rpc::camera::PossibleSettingOptionsResponse)},
        {447, 457, -1, sizeof(::mavsdk::rpc::camera::SetSettingRequest)},
        {459, 468, -1, sizeof(::mavsdk::rpc::camera::SetSettingResponse)},
        {469, -1, -1, sizeof(::mavsdk::rpc::camera::GetModeRequest)},
        {478, 488, -1, sizeof(::mavsdk::rpc::camera::GetModeResponse)},
        {490, -1, -1, sizeof(::mavsdk::rpc::camera::GetVideoStreamInfoRequest)},
        {499, 509, -1, sizeof(::mavsdk::rpc::camera::GetVideoStreamInfoResponse)},
        {511, -1, -1, sizeof(::mavsdk::rpc::camera::GetStorageRequest)},
        {520, 530, -1, sizeof(::mavsdk::rpc::camera::GetStorageResponse)},
        {532, -1, -1, sizeof(::mavsdk::rpc::camera::GetCurrentSettingsRequest)},
        {541, 551, -1, sizeof(::mavsdk::rpc::camera::GetCurrentSettingsResponse)},
        {553, -1, -1, sizeof(::mavsdk::rpc::camera::GetPossibleSettingOptionsRequest)},
        {562, 572, -1, sizeof(::mavsdk::rpc::camera::GetPossibleSettingOptionsResponse)},
        {574, 584, -1, sizeof(::mavsdk::rpc::camera::GetSettingRequest)},
        {586, 596, -1, sizeof(::mavsdk::rpc::camera::GetSettingResponse)},
        {598, -1, -1, sizeof(::mavsdk::rpc::camera::FormatStorageRequest)},
        {608, 617, -1, sizeof(::mavsdk::rpc::camera::FormatStorageResponse)},
        {618, -1, -1, sizeof(::mavsdk::rpc::camera::ResetSettingsRequest)},
        {627, 636, -1, sizeof(::mavsdk::rpc::camera::ResetSettingsResponse)},
        {637, -1, -1, sizeof(::mavsdk::rpc::camera::ZoomInStartRequest)},
        {646, 655, -1, sizeof(::mavsdk::rpc::camera::ZoomInStartResponse)},
        {656, -1, -1, sizeof(::mavsdk::rpc::camera::ZoomOutStartRequest)},
        {665, 674, -1, sizeof(::mavsdk::rpc::camera::ZoomOutStartResponse)},
        {675, -1, -1, sizeof(::mavsdk::rpc::camera::ZoomStopRequest)},
        {684, 693, -1, sizeof(::mavsdk::rpc::camera::ZoomStopResponse)},
        {694, -1, -1, sizeof(::mavsdk::rpc::camera::ZoomRangeRequest)},
        {704, 713, -1, sizeof(::mavsdk::rpc::camera::ZoomRangeResponse)},
        {714, -1, -1, sizeof(::mavsdk::rpc::camera::TrackPointRequest)},
        {726, 735, -1, sizeof(::mavsdk::rpc::camera::TrackPointResponse)},
        {736, -1, -1, sizeof(::mavsdk::rpc::camera::TrackRectangleRequest)},
        {749, 758, -1, sizeof(::mavsdk::rpc::camera::TrackRectangleResponse)},
        {759, -1, -1, sizeof(::mavsdk::rpc::camera::TrackStopRequest)},
        {768, 777, -1, sizeof(::mavsdk::rpc::camera::TrackStopResponse)},
        {778, -1, -1, sizeof(::mavsdk::rpc::camera::FocusInStartRequest)},
        {787, 796, -1, sizeof(::mavsdk::rpc::camera::FocusInStartResponse)},
        {797, -1, -1, sizeof(::mavsdk::rpc::camera::FocusOutStartRequest)},
        {806, 815, -1, sizeof(::mavsdk::rpc::camera::FocusOutStartResponse)},
        {816, -1, -1, sizeof(::mavsdk::rpc::camera::FocusStopRequest)},
        {825, 834, -1, sizeof(::mavsdk::rpc::camera::FocusStopResponse)},
        {835, -1, -1, sizeof(::mavsdk::rpc::camera::FocusRangeRequest)},
        {845, 854, -1, sizeof(::mavsdk::rpc::camera::FocusRangeResponse)},
        {855, -1, -1, sizeof(::mavsdk::rpc::camera::CameraResult)},
        {865, -1, -1, sizeof(::mavsdk::rpc::camera::Position)},
        {877, -1, -1, sizeof(::mavsdk::rpc::camera::Quaternion)},
        {889, -1, -1, sizeof(::mavsdk::rpc::camera::EulerAngle)},
        {900, 916, -1, sizeof(::mavsdk::rpc::camera::CaptureInfo)},
        {924, -1, -1, sizeof(::mavsdk::rpc::camera::Information)},
        {940, -1, -1, sizeof(::mavsdk::rpc::camera::CameraList)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::mavsdk::rpc::camera::_Option_default_instance_._instance,
    &::mavsdk::rpc::camera::_Setting_default_instance_._instance,
    &::mavsdk::rpc::camera::_SettingOptions_default_instance_._instance,
    &::mavsdk::rpc::camera::_VideoStreamSettings_default_instance_._instance,
    &::mavsdk::rpc::camera::_VideoStreamInfo_default_instance_._instance,
    &::mavsdk::rpc::camera::_TakePhotoRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_TakePhotoResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_StartPhotoIntervalRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_StartPhotoIntervalResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_StopPhotoIntervalRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_StopPhotoIntervalResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_StartVideoRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_StartVideoResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_StopVideoRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_StopVideoResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_StartVideoStreamingRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_StartVideoStreamingResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_StopVideoStreamingRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_StopVideoStreamingResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_SetModeRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_SetModeResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_ListPhotosRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_ListPhotosResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_SubscribeCameraListRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_CameraListResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_ModeUpdate_default_instance_._instance,
    &::mavsdk::rpc::camera::_SubscribeModeRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_ModeResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_VideoStreamUpdate_default_instance_._instance,
    &::mavsdk::rpc::camera::_SubscribeVideoStreamInfoRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_VideoStreamInfoResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_SubscribeCaptureInfoRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_CaptureInfoResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_Storage_default_instance_._instance,
    &::mavsdk::rpc::camera::_StorageUpdate_default_instance_._instance,
    &::mavsdk::rpc::camera::_SubscribeStorageRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_StorageResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_CurrentSettingsUpdate_default_instance_._instance,
    &::mavsdk::rpc::camera::_SubscribeCurrentSettingsRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_CurrentSettingsResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_PossibleSettingOptionsUpdate_default_instance_._instance,
    &::mavsdk::rpc::camera::_SubscribePossibleSettingOptionsRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_PossibleSettingOptionsResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_SetSettingRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_SetSettingResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_GetModeRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_GetModeResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_GetVideoStreamInfoRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_GetVideoStreamInfoResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_GetStorageRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_GetStorageResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_GetCurrentSettingsRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_GetCurrentSettingsResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_GetPossibleSettingOptionsRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_GetPossibleSettingOptionsResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_GetSettingRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_GetSettingResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_FormatStorageRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_FormatStorageResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_ResetSettingsRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_ResetSettingsResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_ZoomInStartRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_ZoomInStartResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_ZoomOutStartRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_ZoomOutStartResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_ZoomStopRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_ZoomStopResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_ZoomRangeRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_ZoomRangeResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_TrackPointRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_TrackPointResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_TrackRectangleRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_TrackRectangleResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_TrackStopRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_TrackStopResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_FocusInStartRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_FocusInStartResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_FocusOutStartRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_FocusOutStartResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_FocusStopRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_FocusStopResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_FocusRangeRequest_default_instance_._instance,
    &::mavsdk::rpc::camera::_FocusRangeResponse_default_instance_._instance,
    &::mavsdk::rpc::camera::_CameraResult_default_instance_._instance,
    &::mavsdk::rpc::camera::_Position_default_instance_._instance,
    &::mavsdk::rpc::camera::_Quaternion_default_instance_._instance,
    &::mavsdk::rpc::camera::_EulerAngle_default_instance_._instance,
    &::mavsdk::rpc::camera::_CaptureInfo_default_instance_._instance,
    &::mavsdk::rpc::camera::_Information_default_instance_._instance,
    &::mavsdk::rpc::camera::_CameraList_default_instance_._instance,
};
const char descriptor_table_protodef_camera_2fcamera_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\023camera/camera.proto\022\021mavsdk.rpc.camera"
    "\032\024mavsdk_options.proto\"7\n\006Option\022\021\n\topti"
    "on_id\030\001 \001(\t\022\032\n\022option_description\030\002 \001(\t\""
    "w\n\007Setting\022\022\n\nsetting_id\030\001 \001(\t\022\033\n\023settin"
    "g_description\030\002 \001(\t\022)\n\006option\030\003 \001(\0132\031.ma"
    "vsdk.rpc.camera.Option\022\020\n\010is_range\030\004 \001(\010"
    "\"\225\001\n\016SettingOptions\022\024\n\014component_id\030\001 \001("
    "\005\022\022\n\nsetting_id\030\002 \001(\t\022\033\n\023setting_descrip"
    "tion\030\003 \001(\t\022*\n\007options\030\004 \003(\0132\031.mavsdk.rpc"
    ".camera.Option\022\020\n\010is_range\030\005 \001(\010\"\305\001\n\023Vid"
    "eoStreamSettings\022\025\n\rframe_rate_hz\030\001 \001(\002\022"
    "!\n\031horizontal_resolution_pix\030\002 \001(\r\022\037\n\027ve"
    "rtical_resolution_pix\030\003 \001(\r\022\024\n\014bit_rate_"
    "b_s\030\004 \001(\r\022\024\n\014rotation_deg\030\005 \001(\r\022\013\n\003uri\030\006"
    " \001(\t\022\032\n\022horizontal_fov_deg\030\007 \001(\002\"\325\003\n\017Vid"
    "eoStreamInfo\022\021\n\tstream_id\030\001 \001(\005\0228\n\010setti"
    "ngs\030\002 \001(\0132&.mavsdk.rpc.camera.VideoStrea"
    "mSettings\022D\n\006status\030\003 \001(\01624.mavsdk.rpc.c"
    "amera.VideoStreamInfo.VideoStreamStatus\022"
    "H\n\010spectrum\030\004 \001(\01626.mavsdk.rpc.camera.Vi"
    "deoStreamInfo.VideoStreamSpectrum\"]\n\021Vid"
    "eoStreamStatus\022#\n\037VIDEO_STREAM_STATUS_NO"
    "T_RUNNING\020\000\022#\n\037VIDEO_STREAM_STATUS_IN_PR"
    "OGRESS\020\001\"\205\001\n\023VideoStreamSpectrum\022!\n\035VIDE"
    "O_STREAM_SPECTRUM_UNKNOWN\020\000\022\'\n#VIDEO_STR"
    "EAM_SPECTRUM_VISIBLE_LIGHT\020\001\022\"\n\036VIDEO_ST"
    "REAM_SPECTRUM_INFRARED\020\002\"(\n\020TakePhotoReq"
    "uest\022\024\n\014component_id\030\001 \001(\005\"K\n\021TakePhotoR"
    "esponse\0226\n\rcamera_result\030\001 \001(\0132\037.mavsdk."
    "rpc.camera.CameraResult\"E\n\031StartPhotoInt"
    "ervalRequest\022\024\n\014component_id\030\001 \001(\005\022\022\n\nin"
    "terval_s\030\002 \001(\002\"T\n\032StartPhotoIntervalResp"
    "onse\0226\n\rcamera_result\030\001 \001(\0132\037.mavsdk.rpc"
    ".camera.CameraResult\"0\n\030StopPhotoInterva"
    "lRequest\022\024\n\014component_id\030\001 \001(\005\"S\n\031StopPh"
    "otoIntervalResponse\0226\n\rcamera_result\030\001 \001"
    "(\0132\037.mavsdk.rpc.camera.CameraResult\")\n\021S"
    "tartVideoRequest\022\024\n\014component_id\030\001 \001(\005\"L"
    "\n\022StartVideoResponse\0226\n\rcamera_result\030\001 "
    "\001(\0132\037.mavsdk.rpc.camera.CameraResult\"(\n\020"
    "StopVideoRequest\022\024\n\014component_id\030\001 \001(\005\"K"
    "\n\021StopVideoResponse\0226\n\rcamera_result\030\001 \001"
    "(\0132\037.mavsdk.rpc.camera.CameraResult\"E\n\032S"
    "tartVideoStreamingRequest\022\024\n\014component_i"
    "d\030\001 \001(\005\022\021\n\tstream_id\030\002 \001(\005\"U\n\033StartVideo"
    "StreamingResponse\0226\n\rcamera_result\030\001 \001(\013"
    "2\037.mavsdk.rpc.camera.CameraResult\"D\n\031Sto"
    "pVideoStreamingRequest\022\024\n\014component_id\030\001"
    " \001(\005\022\021\n\tstream_id\030\002 \001(\005\"T\n\032StopVideoStre"
    "amingResponse\0226\n\rcamera_result\030\001 \001(\0132\037.m"
    "avsdk.rpc.camera.CameraResult\"M\n\016SetMode"
    "Request\022\024\n\014component_id\030\001 \001(\005\022%\n\004mode\030\002 "
    "\001(\0162\027.mavsdk.rpc.camera.Mode\"I\n\017SetModeR"
    "esponse\0226\n\rcamera_result\030\001 \001(\0132\037.mavsdk."
    "rpc.camera.CameraResult\"_\n\021ListPhotosReq"
    "uest\022\024\n\014component_id\030\001 \001(\005\0224\n\014photos_ran"
    "ge\030\002 \001(\0162\036.mavsdk.rpc.camera.PhotosRange"
    "\"\203\001\n\022ListPhotosResponse\0226\n\rcamera_result"
    "\030\001 \001(\0132\037.mavsdk.rpc.camera.CameraResult\022"
    "5\n\rcapture_infos\030\002 \003(\0132\036.mavsdk.rpc.came"
    "ra.CaptureInfo\"\034\n\032SubscribeCameraListReq"
    "uest\"H\n\022CameraListResponse\0222\n\013camera_lis"
    "t\030\001 \001(\0132\035.mavsdk.rpc.camera.CameraList\"I"
    "\n\nModeUpdate\022\024\n\014component_id\030\001 \001(\005\022%\n\004mo"
    "de\030\002 \001(\0162\027.mavsdk.rpc.camera.Mode\"\026\n\024Sub"
    "scribeModeRequest\"=\n\014ModeResponse\022-\n\006upd"
    "ate\030\001 \001(\0132\035.mavsdk.rpc.camera.ModeUpdate"
    "\"h\n\021VideoStreamUpdate\022\024\n\014component_id\030\001 "
    "\001(\005\022=\n\021video_stream_info\030\002 \001(\0132\".mavsdk."
    "rpc.camera.VideoStreamInfo\"!\n\037SubscribeV"
    "ideoStreamInfoRequest\"O\n\027VideoStreamInfo"
    "Response\0224\n\006update\030\001 \001(\0132$.mavsdk.rpc.ca"
    "mera.VideoStreamUpdate\"\035\n\033SubscribeCaptu"
    "reInfoRequest\"K\n\023CaptureInfoResponse\0224\n\014"
    "capture_info\030\001 \001(\0132\036.mavsdk.rpc.camera.C"
    "aptureInfo\"\240\005\n\007Storage\022\024\n\014component_id\030\001"
    " \001(\005\022\020\n\010video_on\030\002 \001(\010\022\031\n\021photo_interval"
    "_on\030\003 \001(\010\022\030\n\020used_storage_mib\030\004 \001(\002\022\035\n\025a"
    "vailable_storage_mib\030\005 \001(\002\022\031\n\021total_stor"
    "age_mib\030\006 \001(\002\022\030\n\020recording_time_s\030\007 \001(\002\022"
    "\031\n\021media_folder_name\030\010 \001(\t\022@\n\016storage_st"
    "atus\030\t \001(\0162(.mavsdk.rpc.camera.Storage.S"
    "torageStatus\022\022\n\nstorage_id\030\n \001(\r\022<\n\014stor"
    "age_type\030\013 \001(\0162&.mavsdk.rpc.camera.Stora"
    "ge.StorageType\"\221\001\n\rStorageStatus\022 \n\034STOR"
    "AGE_STATUS_NOT_AVAILABLE\020\000\022\036\n\032STORAGE_ST"
    "ATUS_UNFORMATTED\020\001\022\034\n\030STORAGE_STATUS_FOR"
    "MATTED\020\002\022 \n\034STORAGE_STATUS_NOT_SUPPORTED"
    "\020\003\"\240\001\n\013StorageType\022\030\n\024STORAGE_TYPE_UNKNO"
    "WN\020\000\022\032\n\026STORAGE_TYPE_USB_STICK\020\001\022\023\n\017STOR"
    "AGE_TYPE_SD\020\002\022\030\n\024STORAGE_TYPE_MICROSD\020\003\022"
    "\023\n\017STORAGE_TYPE_HD\020\007\022\027\n\022STORAGE_TYPE_OTH"
    "ER\020\376\001\"R\n\rStorageUpdate\022\024\n\014component_id\030\001"
    " \001(\005\022+\n\007storage\030\002 \001(\0132\032.mavsdk.rpc.camer"
    "a.Storage\"\031\n\027SubscribeStorageRequest\"C\n\017"
    "StorageResponse\0220\n\006update\030\001 \001(\0132 .mavsdk"
    ".rpc.camera.StorageUpdate\"c\n\025CurrentSett"
    "ingsUpdate\022\024\n\014component_id\030\001 \001(\005\0224\n\020curr"
    "ent_settings\030\002 \003(\0132\032.mavsdk.rpc.camera.S"
    "etting\"!\n\037SubscribeCurrentSettingsReques"
    "t\"S\n\027CurrentSettingsResponse\0228\n\006update\030\001"
    " \001(\0132(.mavsdk.rpc.camera.CurrentSettings"
    "Update\"p\n\034PossibleSettingOptionsUpdate\022\024"
    "\n\014component_id\030\001 \001(\005\022:\n\017setting_options\030"
    "\002 \003(\0132!.mavsdk.rpc.camera.SettingOptions"
    "\"(\n&SubscribePossibleSettingOptionsReque"
    "st\"a\n\036PossibleSettingOptionsResponse\022\?\n\006"
    "update\030\001 \001(\0132/.mavsdk.rpc.camera.Possibl"
    "eSettingOptionsUpdate\"V\n\021SetSettingReque"
    "st\022\024\n\014component_id\030\001 \001(\005\022+\n\007setting\030\002 \001("
    "\0132\032.mavsdk.rpc.camera.Setting\"L\n\022SetSett"
    "ingResponse\0226\n\rcamera_result\030\001 \001(\0132\037.mav"
    "sdk.rpc.camera.CameraResult\"&\n\016GetModeRe"
    "quest\022\024\n\014component_id\030\001 \001(\005\"p\n\017GetModeRe"
    "sponse\0226\n\rcamera_result\030\001 \001(\0132\037.mavsdk.r"
    "pc.camera.CameraResult\022%\n\004mode\030\002 \001(\0162\027.m"
    "avsdk.rpc.camera.Mode\"1\n\031GetVideoStreamI"
    "nfoRequest\022\024\n\014component_id\030\001 \001(\005\"\223\001\n\032Get"
    "VideoStreamInfoResponse\0226\n\rcamera_result"
    "\030\001 \001(\0132\037.mavsdk.rpc.camera.CameraResult\022"
    "=\n\021video_stream_info\030\002 \001(\0132\".mavsdk.rpc."
    "camera.VideoStreamInfo\")\n\021GetStorageRequ"
    "est\022\024\n\014component_id\030\001 \001(\005\"y\n\022GetStorageR"
    "esponse\0226\n\rcamera_result\030\001 \001(\0132\037.mavsdk."
    "rpc.camera.CameraResult\022+\n\007storage\030\002 \001(\013"
    "2\032.mavsdk.rpc.camera.Storage\"1\n\031GetCurre"
    "ntSettingsRequest\022\024\n\014component_id\030\001 \001(\005\""
    "\212\001\n\032GetCurrentSettingsResponse\0226\n\rcamera"
    "_result\030\001 \001(\0132\037.mavsdk.rpc.camera.Camera"
    "Result\0224\n\020current_settings\030\002 \003(\0132\032.mavsd"
    "k.rpc.camera.Setting\"8\n GetPossibleSetti"
    "ngOptionsRequest\022\024\n\014component_id\030\001 \001(\005\"\227"
    "\001\n!GetPossibleSettingOptionsResponse\0226\n\r"
    "camera_result\030\001 \001(\0132\037.mavsdk.rpc.camera."
    "CameraResult\022:\n\017setting_options\030\002 \003(\0132!."
    "mavsdk.rpc.camera.SettingOptions\"V\n\021GetS"
    "ettingRequest\022\024\n\014component_id\030\001 \001(\005\022+\n\007s"
    "etting\030\002 \001(\0132\032.mavsdk.rpc.camera.Setting"
    "\"y\n\022GetSettingResponse\0226\n\rcamera_result\030"
    "\001 \001(\0132\037.mavsdk.rpc.camera.CameraResult\022+"
    "\n\007setting\030\002 \001(\0132\032.mavsdk.rpc.camera.Sett"
    "ing\"@\n\024FormatStorageRequest\022\024\n\014component"
    "_id\030\001 \001(\005\022\022\n\nstorage_id\030\002 \001(\005\"O\n\025FormatS"
    "torageResponse\0226\n\rcamera_result\030\001 \001(\0132\037."
    "mavsdk.rpc.camera.CameraResult\",\n\024ResetS"
    "ettingsRequest\022\024\n\014component_id\030\001 \001(\005\"O\n\025"
    "ResetSettingsResponse\0226\n\rcamera_result\030\001"
    " \001(\0132\037.mavsdk.rpc.camera.CameraResult\"*\n"
    "\022ZoomInStartRequest\022\024\n\014component_id\030\001 \001("
    "\005\"M\n\023ZoomInStartResponse\0226\n\rcamera_resul"
    "t\030\001 \001(\0132\037.mavsdk.rpc.camera.CameraResult"
    "\"+\n\023ZoomOutStartRequest\022\024\n\014component_id\030"
    "\001 \001(\005\"N\n\024ZoomOutStartResponse\0226\n\rcamera_"
    "result\030\001 \001(\0132\037.mavsdk.rpc.camera.CameraR"
    "esult\"\'\n\017ZoomStopRequest\022\024\n\014component_id"
    "\030\001 \001(\005\"J\n\020ZoomStopResponse\0226\n\rcamera_res"
    "ult\030\001 \001(\0132\037.mavsdk.rpc.camera.CameraResu"
    "lt\"7\n\020ZoomRangeRequest\022\024\n\014component_id\030\001"
    " \001(\005\022\r\n\005range\030\002 \001(\002\"K\n\021ZoomRangeResponse"
    "\0226\n\rcamera_result\030\001 \001(\0132\037.mavsdk.rpc.cam"
    "era.CameraResult\"[\n\021TrackPointRequest\022\024\n"
    "\014component_id\030\001 \001(\005\022\017\n\007point_x\030\002 \001(\002\022\017\n\007"
    "point_y\030\003 \001(\002\022\016\n\006radius\030\004 \001(\002\"L\n\022TrackPo"
    "intResponse\0226\n\rcamera_result\030\001 \001(\0132\037.mav"
    "sdk.rpc.camera.CameraResult\"\205\001\n\025TrackRec"
    "tangleRequest\022\024\n\014component_id\030\001 \001(\005\022\022\n\nt"
    "op_left_x\030\002 \001(\002\022\022\n\ntop_left_y\030\003 \001(\002\022\026\n\016b"
    "ottom_right_x\030\004 \001(\002\022\026\n\016bottom_right_y\030\005 "
    "\001(\002\"P\n\026TrackRectangleResponse\0226\n\rcamera_"
    "result\030\001 \001(\0132\037.mavsdk.rpc.camera.CameraR"
    "esult\"(\n\020TrackStopRequest\022\024\n\014component_i"
    "d\030\001 \001(\005\"K\n\021TrackStopResponse\0226\n\rcamera_r"
    "esult\030\001 \001(\0132\037.mavsdk.rpc.camera.CameraRe"
    "sult\"+\n\023FocusInStartRequest\022\024\n\014component"
    "_id\030\001 \001(\005\"N\n\024FocusInStartResponse\0226\n\rcam"
    "era_result\030\001 \001(\0132\037.mavsdk.rpc.camera.Cam"
    "eraResult\",\n\024FocusOutStartRequest\022\024\n\014com"
    "ponent_id\030\001 \001(\005\"O\n\025FocusOutStartResponse"
    "\0226\n\rcamera_result\030\001 \001(\0132\037.mavsdk.rpc.cam"
    "era.CameraResult\"(\n\020FocusStopRequest\022\024\n\014"
    "component_id\030\001 \001(\005\"K\n\021FocusStopResponse\022"
    "6\n\rcamera_result\030\001 \001(\0132\037.mavsdk.rpc.came"
    "ra.CameraResult\"8\n\021FocusRangeRequest\022\024\n\014"
    "component_id\030\001 \001(\005\022\r\n\005range\030\002 \001(\002\"L\n\022Foc"
    "usRangeResponse\0226\n\rcamera_result\030\001 \001(\0132\037"
    ".mavsdk.rpc.camera.CameraResult\"\226\003\n\014Came"
    "raResult\0226\n\006result\030\001 \001(\0162&.mavsdk.rpc.ca"
    "mera.CameraResult.Result\022\022\n\nresult_str\030\002"
    " \001(\t\"\271\002\n\006Result\022\022\n\016RESULT_UNKNOWN\020\000\022\022\n\016R"
    "ESULT_SUCCESS\020\001\022\026\n\022RESULT_IN_PROGRESS\020\002\022"
    "\017\n\013RESULT_BUSY\020\003\022\021\n\rRESULT_DENIED\020\004\022\020\n\014R"
    "ESULT_ERROR\020\005\022\022\n\016RESULT_TIMEOUT\020\006\022\031\n\025RES"
    "ULT_WRONG_ARGUMENT\020\007\022\024\n\020RESULT_NO_SYSTEM"
    "\020\010\022\037\n\033RESULT_PROTOCOL_UNSUPPORTED\020\t\022\026\n\022R"
    "ESULT_UNAVAILABLE\020\n\022\034\n\030RESULT_CAMERA_ID_"
    "INVALID\020\013\022\035\n\031RESULT_ACTION_UNSUPPORTED\020\014"
    "\"q\n\010Position\022\024\n\014latitude_deg\030\001 \001(\001\022\025\n\rlo"
    "ngitude_deg\030\002 \001(\001\022\033\n\023absolute_altitude_m"
    "\030\003 \001(\002\022\033\n\023relative_altitude_m\030\004 \001(\002\"8\n\nQ"
    "uaternion\022\t\n\001w\030\001 \001(\002\022\t\n\001x\030\002 \001(\002\022\t\n\001y\030\003 \001"
    "(\002\022\t\n\001z\030\004 \001(\002\"B\n\nEulerAngle\022\020\n\010roll_deg\030"
    "\001 \001(\002\022\021\n\tpitch_deg\030\002 \001(\002\022\017\n\007yaw_deg\030\003 \001("
    "\002\"\225\002\n\013CaptureInfo\022\024\n\014component_id\030\001 \001(\005\022"
    "-\n\010position\030\002 \001(\0132\033.mavsdk.rpc.camera.Po"
    "sition\022:\n\023attitude_quaternion\030\003 \001(\0132\035.ma"
    "vsdk.rpc.camera.Quaternion\022;\n\024attitude_e"
    "uler_angle\030\004 \001(\0132\035.mavsdk.rpc.camera.Eul"
    "erAngle\022\023\n\013time_utc_us\030\005 \001(\004\022\022\n\nis_succe"
    "ss\030\006 \001(\010\022\r\n\005index\030\007 \001(\005\022\020\n\010file_url\030\010 \001("
    "\t\"\353\001\n\013Information\022\024\n\014component_id\030\001 \001(\005\022"
    "\023\n\013vendor_name\030\002 \001(\t\022\022\n\nmodel_name\030\003 \001(\t"
    "\022\027\n\017focal_length_mm\030\004 \001(\002\022!\n\031horizontal_"
    "sensor_size_mm\030\005 \001(\002\022\037\n\027vertical_sensor_"
    "size_mm\030\006 \001(\002\022 \n\030horizontal_resolution_p"
    "x\030\007 \001(\r\022\036\n\026vertical_resolution_px\030\010 \001(\r\""
    "=\n\nCameraList\022/\n\007cameras\030\001 \003(\0132\036.mavsdk."
    "rpc.camera.Information*8\n\004Mode\022\020\n\014MODE_U"
    "NKNOWN\020\000\022\016\n\nMODE_PHOTO\020\001\022\016\n\nMODE_VIDEO\020\002"
    "*F\n\013PhotosRange\022\024\n\020PHOTOS_RANGE_ALL\020\000\022!\n"
    "\035PHOTOS_RANGE_SINCE_CONNECTION\020\0012\335\035\n\rCam"
    "eraService\022X\n\tTakePhoto\022#.mavsdk.rpc.cam"
    "era.TakePhotoRequest\032$.mavsdk.rpc.camera"
    ".TakePhotoResponse\"\000\022s\n\022StartPhotoInterv"
    "al\022,.mavsdk.rpc.camera.StartPhotoInterva"
    "lRequest\032-.mavsdk.rpc.camera.StartPhotoI"
    "ntervalResponse\"\000\022p\n\021StopPhotoInterval\022+"
    ".mavsdk.rpc.camera.StopPhotoIntervalRequ"
    "est\032,.mavsdk.rpc.camera.StopPhotoInterva"
    "lResponse\"\000\022[\n\nStartVideo\022$.mavsdk.rpc.c"
    "amera.StartVideoRequest\032%.mavsdk.rpc.cam"
    "era.StartVideoResponse\"\000\022X\n\tStopVideo\022#."
    "mavsdk.rpc.camera.StopVideoRequest\032$.mav"
    "sdk.rpc.camera.StopVideoResponse\"\000\022z\n\023St"
    "artVideoStreaming\022-.mavsdk.rpc.camera.St"
    "artVideoStreamingRequest\032..mavsdk.rpc.ca"
    "mera.StartVideoStreamingResponse\"\004\200\265\030\001\022w"
    "\n\022StopVideoStreaming\022,.mavsdk.rpc.camera"
    ".StopVideoStreamingRequest\032-.mavsdk.rpc."
    "camera.StopVideoStreamingResponse\"\004\200\265\030\001\022"
    "R\n\007SetMode\022!.mavsdk.rpc.camera.SetModeRe"
    "quest\032\".mavsdk.rpc.camera.SetModeRespons"
    "e\"\000\022[\n\nListPhotos\022$.mavsdk.rpc.camera.Li"
    "stPhotosRequest\032%.mavsdk.rpc.camera.List"
    "PhotosResponse\"\000\022o\n\023SubscribeCameraList\022"
    "-.mavsdk.rpc.camera.SubscribeCameraListR"
    "equest\032%.mavsdk.rpc.camera.CameraListRes"
    "ponse\"\0000\001\022a\n\rSubscribeMode\022\'.mavsdk.rpc."
    "camera.SubscribeModeRequest\032\037.mavsdk.rpc"
    ".camera.ModeResponse\"\004\200\265\030\0000\001\022V\n\007GetMode\022"
    "!.mavsdk.rpc.camera.GetModeRequest\032\".mav"
    "sdk.rpc.camera.GetModeResponse\"\004\200\265\030\001\022\202\001\n"
    "\030SubscribeVideoStreamInfo\0222.mavsdk.rpc.c"
    "amera.SubscribeVideoStreamInfoRequest\032*."
    "mavsdk.rpc.camera.VideoStreamInfoRespons"
    "e\"\004\200\265\030\0000\001\022w\n\022GetVideoStreamInfo\022,.mavsdk"
    ".rpc.camera.GetVideoStreamInfoRequest\032-."
    "mavsdk.rpc.camera.GetVideoStreamInfoResp"
    "onse\"\004\200\265\030\001\022v\n\024SubscribeCaptureInfo\022..mav"
    "sdk.rpc.camera.SubscribeCaptureInfoReque"
    "st\032&.mavsdk.rpc.camera.CaptureInfoRespon"
    "se\"\004\200\265\030\0000\001\022j\n\020SubscribeStorage\022*.mavsdk."
    "rpc.camera.SubscribeStorageRequest\032\".mav"
    "sdk.rpc.camera.StorageResponse\"\004\200\265\030\0000\001\022_"
    "\n\nGetStorage\022$.mavsdk.rpc.camera.GetStor"
    "ageRequest\032%.mavsdk.rpc.camera.GetStorag"
    "eResponse\"\004\200\265\030\001\022\202\001\n\030SubscribeCurrentSett"
    "ings\0222.mavsdk.rpc.camera.SubscribeCurren"
    "tSettingsRequest\032*.mavsdk.rpc.camera.Cur"
    "rentSettingsResponse\"\004\200\265\030\0000\001\022w\n\022GetCurre"
    "ntSettings\022,.mavsdk.rpc.camera.GetCurren"
    "tSettingsRequest\032-.mavsdk.rpc.camera.Get"
    "CurrentSettingsResponse\"\004\200\265\030\001\022\227\001\n\037Subscr"
    "ibePossibleSettingOptions\0229.mavsdk.rpc.c"
    "amera.SubscribePossibleSettingOptionsReq"
    "uest\0321.mavsdk.rpc.camera.PossibleSetting"
    "OptionsResponse\"\004\200\265\030\0000\001\022\214\001\n\031GetPossibleS"
    "ettingOptions\0223.mavsdk.rpc.camera.GetPos"
    "sibleSettingOptionsRequest\0324.mavsdk.rpc."
    "camera.GetPossibleSettingOptionsResponse"
    "\"\004\200\265\030\001\022[\n\nSetSetting\022$.mavsdk.rpc.camera"
    ".SetSettingRequest\032%.mavsdk.rpc.camera.S"
    "etSettingResponse\"\000\022[\n\nGetSetting\022$.mavs"
    "dk.rpc.camera.GetSettingRequest\032%.mavsdk"
    ".rpc.camera.GetSettingResponse\"\000\022d\n\rForm"
    "atStorage\022\'.mavsdk.rpc.camera.FormatStor"
    "ageRequest\032(.mavsdk.rpc.camera.FormatSto"
    "rageResponse\"\000\022d\n\rResetSettings\022\'.mavsdk"
    ".rpc.camera.ResetSettingsRequest\032(.mavsd"
    "k.rpc.camera.ResetSettingsResponse\"\000\022^\n\013"
    "ZoomInStart\022%.mavsdk.rpc.camera.ZoomInSt"
    "artRequest\032&.mavsdk.rpc.camera.ZoomInSta"
    "rtResponse\"\000\022a\n\014ZoomOutStart\022&.mavsdk.rp"
    "c.camera.ZoomOutStartRequest\032\'.mavsdk.rp"
    "c.camera.ZoomOutStartResponse\"\000\022U\n\010ZoomS"
    "top\022\".mavsdk.rpc.camera.ZoomStopRequest\032"
    "#.mavsdk.rpc.camera.ZoomStopResponse\"\000\022X"
    "\n\tZoomRange\022#.mavsdk.rpc.camera.ZoomRang"
    "eRequest\032$.mavsdk.rpc.camera.ZoomRangeRe"
    "sponse\"\000\022[\n\nTrackPoint\022$.mavsdk.rpc.came"
    "ra.TrackPointRequest\032%.mavsdk.rpc.camera"
    ".TrackPointResponse\"\000\022g\n\016TrackRectangle\022"
    "(.mavsdk.rpc.camera.TrackRectangleReques"
    "t\032).mavsdk.rpc.camera.TrackRectangleResp"
    "onse\"\000\022X\n\tTrackStop\022#.mavsdk.rpc.camera."
    "TrackStopRequest\032$.mavsdk.rpc.camera.Tra"
    "ckStopResponse\"\000\022a\n\014FocusInStart\022&.mavsd"
    "k.rpc.camera.FocusInStartRequest\032\'.mavsd"
    "k.rpc.camera.FocusInStartResponse\"\000\022d\n\rF"
    "ocusOutStart\022\'.mavsdk.rpc.camera.FocusOu"
    "tStartRequest\032(.mavsdk.rpc.camera.FocusO"
    "utStartResponse\"\000\022X\n\tFocusStop\022#.mavsdk."
    "rpc.camera.FocusStopRequest\032$.mavsdk.rpc"
    ".camera.FocusStopResponse\"\000\022[\n\nFocusRang"
    "e\022$.mavsdk.rpc.camera.FocusRangeRequest\032"
    "%.mavsdk.rpc.camera.FocusRangeResponse\"\000"
    "B\037\n\020io.mavsdk.cameraB\013CameraProtob\006proto"
    "3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_camera_2fcamera_2eproto_deps[1] =
    {
        &::descriptor_table_mavsdk_5foptions_2eproto,
};
static ::absl::once_flag descriptor_table_camera_2fcamera_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_camera_2fcamera_2eproto = {
    false,
    false,
    12641,
    descriptor_table_protodef_camera_2fcamera_2eproto,
    "camera/camera.proto",
    &descriptor_table_camera_2fcamera_2eproto_once,
    descriptor_table_camera_2fcamera_2eproto_deps,
    1,
    90,
    schemas,
    file_default_instances,
    TableStruct_camera_2fcamera_2eproto::offsets,
    file_level_metadata_camera_2fcamera_2eproto,
    file_level_enum_descriptors_camera_2fcamera_2eproto,
    file_level_service_descriptors_camera_2fcamera_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_camera_2fcamera_2eproto_getter() {
  return &descriptor_table_camera_2fcamera_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_camera_2fcamera_2eproto(&descriptor_table_camera_2fcamera_2eproto);
namespace mavsdk {
namespace rpc {
namespace camera {
const ::google::protobuf::EnumDescriptor* VideoStreamInfo_VideoStreamStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_camera_2fcamera_2eproto);
  return file_level_enum_descriptors_camera_2fcamera_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t VideoStreamInfo_VideoStreamStatus_internal_data_[] = {
    131072u, 0u, };
bool VideoStreamInfo_VideoStreamStatus_IsValid(int value) {
  return 0 <= value && value <= 1;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr VideoStreamInfo_VideoStreamStatus VideoStreamInfo::VIDEO_STREAM_STATUS_NOT_RUNNING;
constexpr VideoStreamInfo_VideoStreamStatus VideoStreamInfo::VIDEO_STREAM_STATUS_IN_PROGRESS;
constexpr VideoStreamInfo_VideoStreamStatus VideoStreamInfo::VideoStreamStatus_MIN;
constexpr VideoStreamInfo_VideoStreamStatus VideoStreamInfo::VideoStreamStatus_MAX;
constexpr int VideoStreamInfo::VideoStreamStatus_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* VideoStreamInfo_VideoStreamSpectrum_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_camera_2fcamera_2eproto);
  return file_level_enum_descriptors_camera_2fcamera_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t VideoStreamInfo_VideoStreamSpectrum_internal_data_[] = {
    196608u, 0u, };
bool VideoStreamInfo_VideoStreamSpectrum_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr VideoStreamInfo_VideoStreamSpectrum VideoStreamInfo::VIDEO_STREAM_SPECTRUM_UNKNOWN;
constexpr VideoStreamInfo_VideoStreamSpectrum VideoStreamInfo::VIDEO_STREAM_SPECTRUM_VISIBLE_LIGHT;
constexpr VideoStreamInfo_VideoStreamSpectrum VideoStreamInfo::VIDEO_STREAM_SPECTRUM_INFRARED;
constexpr VideoStreamInfo_VideoStreamSpectrum VideoStreamInfo::VideoStreamSpectrum_MIN;
constexpr VideoStreamInfo_VideoStreamSpectrum VideoStreamInfo::VideoStreamSpectrum_MAX;
constexpr int VideoStreamInfo::VideoStreamSpectrum_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Storage_StorageStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_camera_2fcamera_2eproto);
  return file_level_enum_descriptors_camera_2fcamera_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t Storage_StorageStatus_internal_data_[] = {
    262144u, 0u, };
bool Storage_StorageStatus_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Storage_StorageStatus Storage::STORAGE_STATUS_NOT_AVAILABLE;
constexpr Storage_StorageStatus Storage::STORAGE_STATUS_UNFORMATTED;
constexpr Storage_StorageStatus Storage::STORAGE_STATUS_FORMATTED;
constexpr Storage_StorageStatus Storage::STORAGE_STATUS_NOT_SUPPORTED;
constexpr Storage_StorageStatus Storage::StorageStatus_MIN;
constexpr Storage_StorageStatus Storage::StorageStatus_MAX;
constexpr int Storage::StorageStatus_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Storage_StorageType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_camera_2fcamera_2eproto);
  return file_level_enum_descriptors_camera_2fcamera_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t Storage_StorageType_internal_data_[] = {
    262144u, 65568u, 8u, 254u, };
bool Storage_StorageType_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Storage_StorageType_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Storage_StorageType Storage::STORAGE_TYPE_UNKNOWN;
constexpr Storage_StorageType Storage::STORAGE_TYPE_USB_STICK;
constexpr Storage_StorageType Storage::STORAGE_TYPE_SD;
constexpr Storage_StorageType Storage::STORAGE_TYPE_MICROSD;
constexpr Storage_StorageType Storage::STORAGE_TYPE_HD;
constexpr Storage_StorageType Storage::STORAGE_TYPE_OTHER;
constexpr Storage_StorageType Storage::StorageType_MIN;
constexpr Storage_StorageType Storage::StorageType_MAX;
constexpr int Storage::StorageType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* CameraResult_Result_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_camera_2fcamera_2eproto);
  return file_level_enum_descriptors_camera_2fcamera_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t CameraResult_Result_internal_data_[] = {
    851968u, 0u, };
bool CameraResult_Result_IsValid(int value) {
  return 0 <= value && value <= 12;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr CameraResult_Result CameraResult::RESULT_UNKNOWN;
constexpr CameraResult_Result CameraResult::RESULT_SUCCESS;
constexpr CameraResult_Result CameraResult::RESULT_IN_PROGRESS;
constexpr CameraResult_Result CameraResult::RESULT_BUSY;
constexpr CameraResult_Result CameraResult::RESULT_DENIED;
constexpr CameraResult_Result CameraResult::RESULT_ERROR;
constexpr CameraResult_Result CameraResult::RESULT_TIMEOUT;
constexpr CameraResult_Result CameraResult::RESULT_WRONG_ARGUMENT;
constexpr CameraResult_Result CameraResult::RESULT_NO_SYSTEM;
constexpr CameraResult_Result CameraResult::RESULT_PROTOCOL_UNSUPPORTED;
constexpr CameraResult_Result CameraResult::RESULT_UNAVAILABLE;
constexpr CameraResult_Result CameraResult::RESULT_CAMERA_ID_INVALID;
constexpr CameraResult_Result CameraResult::RESULT_ACTION_UNSUPPORTED;
constexpr CameraResult_Result CameraResult::Result_MIN;
constexpr CameraResult_Result CameraResult::Result_MAX;
constexpr int CameraResult::Result_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Mode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_camera_2fcamera_2eproto);
  return file_level_enum_descriptors_camera_2fcamera_2eproto[5];
}
PROTOBUF_CONSTINIT const uint32_t Mode_internal_data_[] = {
    196608u, 0u, };
bool Mode_IsValid(int value) {
  return 0 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* PhotosRange_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_camera_2fcamera_2eproto);
  return file_level_enum_descriptors_camera_2fcamera_2eproto[6];
}
PROTOBUF_CONSTINIT const uint32_t PhotosRange_internal_data_[] = {
    131072u, 0u, };
bool PhotosRange_IsValid(int value) {
  return 0 <= value && value <= 1;
}
// ===================================================================

class Option::_Internal {
 public:
};

Option::Option(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.Option)
}
inline PROTOBUF_NDEBUG_INLINE Option::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : option_id_(arena, from.option_id_),
        option_description_(arena, from.option_description_),
        _cached_size_{0} {}

Option::Option(
    ::google::protobuf::Arena* arena,
    const Option& from)
    : ::google::protobuf::Message(arena) {
  Option* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.Option)
}
inline PROTOBUF_NDEBUG_INLINE Option::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : option_id_(arena),
        option_description_(arena),
        _cached_size_{0} {}

inline void Option::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Option::~Option() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.Option)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Option::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.option_id_.Destroy();
  _impl_.option_description_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Option::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.Option)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.option_id_.ClearToEmpty();
  _impl_.option_description_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Option::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 60, 2> Option::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Option_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string option_description = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Option, _impl_.option_description_)}},
    // string option_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Option, _impl_.option_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string option_id = 1;
    {PROTOBUF_FIELD_OFFSET(Option, _impl_.option_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string option_description = 2;
    {PROTOBUF_FIELD_OFFSET(Option, _impl_.option_description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\11\22\0\0\0\0\0"
    "mavsdk.rpc.camera.Option"
    "option_id"
    "option_description"
  }},
};

::uint8_t* Option::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.Option)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string option_id = 1;
  if (!this->_internal_option_id().empty()) {
    const std::string& _s = this->_internal_option_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.camera.Option.option_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string option_description = 2;
  if (!this->_internal_option_description().empty()) {
    const std::string& _s = this->_internal_option_description();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.camera.Option.option_description");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.Option)
  return target;
}

::size_t Option::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.Option)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string option_id = 1;
  if (!this->_internal_option_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_option_id());
  }

  // string option_description = 2;
  if (!this->_internal_option_description().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_option_description());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Option::_class_data_ = {
    Option::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Option::GetClassData() const {
  return &_class_data_;
}

void Option::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Option*>(&to_msg);
  auto& from = static_cast<const Option&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.Option)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_option_id().empty()) {
    _this->_internal_set_option_id(from._internal_option_id());
  }
  if (!from._internal_option_description().empty()) {
    _this->_internal_set_option_description(from._internal_option_description());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Option::CopyFrom(const Option& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.Option)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Option::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Option::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Option::InternalSwap(Option* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.option_id_, &other->_impl_.option_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.option_description_, &other->_impl_.option_description_, arena);
}

::google::protobuf::Metadata Option::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[0]);
}
// ===================================================================

class Setting::_Internal {
 public:
  using HasBits = decltype(std::declval<Setting>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Setting, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::Option& option(const Setting* msg);
  static void set_has_option(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::Option& Setting::_Internal::option(const Setting* msg) {
  return *msg->_impl_.option_;
}
Setting::Setting(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.Setting)
}
inline PROTOBUF_NDEBUG_INLINE Setting::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        setting_id_(arena, from.setting_id_),
        setting_description_(arena, from.setting_description_) {}

Setting::Setting(
    ::google::protobuf::Arena* arena,
    const Setting& from)
    : ::google::protobuf::Message(arena) {
  Setting* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.option_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::Option>(arena, *from._impl_.option_)
                : nullptr;
  _impl_.is_range_ = from._impl_.is_range_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.Setting)
}
inline PROTOBUF_NDEBUG_INLINE Setting::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        setting_id_(arena),
        setting_description_(arena) {}

inline void Setting::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, option_),
           0,
           offsetof(Impl_, is_range_) -
               offsetof(Impl_, option_) +
               sizeof(Impl_::is_range_));
}
Setting::~Setting() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.Setting)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Setting::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.setting_id_.Destroy();
  _impl_.setting_description_.Destroy();
  delete _impl_.option_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Setting::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.Setting)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.setting_id_.ClearToEmpty();
  _impl_.setting_description_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.option_ != nullptr);
    _impl_.option_->Clear();
  }
  _impl_.is_range_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Setting::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 63, 2> Setting::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Setting, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Setting_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool is_range = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Setting, _impl_.is_range_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Setting, _impl_.is_range_)}},
    // string setting_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Setting, _impl_.setting_id_)}},
    // string setting_description = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Setting, _impl_.setting_description_)}},
    // .mavsdk.rpc.camera.Option option = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Setting, _impl_.option_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string setting_id = 1;
    {PROTOBUF_FIELD_OFFSET(Setting, _impl_.setting_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string setting_description = 2;
    {PROTOBUF_FIELD_OFFSET(Setting, _impl_.setting_description_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .mavsdk.rpc.camera.Option option = 3;
    {PROTOBUF_FIELD_OFFSET(Setting, _impl_.option_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool is_range = 4;
    {PROTOBUF_FIELD_OFFSET(Setting, _impl_.is_range_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::Option>()},
  }}, {{
    "\31\12\23\0\0\0\0\0"
    "mavsdk.rpc.camera.Setting"
    "setting_id"
    "setting_description"
  }},
};

::uint8_t* Setting::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.Setting)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string setting_id = 1;
  if (!this->_internal_setting_id().empty()) {
    const std::string& _s = this->_internal_setting_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.camera.Setting.setting_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string setting_description = 2;
  if (!this->_internal_setting_description().empty()) {
    const std::string& _s = this->_internal_setting_description();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.camera.Setting.setting_description");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.Option option = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::option(this),
        _Internal::option(this).GetCachedSize(), target, stream);
  }

  // bool is_range = 4;
  if (this->_internal_is_range() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_is_range(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.Setting)
  return target;
}

::size_t Setting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.Setting)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string setting_id = 1;
  if (!this->_internal_setting_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_setting_id());
  }

  // string setting_description = 2;
  if (!this->_internal_setting_description().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_setting_description());
  }

  // .mavsdk.rpc.camera.Option option = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.option_);
  }

  // bool is_range = 4;
  if (this->_internal_is_range() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Setting::_class_data_ = {
    Setting::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Setting::GetClassData() const {
  return &_class_data_;
}

void Setting::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Setting*>(&to_msg);
  auto& from = static_cast<const Setting&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.Setting)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_setting_id().empty()) {
    _this->_internal_set_setting_id(from._internal_setting_id());
  }
  if (!from._internal_setting_description().empty()) {
    _this->_internal_set_setting_description(from._internal_setting_description());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_option()->::mavsdk::rpc::camera::Option::MergeFrom(
        from._internal_option());
  }
  if (from._internal_is_range() != 0) {
    _this->_internal_set_is_range(from._internal_is_range());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Setting::CopyFrom(const Setting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.Setting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Setting::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Setting::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Setting::InternalSwap(Setting* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.setting_id_, &other->_impl_.setting_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.setting_description_, &other->_impl_.setting_description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Setting, _impl_.is_range_)
      + sizeof(Setting::_impl_.is_range_)
      - PROTOBUF_FIELD_OFFSET(Setting, _impl_.option_)>(
          reinterpret_cast<char*>(&_impl_.option_),
          reinterpret_cast<char*>(&other->_impl_.option_));
}

::google::protobuf::Metadata Setting::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[1]);
}
// ===================================================================

class SettingOptions::_Internal {
 public:
};

SettingOptions::SettingOptions(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.SettingOptions)
}
inline PROTOBUF_NDEBUG_INLINE SettingOptions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : options_{visibility, arena, from.options_},
        setting_id_(arena, from.setting_id_),
        setting_description_(arena, from.setting_description_),
        _cached_size_{0} {}

SettingOptions::SettingOptions(
    ::google::protobuf::Arena* arena,
    const SettingOptions& from)
    : ::google::protobuf::Message(arena) {
  SettingOptions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, component_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, component_id_),
           offsetof(Impl_, is_range_) -
               offsetof(Impl_, component_id_) +
               sizeof(Impl_::is_range_));

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.SettingOptions)
}
inline PROTOBUF_NDEBUG_INLINE SettingOptions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : options_{visibility, arena},
        setting_id_(arena),
        setting_description_(arena),
        _cached_size_{0} {}

inline void SettingOptions::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, component_id_),
           0,
           offsetof(Impl_, is_range_) -
               offsetof(Impl_, component_id_) +
               sizeof(Impl_::is_range_));
}
SettingOptions::~SettingOptions() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.SettingOptions)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SettingOptions::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.setting_id_.Destroy();
  _impl_.setting_description_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SettingOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.SettingOptions)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.options_.Clear();
  _impl_.setting_id_.ClearToEmpty();
  _impl_.setting_description_.ClearToEmpty();
  ::memset(&_impl_.component_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_range_) -
      reinterpret_cast<char*>(&_impl_.component_id_)) + sizeof(_impl_.is_range_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SettingOptions::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 70, 2> SettingOptions::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SettingOptions_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SettingOptions, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SettingOptions, _impl_.component_id_)}},
    // string setting_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SettingOptions, _impl_.setting_id_)}},
    // string setting_description = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SettingOptions, _impl_.setting_description_)}},
    // repeated .mavsdk.rpc.camera.Option options = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(SettingOptions, _impl_.options_)}},
    // bool is_range = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SettingOptions, _impl_.is_range_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(SettingOptions, _impl_.is_range_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(SettingOptions, _impl_.component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string setting_id = 2;
    {PROTOBUF_FIELD_OFFSET(SettingOptions, _impl_.setting_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string setting_description = 3;
    {PROTOBUF_FIELD_OFFSET(SettingOptions, _impl_.setting_description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .mavsdk.rpc.camera.Option options = 4;
    {PROTOBUF_FIELD_OFFSET(SettingOptions, _impl_.options_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool is_range = 5;
    {PROTOBUF_FIELD_OFFSET(SettingOptions, _impl_.is_range_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::Option>()},
  }}, {{
    "\40\0\12\23\0\0\0\0"
    "mavsdk.rpc.camera.SettingOptions"
    "setting_id"
    "setting_description"
  }},
};

::uint8_t* SettingOptions::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.SettingOptions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  // string setting_id = 2;
  if (!this->_internal_setting_id().empty()) {
    const std::string& _s = this->_internal_setting_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.camera.SettingOptions.setting_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string setting_description = 3;
  if (!this->_internal_setting_description().empty()) {
    const std::string& _s = this->_internal_setting_description();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.camera.SettingOptions.setting_description");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // repeated .mavsdk.rpc.camera.Option options = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_options_size()); i < n; i++) {
    const auto& repfield = this->_internal_options().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // bool is_range = 5;
  if (this->_internal_is_range() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_is_range(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.SettingOptions)
  return target;
}

::size_t SettingOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.SettingOptions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .mavsdk.rpc.camera.Option options = 4;
  total_size += 1UL * this->_internal_options_size();
  for (const auto& msg : this->_internal_options()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string setting_id = 2;
  if (!this->_internal_setting_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_setting_id());
  }

  // string setting_description = 3;
  if (!this->_internal_setting_description().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_setting_description());
  }

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  // bool is_range = 5;
  if (this->_internal_is_range() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SettingOptions::_class_data_ = {
    SettingOptions::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SettingOptions::GetClassData() const {
  return &_class_data_;
}

void SettingOptions::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SettingOptions*>(&to_msg);
  auto& from = static_cast<const SettingOptions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.SettingOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_options()->MergeFrom(
      from._internal_options());
  if (!from._internal_setting_id().empty()) {
    _this->_internal_set_setting_id(from._internal_setting_id());
  }
  if (!from._internal_setting_description().empty()) {
    _this->_internal_set_setting_description(from._internal_setting_description());
  }
  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  if (from._internal_is_range() != 0) {
    _this->_internal_set_is_range(from._internal_is_range());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SettingOptions::CopyFrom(const SettingOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.SettingOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SettingOptions::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SettingOptions::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SettingOptions::InternalSwap(SettingOptions* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.options_.InternalSwap(&other->_impl_.options_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.setting_id_, &other->_impl_.setting_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.setting_description_, &other->_impl_.setting_description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SettingOptions, _impl_.is_range_)
      + sizeof(SettingOptions::_impl_.is_range_)
      - PROTOBUF_FIELD_OFFSET(SettingOptions, _impl_.component_id_)>(
          reinterpret_cast<char*>(&_impl_.component_id_),
          reinterpret_cast<char*>(&other->_impl_.component_id_));
}

::google::protobuf::Metadata SettingOptions::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[2]);
}
// ===================================================================

class VideoStreamSettings::_Internal {
 public:
};

VideoStreamSettings::VideoStreamSettings(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.VideoStreamSettings)
}
inline PROTOBUF_NDEBUG_INLINE VideoStreamSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : uri_(arena, from.uri_),
        _cached_size_{0} {}

VideoStreamSettings::VideoStreamSettings(
    ::google::protobuf::Arena* arena,
    const VideoStreamSettings& from)
    : ::google::protobuf::Message(arena) {
  VideoStreamSettings* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, frame_rate_hz_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, frame_rate_hz_),
           offsetof(Impl_, horizontal_fov_deg_) -
               offsetof(Impl_, frame_rate_hz_) +
               sizeof(Impl_::horizontal_fov_deg_));

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.VideoStreamSettings)
}
inline PROTOBUF_NDEBUG_INLINE VideoStreamSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : uri_(arena),
        _cached_size_{0} {}

inline void VideoStreamSettings::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, frame_rate_hz_),
           0,
           offsetof(Impl_, horizontal_fov_deg_) -
               offsetof(Impl_, frame_rate_hz_) +
               sizeof(Impl_::horizontal_fov_deg_));
}
VideoStreamSettings::~VideoStreamSettings() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.VideoStreamSettings)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VideoStreamSettings::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.uri_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VideoStreamSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.VideoStreamSettings)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uri_.ClearToEmpty();
  ::memset(&_impl_.frame_rate_hz_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.horizontal_fov_deg_) -
      reinterpret_cast<char*>(&_impl_.frame_rate_hz_)) + sizeof(_impl_.horizontal_fov_deg_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VideoStreamSettings::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 49, 2> VideoStreamSettings::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_VideoStreamSettings_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float frame_rate_hz = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(VideoStreamSettings, _impl_.frame_rate_hz_)}},
    // uint32 horizontal_resolution_pix = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VideoStreamSettings, _impl_.horizontal_resolution_pix_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(VideoStreamSettings, _impl_.horizontal_resolution_pix_)}},
    // uint32 vertical_resolution_pix = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VideoStreamSettings, _impl_.vertical_resolution_pix_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(VideoStreamSettings, _impl_.vertical_resolution_pix_)}},
    // uint32 bit_rate_b_s = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VideoStreamSettings, _impl_.bit_rate_b_s_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(VideoStreamSettings, _impl_.bit_rate_b_s_)}},
    // uint32 rotation_deg = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VideoStreamSettings, _impl_.rotation_deg_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(VideoStreamSettings, _impl_.rotation_deg_)}},
    // string uri = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(VideoStreamSettings, _impl_.uri_)}},
    // float horizontal_fov_deg = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 63, 0, PROTOBUF_FIELD_OFFSET(VideoStreamSettings, _impl_.horizontal_fov_deg_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float frame_rate_hz = 1;
    {PROTOBUF_FIELD_OFFSET(VideoStreamSettings, _impl_.frame_rate_hz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // uint32 horizontal_resolution_pix = 2;
    {PROTOBUF_FIELD_OFFSET(VideoStreamSettings, _impl_.horizontal_resolution_pix_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 vertical_resolution_pix = 3;
    {PROTOBUF_FIELD_OFFSET(VideoStreamSettings, _impl_.vertical_resolution_pix_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 bit_rate_b_s = 4;
    {PROTOBUF_FIELD_OFFSET(VideoStreamSettings, _impl_.bit_rate_b_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 rotation_deg = 5;
    {PROTOBUF_FIELD_OFFSET(VideoStreamSettings, _impl_.rotation_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string uri = 6;
    {PROTOBUF_FIELD_OFFSET(VideoStreamSettings, _impl_.uri_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float horizontal_fov_deg = 7;
    {PROTOBUF_FIELD_OFFSET(VideoStreamSettings, _impl_.horizontal_fov_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
    "\45\0\0\0\0\0\3\0"
    "mavsdk.rpc.camera.VideoStreamSettings"
    "uri"
  }},
};

::uint8_t* VideoStreamSettings::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.VideoStreamSettings)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float frame_rate_hz = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_frame_rate_hz = this->_internal_frame_rate_hz();
  ::uint32_t raw_frame_rate_hz;
  memcpy(&raw_frame_rate_hz, &tmp_frame_rate_hz, sizeof(tmp_frame_rate_hz));
  if (raw_frame_rate_hz != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_frame_rate_hz(), target);
  }

  // uint32 horizontal_resolution_pix = 2;
  if (this->_internal_horizontal_resolution_pix() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_horizontal_resolution_pix(), target);
  }

  // uint32 vertical_resolution_pix = 3;
  if (this->_internal_vertical_resolution_pix() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_vertical_resolution_pix(), target);
  }

  // uint32 bit_rate_b_s = 4;
  if (this->_internal_bit_rate_b_s() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_bit_rate_b_s(), target);
  }

  // uint32 rotation_deg = 5;
  if (this->_internal_rotation_deg() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_rotation_deg(), target);
  }

  // string uri = 6;
  if (!this->_internal_uri().empty()) {
    const std::string& _s = this->_internal_uri();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.camera.VideoStreamSettings.uri");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // float horizontal_fov_deg = 7;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_horizontal_fov_deg = this->_internal_horizontal_fov_deg();
  ::uint32_t raw_horizontal_fov_deg;
  memcpy(&raw_horizontal_fov_deg, &tmp_horizontal_fov_deg, sizeof(tmp_horizontal_fov_deg));
  if (raw_horizontal_fov_deg != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        7, this->_internal_horizontal_fov_deg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.VideoStreamSettings)
  return target;
}

::size_t VideoStreamSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.VideoStreamSettings)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uri = 6;
  if (!this->_internal_uri().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_uri());
  }

  // float frame_rate_hz = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_frame_rate_hz = this->_internal_frame_rate_hz();
  ::uint32_t raw_frame_rate_hz;
  memcpy(&raw_frame_rate_hz, &tmp_frame_rate_hz, sizeof(tmp_frame_rate_hz));
  if (raw_frame_rate_hz != 0) {
    total_size += 5;
  }

  // uint32 horizontal_resolution_pix = 2;
  if (this->_internal_horizontal_resolution_pix() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_horizontal_resolution_pix());
  }

  // uint32 vertical_resolution_pix = 3;
  if (this->_internal_vertical_resolution_pix() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_vertical_resolution_pix());
  }

  // uint32 bit_rate_b_s = 4;
  if (this->_internal_bit_rate_b_s() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_bit_rate_b_s());
  }

  // uint32 rotation_deg = 5;
  if (this->_internal_rotation_deg() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_rotation_deg());
  }

  // float horizontal_fov_deg = 7;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_horizontal_fov_deg = this->_internal_horizontal_fov_deg();
  ::uint32_t raw_horizontal_fov_deg;
  memcpy(&raw_horizontal_fov_deg, &tmp_horizontal_fov_deg, sizeof(tmp_horizontal_fov_deg));
  if (raw_horizontal_fov_deg != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VideoStreamSettings::_class_data_ = {
    VideoStreamSettings::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VideoStreamSettings::GetClassData() const {
  return &_class_data_;
}

void VideoStreamSettings::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VideoStreamSettings*>(&to_msg);
  auto& from = static_cast<const VideoStreamSettings&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.VideoStreamSettings)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uri().empty()) {
    _this->_internal_set_uri(from._internal_uri());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_frame_rate_hz = from._internal_frame_rate_hz();
  ::uint32_t raw_frame_rate_hz;
  memcpy(&raw_frame_rate_hz, &tmp_frame_rate_hz, sizeof(tmp_frame_rate_hz));
  if (raw_frame_rate_hz != 0) {
    _this->_internal_set_frame_rate_hz(from._internal_frame_rate_hz());
  }
  if (from._internal_horizontal_resolution_pix() != 0) {
    _this->_internal_set_horizontal_resolution_pix(from._internal_horizontal_resolution_pix());
  }
  if (from._internal_vertical_resolution_pix() != 0) {
    _this->_internal_set_vertical_resolution_pix(from._internal_vertical_resolution_pix());
  }
  if (from._internal_bit_rate_b_s() != 0) {
    _this->_internal_set_bit_rate_b_s(from._internal_bit_rate_b_s());
  }
  if (from._internal_rotation_deg() != 0) {
    _this->_internal_set_rotation_deg(from._internal_rotation_deg());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_horizontal_fov_deg = from._internal_horizontal_fov_deg();
  ::uint32_t raw_horizontal_fov_deg;
  memcpy(&raw_horizontal_fov_deg, &tmp_horizontal_fov_deg, sizeof(tmp_horizontal_fov_deg));
  if (raw_horizontal_fov_deg != 0) {
    _this->_internal_set_horizontal_fov_deg(from._internal_horizontal_fov_deg());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VideoStreamSettings::CopyFrom(const VideoStreamSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.VideoStreamSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VideoStreamSettings::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VideoStreamSettings::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VideoStreamSettings::InternalSwap(VideoStreamSettings* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uri_, &other->_impl_.uri_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VideoStreamSettings, _impl_.horizontal_fov_deg_)
      + sizeof(VideoStreamSettings::_impl_.horizontal_fov_deg_)
      - PROTOBUF_FIELD_OFFSET(VideoStreamSettings, _impl_.frame_rate_hz_)>(
          reinterpret_cast<char*>(&_impl_.frame_rate_hz_),
          reinterpret_cast<char*>(&other->_impl_.frame_rate_hz_));
}

::google::protobuf::Metadata VideoStreamSettings::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[3]);
}
// ===================================================================

class VideoStreamInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<VideoStreamInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VideoStreamInfo, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::VideoStreamSettings& settings(const VideoStreamInfo* msg);
  static void set_has_settings(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::VideoStreamSettings& VideoStreamInfo::_Internal::settings(const VideoStreamInfo* msg) {
  return *msg->_impl_.settings_;
}
VideoStreamInfo::VideoStreamInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.VideoStreamInfo)
}
inline PROTOBUF_NDEBUG_INLINE VideoStreamInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

VideoStreamInfo::VideoStreamInfo(
    ::google::protobuf::Arena* arena,
    const VideoStreamInfo& from)
    : ::google::protobuf::Message(arena) {
  VideoStreamInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.settings_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::VideoStreamSettings>(arena, *from._impl_.settings_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, stream_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, stream_id_),
           offsetof(Impl_, spectrum_) -
               offsetof(Impl_, stream_id_) +
               sizeof(Impl_::spectrum_));

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.VideoStreamInfo)
}
inline PROTOBUF_NDEBUG_INLINE VideoStreamInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VideoStreamInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, settings_),
           0,
           offsetof(Impl_, spectrum_) -
               offsetof(Impl_, settings_) +
               sizeof(Impl_::spectrum_));
}
VideoStreamInfo::~VideoStreamInfo() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.VideoStreamInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VideoStreamInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.settings_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VideoStreamInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.VideoStreamInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.settings_ != nullptr);
    _impl_.settings_->Clear();
  }
  ::memset(&_impl_.stream_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.spectrum_) -
      reinterpret_cast<char*>(&_impl_.stream_id_)) + sizeof(_impl_.spectrum_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VideoStreamInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> VideoStreamInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VideoStreamInfo, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VideoStreamInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.VideoStreamInfo.VideoStreamSpectrum spectrum = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VideoStreamInfo, _impl_.spectrum_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(VideoStreamInfo, _impl_.spectrum_)}},
    // int32 stream_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VideoStreamInfo, _impl_.stream_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(VideoStreamInfo, _impl_.stream_id_)}},
    // .mavsdk.rpc.camera.VideoStreamSettings settings = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(VideoStreamInfo, _impl_.settings_)}},
    // .mavsdk.rpc.camera.VideoStreamInfo.VideoStreamStatus status = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VideoStreamInfo, _impl_.status_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(VideoStreamInfo, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 stream_id = 1;
    {PROTOBUF_FIELD_OFFSET(VideoStreamInfo, _impl_.stream_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .mavsdk.rpc.camera.VideoStreamSettings settings = 2;
    {PROTOBUF_FIELD_OFFSET(VideoStreamInfo, _impl_.settings_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mavsdk.rpc.camera.VideoStreamInfo.VideoStreamStatus status = 3;
    {PROTOBUF_FIELD_OFFSET(VideoStreamInfo, _impl_.status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .mavsdk.rpc.camera.VideoStreamInfo.VideoStreamSpectrum spectrum = 4;
    {PROTOBUF_FIELD_OFFSET(VideoStreamInfo, _impl_.spectrum_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::VideoStreamSettings>()},
  }}, {{
  }},
};

::uint8_t* VideoStreamInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.VideoStreamInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 stream_id = 1;
  if (this->_internal_stream_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_stream_id(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.VideoStreamSettings settings = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::settings(this),
        _Internal::settings(this).GetCachedSize(), target, stream);
  }

  // .mavsdk.rpc.camera.VideoStreamInfo.VideoStreamStatus status = 3;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_status(), target);
  }

  // .mavsdk.rpc.camera.VideoStreamInfo.VideoStreamSpectrum spectrum = 4;
  if (this->_internal_spectrum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_spectrum(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.VideoStreamInfo)
  return target;
}

::size_t VideoStreamInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.VideoStreamInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera.VideoStreamSettings settings = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.settings_);
  }

  // int32 stream_id = 1;
  if (this->_internal_stream_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_stream_id());
  }

  // .mavsdk.rpc.camera.VideoStreamInfo.VideoStreamStatus status = 3;
  if (this->_internal_status() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  // .mavsdk.rpc.camera.VideoStreamInfo.VideoStreamSpectrum spectrum = 4;
  if (this->_internal_spectrum() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_spectrum());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VideoStreamInfo::_class_data_ = {
    VideoStreamInfo::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VideoStreamInfo::GetClassData() const {
  return &_class_data_;
}

void VideoStreamInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VideoStreamInfo*>(&to_msg);
  auto& from = static_cast<const VideoStreamInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.VideoStreamInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_settings()->::mavsdk::rpc::camera::VideoStreamSettings::MergeFrom(
        from._internal_settings());
  }
  if (from._internal_stream_id() != 0) {
    _this->_internal_set_stream_id(from._internal_stream_id());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  if (from._internal_spectrum() != 0) {
    _this->_internal_set_spectrum(from._internal_spectrum());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VideoStreamInfo::CopyFrom(const VideoStreamInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.VideoStreamInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VideoStreamInfo::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VideoStreamInfo::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VideoStreamInfo::InternalSwap(VideoStreamInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VideoStreamInfo, _impl_.spectrum_)
      + sizeof(VideoStreamInfo::_impl_.spectrum_)
      - PROTOBUF_FIELD_OFFSET(VideoStreamInfo, _impl_.settings_)>(
          reinterpret_cast<char*>(&_impl_.settings_),
          reinterpret_cast<char*>(&other->_impl_.settings_));
}

::google::protobuf::Metadata VideoStreamInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[4]);
}
// ===================================================================

class TakePhotoRequest::_Internal {
 public:
};

TakePhotoRequest::TakePhotoRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.TakePhotoRequest)
}
TakePhotoRequest::TakePhotoRequest(
    ::google::protobuf::Arena* arena, const TakePhotoRequest& from)
    : TakePhotoRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE TakePhotoRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TakePhotoRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.component_id_ = {};
}
TakePhotoRequest::~TakePhotoRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.TakePhotoRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TakePhotoRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TakePhotoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.TakePhotoRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.component_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TakePhotoRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> TakePhotoRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TakePhotoRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TakePhotoRequest, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TakePhotoRequest, _impl_.component_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(TakePhotoRequest, _impl_.component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TakePhotoRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.TakePhotoRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.TakePhotoRequest)
  return target;
}

::size_t TakePhotoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.TakePhotoRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TakePhotoRequest::_class_data_ = {
    TakePhotoRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TakePhotoRequest::GetClassData() const {
  return &_class_data_;
}

void TakePhotoRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TakePhotoRequest*>(&to_msg);
  auto& from = static_cast<const TakePhotoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.TakePhotoRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TakePhotoRequest::CopyFrom(const TakePhotoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.TakePhotoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TakePhotoRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TakePhotoRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TakePhotoRequest::InternalSwap(TakePhotoRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.component_id_, other->_impl_.component_id_);
}

::google::protobuf::Metadata TakePhotoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[5]);
}
// ===================================================================

class TakePhotoResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<TakePhotoResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TakePhotoResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::CameraResult& camera_result(const TakePhotoResponse* msg);
  static void set_has_camera_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::CameraResult& TakePhotoResponse::_Internal::camera_result(const TakePhotoResponse* msg) {
  return *msg->_impl_.camera_result_;
}
TakePhotoResponse::TakePhotoResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.TakePhotoResponse)
}
inline PROTOBUF_NDEBUG_INLINE TakePhotoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TakePhotoResponse::TakePhotoResponse(
    ::google::protobuf::Arena* arena,
    const TakePhotoResponse& from)
    : ::google::protobuf::Message(arena) {
  TakePhotoResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::CameraResult>(arena, *from._impl_.camera_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.TakePhotoResponse)
}
inline PROTOBUF_NDEBUG_INLINE TakePhotoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TakePhotoResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_result_ = {};
}
TakePhotoResponse::~TakePhotoResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.TakePhotoResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TakePhotoResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TakePhotoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.TakePhotoResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_result_ != nullptr);
    _impl_.camera_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TakePhotoResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TakePhotoResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TakePhotoResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TakePhotoResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TakePhotoResponse, _impl_.camera_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {PROTOBUF_FIELD_OFFSET(TakePhotoResponse, _impl_.camera_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::CameraResult>()},
  }}, {{
  }},
};

::uint8_t* TakePhotoResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.TakePhotoResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_result(this),
        _Internal::camera_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.TakePhotoResponse)
  return target;
}

::size_t TakePhotoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.TakePhotoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TakePhotoResponse::_class_data_ = {
    TakePhotoResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TakePhotoResponse::GetClassData() const {
  return &_class_data_;
}

void TakePhotoResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TakePhotoResponse*>(&to_msg);
  auto& from = static_cast<const TakePhotoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.TakePhotoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_result()->::mavsdk::rpc::camera::CameraResult::MergeFrom(
        from._internal_camera_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TakePhotoResponse::CopyFrom(const TakePhotoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.TakePhotoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TakePhotoResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TakePhotoResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TakePhotoResponse::InternalSwap(TakePhotoResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_result_, other->_impl_.camera_result_);
}

::google::protobuf::Metadata TakePhotoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[6]);
}
// ===================================================================

class StartPhotoIntervalRequest::_Internal {
 public:
};

StartPhotoIntervalRequest::StartPhotoIntervalRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.StartPhotoIntervalRequest)
}
StartPhotoIntervalRequest::StartPhotoIntervalRequest(
    ::google::protobuf::Arena* arena, const StartPhotoIntervalRequest& from)
    : StartPhotoIntervalRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE StartPhotoIntervalRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StartPhotoIntervalRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, component_id_),
           0,
           offsetof(Impl_, interval_s_) -
               offsetof(Impl_, component_id_) +
               sizeof(Impl_::interval_s_));
}
StartPhotoIntervalRequest::~StartPhotoIntervalRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.StartPhotoIntervalRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StartPhotoIntervalRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StartPhotoIntervalRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.StartPhotoIntervalRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.component_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.interval_s_) -
      reinterpret_cast<char*>(&_impl_.component_id_)) + sizeof(_impl_.interval_s_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StartPhotoIntervalRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> StartPhotoIntervalRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StartPhotoIntervalRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float interval_s = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(StartPhotoIntervalRequest, _impl_.interval_s_)}},
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StartPhotoIntervalRequest, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StartPhotoIntervalRequest, _impl_.component_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(StartPhotoIntervalRequest, _impl_.component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // float interval_s = 2;
    {PROTOBUF_FIELD_OFFSET(StartPhotoIntervalRequest, _impl_.interval_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* StartPhotoIntervalRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.StartPhotoIntervalRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  // float interval_s = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_interval_s = this->_internal_interval_s();
  ::uint32_t raw_interval_s;
  memcpy(&raw_interval_s, &tmp_interval_s, sizeof(tmp_interval_s));
  if (raw_interval_s != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_interval_s(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.StartPhotoIntervalRequest)
  return target;
}

::size_t StartPhotoIntervalRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.StartPhotoIntervalRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  // float interval_s = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_interval_s = this->_internal_interval_s();
  ::uint32_t raw_interval_s;
  memcpy(&raw_interval_s, &tmp_interval_s, sizeof(tmp_interval_s));
  if (raw_interval_s != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StartPhotoIntervalRequest::_class_data_ = {
    StartPhotoIntervalRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StartPhotoIntervalRequest::GetClassData() const {
  return &_class_data_;
}

void StartPhotoIntervalRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StartPhotoIntervalRequest*>(&to_msg);
  auto& from = static_cast<const StartPhotoIntervalRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.StartPhotoIntervalRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_interval_s = from._internal_interval_s();
  ::uint32_t raw_interval_s;
  memcpy(&raw_interval_s, &tmp_interval_s, sizeof(tmp_interval_s));
  if (raw_interval_s != 0) {
    _this->_internal_set_interval_s(from._internal_interval_s());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StartPhotoIntervalRequest::CopyFrom(const StartPhotoIntervalRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.StartPhotoIntervalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StartPhotoIntervalRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StartPhotoIntervalRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StartPhotoIntervalRequest::InternalSwap(StartPhotoIntervalRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StartPhotoIntervalRequest, _impl_.interval_s_)
      + sizeof(StartPhotoIntervalRequest::_impl_.interval_s_)
      - PROTOBUF_FIELD_OFFSET(StartPhotoIntervalRequest, _impl_.component_id_)>(
          reinterpret_cast<char*>(&_impl_.component_id_),
          reinterpret_cast<char*>(&other->_impl_.component_id_));
}

::google::protobuf::Metadata StartPhotoIntervalRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[7]);
}
// ===================================================================

class StartPhotoIntervalResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<StartPhotoIntervalResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(StartPhotoIntervalResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::CameraResult& camera_result(const StartPhotoIntervalResponse* msg);
  static void set_has_camera_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::CameraResult& StartPhotoIntervalResponse::_Internal::camera_result(const StartPhotoIntervalResponse* msg) {
  return *msg->_impl_.camera_result_;
}
StartPhotoIntervalResponse::StartPhotoIntervalResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.StartPhotoIntervalResponse)
}
inline PROTOBUF_NDEBUG_INLINE StartPhotoIntervalResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

StartPhotoIntervalResponse::StartPhotoIntervalResponse(
    ::google::protobuf::Arena* arena,
    const StartPhotoIntervalResponse& from)
    : ::google::protobuf::Message(arena) {
  StartPhotoIntervalResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::CameraResult>(arena, *from._impl_.camera_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.StartPhotoIntervalResponse)
}
inline PROTOBUF_NDEBUG_INLINE StartPhotoIntervalResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StartPhotoIntervalResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_result_ = {};
}
StartPhotoIntervalResponse::~StartPhotoIntervalResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.StartPhotoIntervalResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StartPhotoIntervalResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StartPhotoIntervalResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.StartPhotoIntervalResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_result_ != nullptr);
    _impl_.camera_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StartPhotoIntervalResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> StartPhotoIntervalResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StartPhotoIntervalResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StartPhotoIntervalResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StartPhotoIntervalResponse, _impl_.camera_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {PROTOBUF_FIELD_OFFSET(StartPhotoIntervalResponse, _impl_.camera_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::CameraResult>()},
  }}, {{
  }},
};

::uint8_t* StartPhotoIntervalResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.StartPhotoIntervalResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_result(this),
        _Internal::camera_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.StartPhotoIntervalResponse)
  return target;
}

::size_t StartPhotoIntervalResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.StartPhotoIntervalResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StartPhotoIntervalResponse::_class_data_ = {
    StartPhotoIntervalResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StartPhotoIntervalResponse::GetClassData() const {
  return &_class_data_;
}

void StartPhotoIntervalResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StartPhotoIntervalResponse*>(&to_msg);
  auto& from = static_cast<const StartPhotoIntervalResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.StartPhotoIntervalResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_result()->::mavsdk::rpc::camera::CameraResult::MergeFrom(
        from._internal_camera_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StartPhotoIntervalResponse::CopyFrom(const StartPhotoIntervalResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.StartPhotoIntervalResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StartPhotoIntervalResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StartPhotoIntervalResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StartPhotoIntervalResponse::InternalSwap(StartPhotoIntervalResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_result_, other->_impl_.camera_result_);
}

::google::protobuf::Metadata StartPhotoIntervalResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[8]);
}
// ===================================================================

class StopPhotoIntervalRequest::_Internal {
 public:
};

StopPhotoIntervalRequest::StopPhotoIntervalRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.StopPhotoIntervalRequest)
}
StopPhotoIntervalRequest::StopPhotoIntervalRequest(
    ::google::protobuf::Arena* arena, const StopPhotoIntervalRequest& from)
    : StopPhotoIntervalRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE StopPhotoIntervalRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StopPhotoIntervalRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.component_id_ = {};
}
StopPhotoIntervalRequest::~StopPhotoIntervalRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.StopPhotoIntervalRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StopPhotoIntervalRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StopPhotoIntervalRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.StopPhotoIntervalRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.component_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StopPhotoIntervalRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> StopPhotoIntervalRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StopPhotoIntervalRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StopPhotoIntervalRequest, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StopPhotoIntervalRequest, _impl_.component_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(StopPhotoIntervalRequest, _impl_.component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* StopPhotoIntervalRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.StopPhotoIntervalRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.StopPhotoIntervalRequest)
  return target;
}

::size_t StopPhotoIntervalRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.StopPhotoIntervalRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StopPhotoIntervalRequest::_class_data_ = {
    StopPhotoIntervalRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StopPhotoIntervalRequest::GetClassData() const {
  return &_class_data_;
}

void StopPhotoIntervalRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StopPhotoIntervalRequest*>(&to_msg);
  auto& from = static_cast<const StopPhotoIntervalRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.StopPhotoIntervalRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StopPhotoIntervalRequest::CopyFrom(const StopPhotoIntervalRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.StopPhotoIntervalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StopPhotoIntervalRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StopPhotoIntervalRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StopPhotoIntervalRequest::InternalSwap(StopPhotoIntervalRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.component_id_, other->_impl_.component_id_);
}

::google::protobuf::Metadata StopPhotoIntervalRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[9]);
}
// ===================================================================

class StopPhotoIntervalResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<StopPhotoIntervalResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(StopPhotoIntervalResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::CameraResult& camera_result(const StopPhotoIntervalResponse* msg);
  static void set_has_camera_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::CameraResult& StopPhotoIntervalResponse::_Internal::camera_result(const StopPhotoIntervalResponse* msg) {
  return *msg->_impl_.camera_result_;
}
StopPhotoIntervalResponse::StopPhotoIntervalResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.StopPhotoIntervalResponse)
}
inline PROTOBUF_NDEBUG_INLINE StopPhotoIntervalResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

StopPhotoIntervalResponse::StopPhotoIntervalResponse(
    ::google::protobuf::Arena* arena,
    const StopPhotoIntervalResponse& from)
    : ::google::protobuf::Message(arena) {
  StopPhotoIntervalResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::CameraResult>(arena, *from._impl_.camera_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.StopPhotoIntervalResponse)
}
inline PROTOBUF_NDEBUG_INLINE StopPhotoIntervalResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StopPhotoIntervalResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_result_ = {};
}
StopPhotoIntervalResponse::~StopPhotoIntervalResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.StopPhotoIntervalResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StopPhotoIntervalResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StopPhotoIntervalResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.StopPhotoIntervalResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_result_ != nullptr);
    _impl_.camera_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StopPhotoIntervalResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> StopPhotoIntervalResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StopPhotoIntervalResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StopPhotoIntervalResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StopPhotoIntervalResponse, _impl_.camera_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {PROTOBUF_FIELD_OFFSET(StopPhotoIntervalResponse, _impl_.camera_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::CameraResult>()},
  }}, {{
  }},
};

::uint8_t* StopPhotoIntervalResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.StopPhotoIntervalResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_result(this),
        _Internal::camera_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.StopPhotoIntervalResponse)
  return target;
}

::size_t StopPhotoIntervalResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.StopPhotoIntervalResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StopPhotoIntervalResponse::_class_data_ = {
    StopPhotoIntervalResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StopPhotoIntervalResponse::GetClassData() const {
  return &_class_data_;
}

void StopPhotoIntervalResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StopPhotoIntervalResponse*>(&to_msg);
  auto& from = static_cast<const StopPhotoIntervalResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.StopPhotoIntervalResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_result()->::mavsdk::rpc::camera::CameraResult::MergeFrom(
        from._internal_camera_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StopPhotoIntervalResponse::CopyFrom(const StopPhotoIntervalResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.StopPhotoIntervalResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StopPhotoIntervalResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StopPhotoIntervalResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StopPhotoIntervalResponse::InternalSwap(StopPhotoIntervalResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_result_, other->_impl_.camera_result_);
}

::google::protobuf::Metadata StopPhotoIntervalResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[10]);
}
// ===================================================================

class StartVideoRequest::_Internal {
 public:
};

StartVideoRequest::StartVideoRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.StartVideoRequest)
}
StartVideoRequest::StartVideoRequest(
    ::google::protobuf::Arena* arena, const StartVideoRequest& from)
    : StartVideoRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE StartVideoRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StartVideoRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.component_id_ = {};
}
StartVideoRequest::~StartVideoRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.StartVideoRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StartVideoRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StartVideoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.StartVideoRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.component_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StartVideoRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> StartVideoRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StartVideoRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StartVideoRequest, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StartVideoRequest, _impl_.component_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(StartVideoRequest, _impl_.component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* StartVideoRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.StartVideoRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.StartVideoRequest)
  return target;
}

::size_t StartVideoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.StartVideoRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StartVideoRequest::_class_data_ = {
    StartVideoRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StartVideoRequest::GetClassData() const {
  return &_class_data_;
}

void StartVideoRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StartVideoRequest*>(&to_msg);
  auto& from = static_cast<const StartVideoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.StartVideoRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StartVideoRequest::CopyFrom(const StartVideoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.StartVideoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StartVideoRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StartVideoRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StartVideoRequest::InternalSwap(StartVideoRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.component_id_, other->_impl_.component_id_);
}

::google::protobuf::Metadata StartVideoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[11]);
}
// ===================================================================

class StartVideoResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<StartVideoResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(StartVideoResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::CameraResult& camera_result(const StartVideoResponse* msg);
  static void set_has_camera_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::CameraResult& StartVideoResponse::_Internal::camera_result(const StartVideoResponse* msg) {
  return *msg->_impl_.camera_result_;
}
StartVideoResponse::StartVideoResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.StartVideoResponse)
}
inline PROTOBUF_NDEBUG_INLINE StartVideoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

StartVideoResponse::StartVideoResponse(
    ::google::protobuf::Arena* arena,
    const StartVideoResponse& from)
    : ::google::protobuf::Message(arena) {
  StartVideoResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::CameraResult>(arena, *from._impl_.camera_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.StartVideoResponse)
}
inline PROTOBUF_NDEBUG_INLINE StartVideoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StartVideoResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_result_ = {};
}
StartVideoResponse::~StartVideoResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.StartVideoResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StartVideoResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StartVideoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.StartVideoResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_result_ != nullptr);
    _impl_.camera_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StartVideoResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> StartVideoResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StartVideoResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StartVideoResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StartVideoResponse, _impl_.camera_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {PROTOBUF_FIELD_OFFSET(StartVideoResponse, _impl_.camera_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::CameraResult>()},
  }}, {{
  }},
};

::uint8_t* StartVideoResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.StartVideoResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_result(this),
        _Internal::camera_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.StartVideoResponse)
  return target;
}

::size_t StartVideoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.StartVideoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StartVideoResponse::_class_data_ = {
    StartVideoResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StartVideoResponse::GetClassData() const {
  return &_class_data_;
}

void StartVideoResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StartVideoResponse*>(&to_msg);
  auto& from = static_cast<const StartVideoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.StartVideoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_result()->::mavsdk::rpc::camera::CameraResult::MergeFrom(
        from._internal_camera_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StartVideoResponse::CopyFrom(const StartVideoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.StartVideoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StartVideoResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StartVideoResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StartVideoResponse::InternalSwap(StartVideoResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_result_, other->_impl_.camera_result_);
}

::google::protobuf::Metadata StartVideoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[12]);
}
// ===================================================================

class StopVideoRequest::_Internal {
 public:
};

StopVideoRequest::StopVideoRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.StopVideoRequest)
}
StopVideoRequest::StopVideoRequest(
    ::google::protobuf::Arena* arena, const StopVideoRequest& from)
    : StopVideoRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE StopVideoRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StopVideoRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.component_id_ = {};
}
StopVideoRequest::~StopVideoRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.StopVideoRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StopVideoRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StopVideoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.StopVideoRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.component_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StopVideoRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> StopVideoRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StopVideoRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StopVideoRequest, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StopVideoRequest, _impl_.component_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(StopVideoRequest, _impl_.component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* StopVideoRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.StopVideoRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.StopVideoRequest)
  return target;
}

::size_t StopVideoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.StopVideoRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StopVideoRequest::_class_data_ = {
    StopVideoRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StopVideoRequest::GetClassData() const {
  return &_class_data_;
}

void StopVideoRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StopVideoRequest*>(&to_msg);
  auto& from = static_cast<const StopVideoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.StopVideoRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StopVideoRequest::CopyFrom(const StopVideoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.StopVideoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StopVideoRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StopVideoRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StopVideoRequest::InternalSwap(StopVideoRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.component_id_, other->_impl_.component_id_);
}

::google::protobuf::Metadata StopVideoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[13]);
}
// ===================================================================

class StopVideoResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<StopVideoResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(StopVideoResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::CameraResult& camera_result(const StopVideoResponse* msg);
  static void set_has_camera_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::CameraResult& StopVideoResponse::_Internal::camera_result(const StopVideoResponse* msg) {
  return *msg->_impl_.camera_result_;
}
StopVideoResponse::StopVideoResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.StopVideoResponse)
}
inline PROTOBUF_NDEBUG_INLINE StopVideoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

StopVideoResponse::StopVideoResponse(
    ::google::protobuf::Arena* arena,
    const StopVideoResponse& from)
    : ::google::protobuf::Message(arena) {
  StopVideoResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::CameraResult>(arena, *from._impl_.camera_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.StopVideoResponse)
}
inline PROTOBUF_NDEBUG_INLINE StopVideoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StopVideoResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_result_ = {};
}
StopVideoResponse::~StopVideoResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.StopVideoResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StopVideoResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StopVideoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.StopVideoResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_result_ != nullptr);
    _impl_.camera_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StopVideoResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> StopVideoResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StopVideoResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StopVideoResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StopVideoResponse, _impl_.camera_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {PROTOBUF_FIELD_OFFSET(StopVideoResponse, _impl_.camera_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::CameraResult>()},
  }}, {{
  }},
};

::uint8_t* StopVideoResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.StopVideoResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_result(this),
        _Internal::camera_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.StopVideoResponse)
  return target;
}

::size_t StopVideoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.StopVideoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StopVideoResponse::_class_data_ = {
    StopVideoResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StopVideoResponse::GetClassData() const {
  return &_class_data_;
}

void StopVideoResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StopVideoResponse*>(&to_msg);
  auto& from = static_cast<const StopVideoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.StopVideoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_result()->::mavsdk::rpc::camera::CameraResult::MergeFrom(
        from._internal_camera_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StopVideoResponse::CopyFrom(const StopVideoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.StopVideoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StopVideoResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StopVideoResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StopVideoResponse::InternalSwap(StopVideoResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_result_, other->_impl_.camera_result_);
}

::google::protobuf::Metadata StopVideoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[14]);
}
// ===================================================================

class StartVideoStreamingRequest::_Internal {
 public:
};

StartVideoStreamingRequest::StartVideoStreamingRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.StartVideoStreamingRequest)
}
StartVideoStreamingRequest::StartVideoStreamingRequest(
    ::google::protobuf::Arena* arena, const StartVideoStreamingRequest& from)
    : StartVideoStreamingRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE StartVideoStreamingRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StartVideoStreamingRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, component_id_),
           0,
           offsetof(Impl_, stream_id_) -
               offsetof(Impl_, component_id_) +
               sizeof(Impl_::stream_id_));
}
StartVideoStreamingRequest::~StartVideoStreamingRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.StartVideoStreamingRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StartVideoStreamingRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StartVideoStreamingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.StartVideoStreamingRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.component_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.stream_id_) -
      reinterpret_cast<char*>(&_impl_.component_id_)) + sizeof(_impl_.stream_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StartVideoStreamingRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> StartVideoStreamingRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StartVideoStreamingRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 stream_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StartVideoStreamingRequest, _impl_.stream_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(StartVideoStreamingRequest, _impl_.stream_id_)}},
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StartVideoStreamingRequest, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StartVideoStreamingRequest, _impl_.component_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(StartVideoStreamingRequest, _impl_.component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 stream_id = 2;
    {PROTOBUF_FIELD_OFFSET(StartVideoStreamingRequest, _impl_.stream_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* StartVideoStreamingRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.StartVideoStreamingRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  // int32 stream_id = 2;
  if (this->_internal_stream_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_stream_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.StartVideoStreamingRequest)
  return target;
}

::size_t StartVideoStreamingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.StartVideoStreamingRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  // int32 stream_id = 2;
  if (this->_internal_stream_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_stream_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StartVideoStreamingRequest::_class_data_ = {
    StartVideoStreamingRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StartVideoStreamingRequest::GetClassData() const {
  return &_class_data_;
}

void StartVideoStreamingRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StartVideoStreamingRequest*>(&to_msg);
  auto& from = static_cast<const StartVideoStreamingRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.StartVideoStreamingRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  if (from._internal_stream_id() != 0) {
    _this->_internal_set_stream_id(from._internal_stream_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StartVideoStreamingRequest::CopyFrom(const StartVideoStreamingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.StartVideoStreamingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StartVideoStreamingRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StartVideoStreamingRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StartVideoStreamingRequest::InternalSwap(StartVideoStreamingRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StartVideoStreamingRequest, _impl_.stream_id_)
      + sizeof(StartVideoStreamingRequest::_impl_.stream_id_)
      - PROTOBUF_FIELD_OFFSET(StartVideoStreamingRequest, _impl_.component_id_)>(
          reinterpret_cast<char*>(&_impl_.component_id_),
          reinterpret_cast<char*>(&other->_impl_.component_id_));
}

::google::protobuf::Metadata StartVideoStreamingRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[15]);
}
// ===================================================================

class StartVideoStreamingResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<StartVideoStreamingResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(StartVideoStreamingResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::CameraResult& camera_result(const StartVideoStreamingResponse* msg);
  static void set_has_camera_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::CameraResult& StartVideoStreamingResponse::_Internal::camera_result(const StartVideoStreamingResponse* msg) {
  return *msg->_impl_.camera_result_;
}
StartVideoStreamingResponse::StartVideoStreamingResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.StartVideoStreamingResponse)
}
inline PROTOBUF_NDEBUG_INLINE StartVideoStreamingResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

StartVideoStreamingResponse::StartVideoStreamingResponse(
    ::google::protobuf::Arena* arena,
    const StartVideoStreamingResponse& from)
    : ::google::protobuf::Message(arena) {
  StartVideoStreamingResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::CameraResult>(arena, *from._impl_.camera_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.StartVideoStreamingResponse)
}
inline PROTOBUF_NDEBUG_INLINE StartVideoStreamingResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StartVideoStreamingResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_result_ = {};
}
StartVideoStreamingResponse::~StartVideoStreamingResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.StartVideoStreamingResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StartVideoStreamingResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StartVideoStreamingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.StartVideoStreamingResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_result_ != nullptr);
    _impl_.camera_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StartVideoStreamingResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> StartVideoStreamingResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StartVideoStreamingResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StartVideoStreamingResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StartVideoStreamingResponse, _impl_.camera_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {PROTOBUF_FIELD_OFFSET(StartVideoStreamingResponse, _impl_.camera_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::CameraResult>()},
  }}, {{
  }},
};

::uint8_t* StartVideoStreamingResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.StartVideoStreamingResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_result(this),
        _Internal::camera_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.StartVideoStreamingResponse)
  return target;
}

::size_t StartVideoStreamingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.StartVideoStreamingResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StartVideoStreamingResponse::_class_data_ = {
    StartVideoStreamingResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StartVideoStreamingResponse::GetClassData() const {
  return &_class_data_;
}

void StartVideoStreamingResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StartVideoStreamingResponse*>(&to_msg);
  auto& from = static_cast<const StartVideoStreamingResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.StartVideoStreamingResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_result()->::mavsdk::rpc::camera::CameraResult::MergeFrom(
        from._internal_camera_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StartVideoStreamingResponse::CopyFrom(const StartVideoStreamingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.StartVideoStreamingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StartVideoStreamingResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StartVideoStreamingResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StartVideoStreamingResponse::InternalSwap(StartVideoStreamingResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_result_, other->_impl_.camera_result_);
}

::google::protobuf::Metadata StartVideoStreamingResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[16]);
}
// ===================================================================

class StopVideoStreamingRequest::_Internal {
 public:
};

StopVideoStreamingRequest::StopVideoStreamingRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.StopVideoStreamingRequest)
}
StopVideoStreamingRequest::StopVideoStreamingRequest(
    ::google::protobuf::Arena* arena, const StopVideoStreamingRequest& from)
    : StopVideoStreamingRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE StopVideoStreamingRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StopVideoStreamingRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, component_id_),
           0,
           offsetof(Impl_, stream_id_) -
               offsetof(Impl_, component_id_) +
               sizeof(Impl_::stream_id_));
}
StopVideoStreamingRequest::~StopVideoStreamingRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.StopVideoStreamingRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StopVideoStreamingRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StopVideoStreamingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.StopVideoStreamingRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.component_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.stream_id_) -
      reinterpret_cast<char*>(&_impl_.component_id_)) + sizeof(_impl_.stream_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StopVideoStreamingRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> StopVideoStreamingRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StopVideoStreamingRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 stream_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StopVideoStreamingRequest, _impl_.stream_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(StopVideoStreamingRequest, _impl_.stream_id_)}},
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StopVideoStreamingRequest, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StopVideoStreamingRequest, _impl_.component_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(StopVideoStreamingRequest, _impl_.component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 stream_id = 2;
    {PROTOBUF_FIELD_OFFSET(StopVideoStreamingRequest, _impl_.stream_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* StopVideoStreamingRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.StopVideoStreamingRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  // int32 stream_id = 2;
  if (this->_internal_stream_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_stream_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.StopVideoStreamingRequest)
  return target;
}

::size_t StopVideoStreamingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.StopVideoStreamingRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  // int32 stream_id = 2;
  if (this->_internal_stream_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_stream_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StopVideoStreamingRequest::_class_data_ = {
    StopVideoStreamingRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StopVideoStreamingRequest::GetClassData() const {
  return &_class_data_;
}

void StopVideoStreamingRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StopVideoStreamingRequest*>(&to_msg);
  auto& from = static_cast<const StopVideoStreamingRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.StopVideoStreamingRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  if (from._internal_stream_id() != 0) {
    _this->_internal_set_stream_id(from._internal_stream_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StopVideoStreamingRequest::CopyFrom(const StopVideoStreamingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.StopVideoStreamingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StopVideoStreamingRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StopVideoStreamingRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StopVideoStreamingRequest::InternalSwap(StopVideoStreamingRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StopVideoStreamingRequest, _impl_.stream_id_)
      + sizeof(StopVideoStreamingRequest::_impl_.stream_id_)
      - PROTOBUF_FIELD_OFFSET(StopVideoStreamingRequest, _impl_.component_id_)>(
          reinterpret_cast<char*>(&_impl_.component_id_),
          reinterpret_cast<char*>(&other->_impl_.component_id_));
}

::google::protobuf::Metadata StopVideoStreamingRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[17]);
}
// ===================================================================

class StopVideoStreamingResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<StopVideoStreamingResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(StopVideoStreamingResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::CameraResult& camera_result(const StopVideoStreamingResponse* msg);
  static void set_has_camera_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::CameraResult& StopVideoStreamingResponse::_Internal::camera_result(const StopVideoStreamingResponse* msg) {
  return *msg->_impl_.camera_result_;
}
StopVideoStreamingResponse::StopVideoStreamingResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.StopVideoStreamingResponse)
}
inline PROTOBUF_NDEBUG_INLINE StopVideoStreamingResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

StopVideoStreamingResponse::StopVideoStreamingResponse(
    ::google::protobuf::Arena* arena,
    const StopVideoStreamingResponse& from)
    : ::google::protobuf::Message(arena) {
  StopVideoStreamingResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::CameraResult>(arena, *from._impl_.camera_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.StopVideoStreamingResponse)
}
inline PROTOBUF_NDEBUG_INLINE StopVideoStreamingResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StopVideoStreamingResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_result_ = {};
}
StopVideoStreamingResponse::~StopVideoStreamingResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.StopVideoStreamingResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StopVideoStreamingResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StopVideoStreamingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.StopVideoStreamingResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_result_ != nullptr);
    _impl_.camera_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StopVideoStreamingResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> StopVideoStreamingResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StopVideoStreamingResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StopVideoStreamingResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StopVideoStreamingResponse, _impl_.camera_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {PROTOBUF_FIELD_OFFSET(StopVideoStreamingResponse, _impl_.camera_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::CameraResult>()},
  }}, {{
  }},
};

::uint8_t* StopVideoStreamingResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.StopVideoStreamingResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_result(this),
        _Internal::camera_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.StopVideoStreamingResponse)
  return target;
}

::size_t StopVideoStreamingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.StopVideoStreamingResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StopVideoStreamingResponse::_class_data_ = {
    StopVideoStreamingResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StopVideoStreamingResponse::GetClassData() const {
  return &_class_data_;
}

void StopVideoStreamingResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StopVideoStreamingResponse*>(&to_msg);
  auto& from = static_cast<const StopVideoStreamingResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.StopVideoStreamingResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_result()->::mavsdk::rpc::camera::CameraResult::MergeFrom(
        from._internal_camera_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StopVideoStreamingResponse::CopyFrom(const StopVideoStreamingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.StopVideoStreamingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StopVideoStreamingResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StopVideoStreamingResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StopVideoStreamingResponse::InternalSwap(StopVideoStreamingResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_result_, other->_impl_.camera_result_);
}

::google::protobuf::Metadata StopVideoStreamingResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[18]);
}
// ===================================================================

class SetModeRequest::_Internal {
 public:
};

SetModeRequest::SetModeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.SetModeRequest)
}
SetModeRequest::SetModeRequest(
    ::google::protobuf::Arena* arena, const SetModeRequest& from)
    : SetModeRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetModeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetModeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, component_id_),
           0,
           offsetof(Impl_, mode_) -
               offsetof(Impl_, component_id_) +
               sizeof(Impl_::mode_));
}
SetModeRequest::~SetModeRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.SetModeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetModeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetModeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.SetModeRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.component_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.mode_) -
      reinterpret_cast<char*>(&_impl_.component_id_)) + sizeof(_impl_.mode_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetModeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> SetModeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetModeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.Mode mode = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetModeRequest, _impl_.mode_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SetModeRequest, _impl_.mode_)}},
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetModeRequest, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SetModeRequest, _impl_.component_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(SetModeRequest, _impl_.component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .mavsdk.rpc.camera.Mode mode = 2;
    {PROTOBUF_FIELD_OFFSET(SetModeRequest, _impl_.mode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetModeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.SetModeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  // .mavsdk.rpc.camera.Mode mode = 2;
  if (this->_internal_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.SetModeRequest)
  return target;
}

::size_t SetModeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.SetModeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  // .mavsdk.rpc.camera.Mode mode = 2;
  if (this->_internal_mode() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetModeRequest::_class_data_ = {
    SetModeRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetModeRequest::GetClassData() const {
  return &_class_data_;
}

void SetModeRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetModeRequest*>(&to_msg);
  auto& from = static_cast<const SetModeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.SetModeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  if (from._internal_mode() != 0) {
    _this->_internal_set_mode(from._internal_mode());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetModeRequest::CopyFrom(const SetModeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.SetModeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetModeRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetModeRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetModeRequest::InternalSwap(SetModeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetModeRequest, _impl_.mode_)
      + sizeof(SetModeRequest::_impl_.mode_)
      - PROTOBUF_FIELD_OFFSET(SetModeRequest, _impl_.component_id_)>(
          reinterpret_cast<char*>(&_impl_.component_id_),
          reinterpret_cast<char*>(&other->_impl_.component_id_));
}

::google::protobuf::Metadata SetModeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[19]);
}
// ===================================================================

class SetModeResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SetModeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetModeResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::CameraResult& camera_result(const SetModeResponse* msg);
  static void set_has_camera_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::CameraResult& SetModeResponse::_Internal::camera_result(const SetModeResponse* msg) {
  return *msg->_impl_.camera_result_;
}
SetModeResponse::SetModeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.SetModeResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetModeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetModeResponse::SetModeResponse(
    ::google::protobuf::Arena* arena,
    const SetModeResponse& from)
    : ::google::protobuf::Message(arena) {
  SetModeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::CameraResult>(arena, *from._impl_.camera_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.SetModeResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetModeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetModeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_result_ = {};
}
SetModeResponse::~SetModeResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.SetModeResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetModeResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetModeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.SetModeResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_result_ != nullptr);
    _impl_.camera_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetModeResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetModeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetModeResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetModeResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetModeResponse, _impl_.camera_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetModeResponse, _impl_.camera_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::CameraResult>()},
  }}, {{
  }},
};

::uint8_t* SetModeResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.SetModeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_result(this),
        _Internal::camera_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.SetModeResponse)
  return target;
}

::size_t SetModeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.SetModeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetModeResponse::_class_data_ = {
    SetModeResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetModeResponse::GetClassData() const {
  return &_class_data_;
}

void SetModeResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetModeResponse*>(&to_msg);
  auto& from = static_cast<const SetModeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.SetModeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_result()->::mavsdk::rpc::camera::CameraResult::MergeFrom(
        from._internal_camera_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetModeResponse::CopyFrom(const SetModeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.SetModeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetModeResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetModeResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetModeResponse::InternalSwap(SetModeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_result_, other->_impl_.camera_result_);
}

::google::protobuf::Metadata SetModeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[20]);
}
// ===================================================================

class ListPhotosRequest::_Internal {
 public:
};

ListPhotosRequest::ListPhotosRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.ListPhotosRequest)
}
ListPhotosRequest::ListPhotosRequest(
    ::google::protobuf::Arena* arena, const ListPhotosRequest& from)
    : ListPhotosRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ListPhotosRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ListPhotosRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, component_id_),
           0,
           offsetof(Impl_, photos_range_) -
               offsetof(Impl_, component_id_) +
               sizeof(Impl_::photos_range_));
}
ListPhotosRequest::~ListPhotosRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.ListPhotosRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ListPhotosRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ListPhotosRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.ListPhotosRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.component_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.photos_range_) -
      reinterpret_cast<char*>(&_impl_.component_id_)) + sizeof(_impl_.photos_range_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ListPhotosRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> ListPhotosRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ListPhotosRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.PhotosRange photos_range = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListPhotosRequest, _impl_.photos_range_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ListPhotosRequest, _impl_.photos_range_)}},
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListPhotosRequest, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ListPhotosRequest, _impl_.component_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(ListPhotosRequest, _impl_.component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .mavsdk.rpc.camera.PhotosRange photos_range = 2;
    {PROTOBUF_FIELD_OFFSET(ListPhotosRequest, _impl_.photos_range_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ListPhotosRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.ListPhotosRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  // .mavsdk.rpc.camera.PhotosRange photos_range = 2;
  if (this->_internal_photos_range() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_photos_range(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.ListPhotosRequest)
  return target;
}

::size_t ListPhotosRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.ListPhotosRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  // .mavsdk.rpc.camera.PhotosRange photos_range = 2;
  if (this->_internal_photos_range() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_photos_range());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ListPhotosRequest::_class_data_ = {
    ListPhotosRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ListPhotosRequest::GetClassData() const {
  return &_class_data_;
}

void ListPhotosRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ListPhotosRequest*>(&to_msg);
  auto& from = static_cast<const ListPhotosRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.ListPhotosRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  if (from._internal_photos_range() != 0) {
    _this->_internal_set_photos_range(from._internal_photos_range());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListPhotosRequest::CopyFrom(const ListPhotosRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.ListPhotosRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ListPhotosRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ListPhotosRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ListPhotosRequest::InternalSwap(ListPhotosRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListPhotosRequest, _impl_.photos_range_)
      + sizeof(ListPhotosRequest::_impl_.photos_range_)
      - PROTOBUF_FIELD_OFFSET(ListPhotosRequest, _impl_.component_id_)>(
          reinterpret_cast<char*>(&_impl_.component_id_),
          reinterpret_cast<char*>(&other->_impl_.component_id_));
}

::google::protobuf::Metadata ListPhotosRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[21]);
}
// ===================================================================

class ListPhotosResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ListPhotosResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ListPhotosResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::CameraResult& camera_result(const ListPhotosResponse* msg);
  static void set_has_camera_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::CameraResult& ListPhotosResponse::_Internal::camera_result(const ListPhotosResponse* msg) {
  return *msg->_impl_.camera_result_;
}
ListPhotosResponse::ListPhotosResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.ListPhotosResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListPhotosResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        capture_infos_{visibility, arena, from.capture_infos_} {}

ListPhotosResponse::ListPhotosResponse(
    ::google::protobuf::Arena* arena,
    const ListPhotosResponse& from)
    : ::google::protobuf::Message(arena) {
  ListPhotosResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::CameraResult>(arena, *from._impl_.camera_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.ListPhotosResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListPhotosResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        capture_infos_{visibility, arena} {}

inline void ListPhotosResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_result_ = {};
}
ListPhotosResponse::~ListPhotosResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.ListPhotosResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ListPhotosResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ListPhotosResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.ListPhotosResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.capture_infos_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_result_ != nullptr);
    _impl_.camera_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ListPhotosResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> ListPhotosResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ListPhotosResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ListPhotosResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .mavsdk.rpc.camera.CaptureInfo capture_infos = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(ListPhotosResponse, _impl_.capture_infos_)}},
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ListPhotosResponse, _impl_.camera_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {PROTOBUF_FIELD_OFFSET(ListPhotosResponse, _impl_.camera_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .mavsdk.rpc.camera.CaptureInfo capture_infos = 2;
    {PROTOBUF_FIELD_OFFSET(ListPhotosResponse, _impl_.capture_infos_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::CameraResult>()},
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::CaptureInfo>()},
  }}, {{
  }},
};

::uint8_t* ListPhotosResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.ListPhotosResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_result(this),
        _Internal::camera_result(this).GetCachedSize(), target, stream);
  }

  // repeated .mavsdk.rpc.camera.CaptureInfo capture_infos = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_capture_infos_size()); i < n; i++) {
    const auto& repfield = this->_internal_capture_infos().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.ListPhotosResponse)
  return target;
}

::size_t ListPhotosResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.ListPhotosResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .mavsdk.rpc.camera.CaptureInfo capture_infos = 2;
  total_size += 1UL * this->_internal_capture_infos_size();
  for (const auto& msg : this->_internal_capture_infos()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ListPhotosResponse::_class_data_ = {
    ListPhotosResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ListPhotosResponse::GetClassData() const {
  return &_class_data_;
}

void ListPhotosResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ListPhotosResponse*>(&to_msg);
  auto& from = static_cast<const ListPhotosResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.ListPhotosResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_capture_infos()->MergeFrom(
      from._internal_capture_infos());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_result()->::mavsdk::rpc::camera::CameraResult::MergeFrom(
        from._internal_camera_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListPhotosResponse::CopyFrom(const ListPhotosResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.ListPhotosResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ListPhotosResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ListPhotosResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ListPhotosResponse::InternalSwap(ListPhotosResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.capture_infos_.InternalSwap(&other->_impl_.capture_infos_);
  swap(_impl_.camera_result_, other->_impl_.camera_result_);
}

::google::protobuf::Metadata ListPhotosResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[22]);
}
// ===================================================================

class SubscribeCameraListRequest::_Internal {
 public:
};

SubscribeCameraListRequest::SubscribeCameraListRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.SubscribeCameraListRequest)
}
SubscribeCameraListRequest::SubscribeCameraListRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeCameraListRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SubscribeCameraListRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.SubscribeCameraListRequest)
}









::google::protobuf::Metadata SubscribeCameraListRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[23]);
}
// ===================================================================

class CameraListResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CameraListResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CameraListResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::CameraList& camera_list(const CameraListResponse* msg);
  static void set_has_camera_list(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::CameraList& CameraListResponse::_Internal::camera_list(const CameraListResponse* msg) {
  return *msg->_impl_.camera_list_;
}
CameraListResponse::CameraListResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.CameraListResponse)
}
inline PROTOBUF_NDEBUG_INLINE CameraListResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CameraListResponse::CameraListResponse(
    ::google::protobuf::Arena* arena,
    const CameraListResponse& from)
    : ::google::protobuf::Message(arena) {
  CameraListResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_list_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::CameraList>(arena, *from._impl_.camera_list_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.CameraListResponse)
}
inline PROTOBUF_NDEBUG_INLINE CameraListResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CameraListResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_list_ = {};
}
CameraListResponse::~CameraListResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.CameraListResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CameraListResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_list_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CameraListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.CameraListResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_list_ != nullptr);
    _impl_.camera_list_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CameraListResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CameraListResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CameraListResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CameraListResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.CameraList camera_list = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CameraListResponse, _impl_.camera_list_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.CameraList camera_list = 1;
    {PROTOBUF_FIELD_OFFSET(CameraListResponse, _impl_.camera_list_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::CameraList>()},
  }}, {{
  }},
};

::uint8_t* CameraListResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.CameraListResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.CameraList camera_list = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_list(this),
        _Internal::camera_list(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.CameraListResponse)
  return target;
}

::size_t CameraListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.CameraListResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera.CameraList camera_list = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_list_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CameraListResponse::_class_data_ = {
    CameraListResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CameraListResponse::GetClassData() const {
  return &_class_data_;
}

void CameraListResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CameraListResponse*>(&to_msg);
  auto& from = static_cast<const CameraListResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.CameraListResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_list()->::mavsdk::rpc::camera::CameraList::MergeFrom(
        from._internal_camera_list());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CameraListResponse::CopyFrom(const CameraListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.CameraListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CameraListResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CameraListResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CameraListResponse::InternalSwap(CameraListResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_list_, other->_impl_.camera_list_);
}

::google::protobuf::Metadata CameraListResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[24]);
}
// ===================================================================

class ModeUpdate::_Internal {
 public:
};

ModeUpdate::ModeUpdate(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.ModeUpdate)
}
ModeUpdate::ModeUpdate(
    ::google::protobuf::Arena* arena, const ModeUpdate& from)
    : ModeUpdate(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ModeUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ModeUpdate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, component_id_),
           0,
           offsetof(Impl_, mode_) -
               offsetof(Impl_, component_id_) +
               sizeof(Impl_::mode_));
}
ModeUpdate::~ModeUpdate() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.ModeUpdate)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ModeUpdate::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ModeUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.ModeUpdate)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.component_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.mode_) -
      reinterpret_cast<char*>(&_impl_.component_id_)) + sizeof(_impl_.mode_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ModeUpdate::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> ModeUpdate::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ModeUpdate_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.Mode mode = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModeUpdate, _impl_.mode_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ModeUpdate, _impl_.mode_)}},
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModeUpdate, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ModeUpdate, _impl_.component_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(ModeUpdate, _impl_.component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .mavsdk.rpc.camera.Mode mode = 2;
    {PROTOBUF_FIELD_OFFSET(ModeUpdate, _impl_.mode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ModeUpdate::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.ModeUpdate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  // .mavsdk.rpc.camera.Mode mode = 2;
  if (this->_internal_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.ModeUpdate)
  return target;
}

::size_t ModeUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.ModeUpdate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  // .mavsdk.rpc.camera.Mode mode = 2;
  if (this->_internal_mode() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ModeUpdate::_class_data_ = {
    ModeUpdate::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ModeUpdate::GetClassData() const {
  return &_class_data_;
}

void ModeUpdate::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ModeUpdate*>(&to_msg);
  auto& from = static_cast<const ModeUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.ModeUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  if (from._internal_mode() != 0) {
    _this->_internal_set_mode(from._internal_mode());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModeUpdate::CopyFrom(const ModeUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.ModeUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ModeUpdate::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ModeUpdate::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ModeUpdate::InternalSwap(ModeUpdate* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModeUpdate, _impl_.mode_)
      + sizeof(ModeUpdate::_impl_.mode_)
      - PROTOBUF_FIELD_OFFSET(ModeUpdate, _impl_.component_id_)>(
          reinterpret_cast<char*>(&_impl_.component_id_),
          reinterpret_cast<char*>(&other->_impl_.component_id_));
}

::google::protobuf::Metadata ModeUpdate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[25]);
}
// ===================================================================

class SubscribeModeRequest::_Internal {
 public:
};

SubscribeModeRequest::SubscribeModeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.SubscribeModeRequest)
}
SubscribeModeRequest::SubscribeModeRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeModeRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SubscribeModeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.SubscribeModeRequest)
}









::google::protobuf::Metadata SubscribeModeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[26]);
}
// ===================================================================

class ModeResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ModeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ModeResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::ModeUpdate& update(const ModeResponse* msg);
  static void set_has_update(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::ModeUpdate& ModeResponse::_Internal::update(const ModeResponse* msg) {
  return *msg->_impl_.update_;
}
ModeResponse::ModeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.ModeResponse)
}
inline PROTOBUF_NDEBUG_INLINE ModeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ModeResponse::ModeResponse(
    ::google::protobuf::Arena* arena,
    const ModeResponse& from)
    : ::google::protobuf::Message(arena) {
  ModeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.update_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::ModeUpdate>(arena, *from._impl_.update_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.ModeResponse)
}
inline PROTOBUF_NDEBUG_INLINE ModeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ModeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.update_ = {};
}
ModeResponse::~ModeResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.ModeResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ModeResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.update_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ModeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.ModeResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.update_ != nullptr);
    _impl_.update_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ModeResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ModeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ModeResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ModeResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.ModeUpdate update = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ModeResponse, _impl_.update_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.ModeUpdate update = 1;
    {PROTOBUF_FIELD_OFFSET(ModeResponse, _impl_.update_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::ModeUpdate>()},
  }}, {{
  }},
};

::uint8_t* ModeResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.ModeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.ModeUpdate update = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::update(this),
        _Internal::update(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.ModeResponse)
  return target;
}

::size_t ModeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.ModeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera.ModeUpdate update = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.update_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ModeResponse::_class_data_ = {
    ModeResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ModeResponse::GetClassData() const {
  return &_class_data_;
}

void ModeResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ModeResponse*>(&to_msg);
  auto& from = static_cast<const ModeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.ModeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_update()->::mavsdk::rpc::camera::ModeUpdate::MergeFrom(
        from._internal_update());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModeResponse::CopyFrom(const ModeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.ModeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ModeResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ModeResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ModeResponse::InternalSwap(ModeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.update_, other->_impl_.update_);
}

::google::protobuf::Metadata ModeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[27]);
}
// ===================================================================

class VideoStreamUpdate::_Internal {
 public:
  using HasBits = decltype(std::declval<VideoStreamUpdate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VideoStreamUpdate, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::VideoStreamInfo& video_stream_info(const VideoStreamUpdate* msg);
  static void set_has_video_stream_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::VideoStreamInfo& VideoStreamUpdate::_Internal::video_stream_info(const VideoStreamUpdate* msg) {
  return *msg->_impl_.video_stream_info_;
}
VideoStreamUpdate::VideoStreamUpdate(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.VideoStreamUpdate)
}
inline PROTOBUF_NDEBUG_INLINE VideoStreamUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

VideoStreamUpdate::VideoStreamUpdate(
    ::google::protobuf::Arena* arena,
    const VideoStreamUpdate& from)
    : ::google::protobuf::Message(arena) {
  VideoStreamUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.video_stream_info_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::VideoStreamInfo>(arena, *from._impl_.video_stream_info_)
                : nullptr;
  _impl_.component_id_ = from._impl_.component_id_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.VideoStreamUpdate)
}
inline PROTOBUF_NDEBUG_INLINE VideoStreamUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VideoStreamUpdate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, video_stream_info_),
           0,
           offsetof(Impl_, component_id_) -
               offsetof(Impl_, video_stream_info_) +
               sizeof(Impl_::component_id_));
}
VideoStreamUpdate::~VideoStreamUpdate() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.VideoStreamUpdate)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VideoStreamUpdate::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.video_stream_info_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VideoStreamUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.VideoStreamUpdate)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.video_stream_info_ != nullptr);
    _impl_.video_stream_info_->Clear();
  }
  _impl_.component_id_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VideoStreamUpdate::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> VideoStreamUpdate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VideoStreamUpdate, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VideoStreamUpdate_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.VideoStreamInfo video_stream_info = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(VideoStreamUpdate, _impl_.video_stream_info_)}},
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VideoStreamUpdate, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(VideoStreamUpdate, _impl_.component_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(VideoStreamUpdate, _impl_.component_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .mavsdk.rpc.camera.VideoStreamInfo video_stream_info = 2;
    {PROTOBUF_FIELD_OFFSET(VideoStreamUpdate, _impl_.video_stream_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::VideoStreamInfo>()},
  }}, {{
  }},
};

::uint8_t* VideoStreamUpdate::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.VideoStreamUpdate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.VideoStreamInfo video_stream_info = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::video_stream_info(this),
        _Internal::video_stream_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.VideoStreamUpdate)
  return target;
}

::size_t VideoStreamUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.VideoStreamUpdate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera.VideoStreamInfo video_stream_info = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.video_stream_info_);
  }

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VideoStreamUpdate::_class_data_ = {
    VideoStreamUpdate::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VideoStreamUpdate::GetClassData() const {
  return &_class_data_;
}

void VideoStreamUpdate::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VideoStreamUpdate*>(&to_msg);
  auto& from = static_cast<const VideoStreamUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.VideoStreamUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_video_stream_info()->::mavsdk::rpc::camera::VideoStreamInfo::MergeFrom(
        from._internal_video_stream_info());
  }
  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VideoStreamUpdate::CopyFrom(const VideoStreamUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.VideoStreamUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VideoStreamUpdate::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VideoStreamUpdate::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VideoStreamUpdate::InternalSwap(VideoStreamUpdate* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VideoStreamUpdate, _impl_.component_id_)
      + sizeof(VideoStreamUpdate::_impl_.component_id_)
      - PROTOBUF_FIELD_OFFSET(VideoStreamUpdate, _impl_.video_stream_info_)>(
          reinterpret_cast<char*>(&_impl_.video_stream_info_),
          reinterpret_cast<char*>(&other->_impl_.video_stream_info_));
}

::google::protobuf::Metadata VideoStreamUpdate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[28]);
}
// ===================================================================

class SubscribeVideoStreamInfoRequest::_Internal {
 public:
};

SubscribeVideoStreamInfoRequest::SubscribeVideoStreamInfoRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.SubscribeVideoStreamInfoRequest)
}
SubscribeVideoStreamInfoRequest::SubscribeVideoStreamInfoRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeVideoStreamInfoRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SubscribeVideoStreamInfoRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.SubscribeVideoStreamInfoRequest)
}









::google::protobuf::Metadata SubscribeVideoStreamInfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[29]);
}
// ===================================================================

class VideoStreamInfoResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<VideoStreamInfoResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VideoStreamInfoResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::VideoStreamUpdate& update(const VideoStreamInfoResponse* msg);
  static void set_has_update(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::VideoStreamUpdate& VideoStreamInfoResponse::_Internal::update(const VideoStreamInfoResponse* msg) {
  return *msg->_impl_.update_;
}
VideoStreamInfoResponse::VideoStreamInfoResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.VideoStreamInfoResponse)
}
inline PROTOBUF_NDEBUG_INLINE VideoStreamInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

VideoStreamInfoResponse::VideoStreamInfoResponse(
    ::google::protobuf::Arena* arena,
    const VideoStreamInfoResponse& from)
    : ::google::protobuf::Message(arena) {
  VideoStreamInfoResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.update_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::VideoStreamUpdate>(arena, *from._impl_.update_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.VideoStreamInfoResponse)
}
inline PROTOBUF_NDEBUG_INLINE VideoStreamInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VideoStreamInfoResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.update_ = {};
}
VideoStreamInfoResponse::~VideoStreamInfoResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.VideoStreamInfoResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VideoStreamInfoResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.update_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VideoStreamInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.VideoStreamInfoResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.update_ != nullptr);
    _impl_.update_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VideoStreamInfoResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> VideoStreamInfoResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VideoStreamInfoResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VideoStreamInfoResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.VideoStreamUpdate update = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VideoStreamInfoResponse, _impl_.update_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.VideoStreamUpdate update = 1;
    {PROTOBUF_FIELD_OFFSET(VideoStreamInfoResponse, _impl_.update_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::VideoStreamUpdate>()},
  }}, {{
  }},
};

::uint8_t* VideoStreamInfoResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.VideoStreamInfoResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.VideoStreamUpdate update = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::update(this),
        _Internal::update(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.VideoStreamInfoResponse)
  return target;
}

::size_t VideoStreamInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.VideoStreamInfoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera.VideoStreamUpdate update = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.update_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VideoStreamInfoResponse::_class_data_ = {
    VideoStreamInfoResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VideoStreamInfoResponse::GetClassData() const {
  return &_class_data_;
}

void VideoStreamInfoResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VideoStreamInfoResponse*>(&to_msg);
  auto& from = static_cast<const VideoStreamInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.VideoStreamInfoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_update()->::mavsdk::rpc::camera::VideoStreamUpdate::MergeFrom(
        from._internal_update());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VideoStreamInfoResponse::CopyFrom(const VideoStreamInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.VideoStreamInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VideoStreamInfoResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VideoStreamInfoResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VideoStreamInfoResponse::InternalSwap(VideoStreamInfoResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.update_, other->_impl_.update_);
}

::google::protobuf::Metadata VideoStreamInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[30]);
}
// ===================================================================

class SubscribeCaptureInfoRequest::_Internal {
 public:
};

SubscribeCaptureInfoRequest::SubscribeCaptureInfoRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.SubscribeCaptureInfoRequest)
}
SubscribeCaptureInfoRequest::SubscribeCaptureInfoRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeCaptureInfoRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SubscribeCaptureInfoRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.SubscribeCaptureInfoRequest)
}









::google::protobuf::Metadata SubscribeCaptureInfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[31]);
}
// ===================================================================

class CaptureInfoResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CaptureInfoResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CaptureInfoResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::CaptureInfo& capture_info(const CaptureInfoResponse* msg);
  static void set_has_capture_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::CaptureInfo& CaptureInfoResponse::_Internal::capture_info(const CaptureInfoResponse* msg) {
  return *msg->_impl_.capture_info_;
}
CaptureInfoResponse::CaptureInfoResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.CaptureInfoResponse)
}
inline PROTOBUF_NDEBUG_INLINE CaptureInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CaptureInfoResponse::CaptureInfoResponse(
    ::google::protobuf::Arena* arena,
    const CaptureInfoResponse& from)
    : ::google::protobuf::Message(arena) {
  CaptureInfoResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.capture_info_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::CaptureInfo>(arena, *from._impl_.capture_info_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.CaptureInfoResponse)
}
inline PROTOBUF_NDEBUG_INLINE CaptureInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CaptureInfoResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.capture_info_ = {};
}
CaptureInfoResponse::~CaptureInfoResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.CaptureInfoResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CaptureInfoResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.capture_info_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CaptureInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.CaptureInfoResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.capture_info_ != nullptr);
    _impl_.capture_info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CaptureInfoResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CaptureInfoResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CaptureInfoResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CaptureInfoResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.CaptureInfo capture_info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CaptureInfoResponse, _impl_.capture_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.CaptureInfo capture_info = 1;
    {PROTOBUF_FIELD_OFFSET(CaptureInfoResponse, _impl_.capture_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::CaptureInfo>()},
  }}, {{
  }},
};

::uint8_t* CaptureInfoResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.CaptureInfoResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.CaptureInfo capture_info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::capture_info(this),
        _Internal::capture_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.CaptureInfoResponse)
  return target;
}

::size_t CaptureInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.CaptureInfoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera.CaptureInfo capture_info = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.capture_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CaptureInfoResponse::_class_data_ = {
    CaptureInfoResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CaptureInfoResponse::GetClassData() const {
  return &_class_data_;
}

void CaptureInfoResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CaptureInfoResponse*>(&to_msg);
  auto& from = static_cast<const CaptureInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.CaptureInfoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_capture_info()->::mavsdk::rpc::camera::CaptureInfo::MergeFrom(
        from._internal_capture_info());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CaptureInfoResponse::CopyFrom(const CaptureInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.CaptureInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CaptureInfoResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CaptureInfoResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CaptureInfoResponse::InternalSwap(CaptureInfoResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.capture_info_, other->_impl_.capture_info_);
}

::google::protobuf::Metadata CaptureInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[32]);
}
// ===================================================================

class Storage::_Internal {
 public:
};

Storage::Storage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.Storage)
}
inline PROTOBUF_NDEBUG_INLINE Storage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : media_folder_name_(arena, from.media_folder_name_),
        _cached_size_{0} {}

Storage::Storage(
    ::google::protobuf::Arena* arena,
    const Storage& from)
    : ::google::protobuf::Message(arena) {
  Storage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, component_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, component_id_),
           offsetof(Impl_, storage_type_) -
               offsetof(Impl_, component_id_) +
               sizeof(Impl_::storage_type_));

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.Storage)
}
inline PROTOBUF_NDEBUG_INLINE Storage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : media_folder_name_(arena),
        _cached_size_{0} {}

inline void Storage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, component_id_),
           0,
           offsetof(Impl_, storage_type_) -
               offsetof(Impl_, component_id_) +
               sizeof(Impl_::storage_type_));
}
Storage::~Storage() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.Storage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Storage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.media_folder_name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Storage::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.Storage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.media_folder_name_.ClearToEmpty();
  ::memset(&_impl_.component_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.storage_type_) -
      reinterpret_cast<char*>(&_impl_.component_id_)) + sizeof(_impl_.storage_type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Storage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 0, 59, 2> Storage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Storage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Storage, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Storage, _impl_.component_id_)}},
    // bool video_on = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Storage, _impl_.video_on_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Storage, _impl_.video_on_)}},
    // bool photo_interval_on = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Storage, _impl_.photo_interval_on_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Storage, _impl_.photo_interval_on_)}},
    // float used_storage_mib = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(Storage, _impl_.used_storage_mib_)}},
    // float available_storage_mib = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(Storage, _impl_.available_storage_mib_)}},
    // float total_storage_mib = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 63, 0, PROTOBUF_FIELD_OFFSET(Storage, _impl_.total_storage_mib_)}},
    // float recording_time_s = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 63, 0, PROTOBUF_FIELD_OFFSET(Storage, _impl_.recording_time_s_)}},
    // string media_folder_name = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(Storage, _impl_.media_folder_name_)}},
    // .mavsdk.rpc.camera.Storage.StorageStatus storage_status = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Storage, _impl_.storage_status_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(Storage, _impl_.storage_status_)}},
    // uint32 storage_id = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Storage, _impl_.storage_id_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(Storage, _impl_.storage_id_)}},
    // .mavsdk.rpc.camera.Storage.StorageType storage_type = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Storage, _impl_.storage_type_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(Storage, _impl_.storage_type_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(Storage, _impl_.component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool video_on = 2;
    {PROTOBUF_FIELD_OFFSET(Storage, _impl_.video_on_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool photo_interval_on = 3;
    {PROTOBUF_FIELD_OFFSET(Storage, _impl_.photo_interval_on_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // float used_storage_mib = 4;
    {PROTOBUF_FIELD_OFFSET(Storage, _impl_.used_storage_mib_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float available_storage_mib = 5;
    {PROTOBUF_FIELD_OFFSET(Storage, _impl_.available_storage_mib_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float total_storage_mib = 6;
    {PROTOBUF_FIELD_OFFSET(Storage, _impl_.total_storage_mib_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float recording_time_s = 7;
    {PROTOBUF_FIELD_OFFSET(Storage, _impl_.recording_time_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // string media_folder_name = 8;
    {PROTOBUF_FIELD_OFFSET(Storage, _impl_.media_folder_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .mavsdk.rpc.camera.Storage.StorageStatus storage_status = 9;
    {PROTOBUF_FIELD_OFFSET(Storage, _impl_.storage_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint32 storage_id = 10;
    {PROTOBUF_FIELD_OFFSET(Storage, _impl_.storage_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .mavsdk.rpc.camera.Storage.StorageType storage_type = 11;
    {PROTOBUF_FIELD_OFFSET(Storage, _impl_.storage_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\31\0\0\0\0\0\0\0\21\0\0\0\0\0\0\0"
    "mavsdk.rpc.camera.Storage"
    "media_folder_name"
  }},
};

::uint8_t* Storage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.Storage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  // bool video_on = 2;
  if (this->_internal_video_on() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_video_on(), target);
  }

  // bool photo_interval_on = 3;
  if (this->_internal_photo_interval_on() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_photo_interval_on(), target);
  }

  // float used_storage_mib = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_used_storage_mib = this->_internal_used_storage_mib();
  ::uint32_t raw_used_storage_mib;
  memcpy(&raw_used_storage_mib, &tmp_used_storage_mib, sizeof(tmp_used_storage_mib));
  if (raw_used_storage_mib != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_used_storage_mib(), target);
  }

  // float available_storage_mib = 5;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_available_storage_mib = this->_internal_available_storage_mib();
  ::uint32_t raw_available_storage_mib;
  memcpy(&raw_available_storage_mib, &tmp_available_storage_mib, sizeof(tmp_available_storage_mib));
  if (raw_available_storage_mib != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_available_storage_mib(), target);
  }

  // float total_storage_mib = 6;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_total_storage_mib = this->_internal_total_storage_mib();
  ::uint32_t raw_total_storage_mib;
  memcpy(&raw_total_storage_mib, &tmp_total_storage_mib, sizeof(tmp_total_storage_mib));
  if (raw_total_storage_mib != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        6, this->_internal_total_storage_mib(), target);
  }

  // float recording_time_s = 7;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_recording_time_s = this->_internal_recording_time_s();
  ::uint32_t raw_recording_time_s;
  memcpy(&raw_recording_time_s, &tmp_recording_time_s, sizeof(tmp_recording_time_s));
  if (raw_recording_time_s != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        7, this->_internal_recording_time_s(), target);
  }

  // string media_folder_name = 8;
  if (!this->_internal_media_folder_name().empty()) {
    const std::string& _s = this->_internal_media_folder_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.camera.Storage.media_folder_name");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // .mavsdk.rpc.camera.Storage.StorageStatus storage_status = 9;
  if (this->_internal_storage_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        9, this->_internal_storage_status(), target);
  }

  // uint32 storage_id = 10;
  if (this->_internal_storage_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        10, this->_internal_storage_id(), target);
  }

  // .mavsdk.rpc.camera.Storage.StorageType storage_type = 11;
  if (this->_internal_storage_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        11, this->_internal_storage_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.Storage)
  return target;
}

::size_t Storage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.Storage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string media_folder_name = 8;
  if (!this->_internal_media_folder_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_media_folder_name());
  }

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  // bool video_on = 2;
  if (this->_internal_video_on() != 0) {
    total_size += 2;
  }

  // bool photo_interval_on = 3;
  if (this->_internal_photo_interval_on() != 0) {
    total_size += 2;
  }

  // float used_storage_mib = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_used_storage_mib = this->_internal_used_storage_mib();
  ::uint32_t raw_used_storage_mib;
  memcpy(&raw_used_storage_mib, &tmp_used_storage_mib, sizeof(tmp_used_storage_mib));
  if (raw_used_storage_mib != 0) {
    total_size += 5;
  }

  // float available_storage_mib = 5;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_available_storage_mib = this->_internal_available_storage_mib();
  ::uint32_t raw_available_storage_mib;
  memcpy(&raw_available_storage_mib, &tmp_available_storage_mib, sizeof(tmp_available_storage_mib));
  if (raw_available_storage_mib != 0) {
    total_size += 5;
  }

  // float total_storage_mib = 6;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_total_storage_mib = this->_internal_total_storage_mib();
  ::uint32_t raw_total_storage_mib;
  memcpy(&raw_total_storage_mib, &tmp_total_storage_mib, sizeof(tmp_total_storage_mib));
  if (raw_total_storage_mib != 0) {
    total_size += 5;
  }

  // float recording_time_s = 7;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_recording_time_s = this->_internal_recording_time_s();
  ::uint32_t raw_recording_time_s;
  memcpy(&raw_recording_time_s, &tmp_recording_time_s, sizeof(tmp_recording_time_s));
  if (raw_recording_time_s != 0) {
    total_size += 5;
  }

  // .mavsdk.rpc.camera.Storage.StorageStatus storage_status = 9;
  if (this->_internal_storage_status() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_storage_status());
  }

  // uint32 storage_id = 10;
  if (this->_internal_storage_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_storage_id());
  }

  // .mavsdk.rpc.camera.Storage.StorageType storage_type = 11;
  if (this->_internal_storage_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_storage_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Storage::_class_data_ = {
    Storage::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Storage::GetClassData() const {
  return &_class_data_;
}

void Storage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Storage*>(&to_msg);
  auto& from = static_cast<const Storage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.Storage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_media_folder_name().empty()) {
    _this->_internal_set_media_folder_name(from._internal_media_folder_name());
  }
  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  if (from._internal_video_on() != 0) {
    _this->_internal_set_video_on(from._internal_video_on());
  }
  if (from._internal_photo_interval_on() != 0) {
    _this->_internal_set_photo_interval_on(from._internal_photo_interval_on());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_used_storage_mib = from._internal_used_storage_mib();
  ::uint32_t raw_used_storage_mib;
  memcpy(&raw_used_storage_mib, &tmp_used_storage_mib, sizeof(tmp_used_storage_mib));
  if (raw_used_storage_mib != 0) {
    _this->_internal_set_used_storage_mib(from._internal_used_storage_mib());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_available_storage_mib = from._internal_available_storage_mib();
  ::uint32_t raw_available_storage_mib;
  memcpy(&raw_available_storage_mib, &tmp_available_storage_mib, sizeof(tmp_available_storage_mib));
  if (raw_available_storage_mib != 0) {
    _this->_internal_set_available_storage_mib(from._internal_available_storage_mib());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_total_storage_mib = from._internal_total_storage_mib();
  ::uint32_t raw_total_storage_mib;
  memcpy(&raw_total_storage_mib, &tmp_total_storage_mib, sizeof(tmp_total_storage_mib));
  if (raw_total_storage_mib != 0) {
    _this->_internal_set_total_storage_mib(from._internal_total_storage_mib());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_recording_time_s = from._internal_recording_time_s();
  ::uint32_t raw_recording_time_s;
  memcpy(&raw_recording_time_s, &tmp_recording_time_s, sizeof(tmp_recording_time_s));
  if (raw_recording_time_s != 0) {
    _this->_internal_set_recording_time_s(from._internal_recording_time_s());
  }
  if (from._internal_storage_status() != 0) {
    _this->_internal_set_storage_status(from._internal_storage_status());
  }
  if (from._internal_storage_id() != 0) {
    _this->_internal_set_storage_id(from._internal_storage_id());
  }
  if (from._internal_storage_type() != 0) {
    _this->_internal_set_storage_type(from._internal_storage_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Storage::CopyFrom(const Storage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.Storage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Storage::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Storage::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Storage::InternalSwap(Storage* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.media_folder_name_, &other->_impl_.media_folder_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Storage, _impl_.storage_type_)
      + sizeof(Storage::_impl_.storage_type_)
      - PROTOBUF_FIELD_OFFSET(Storage, _impl_.component_id_)>(
          reinterpret_cast<char*>(&_impl_.component_id_),
          reinterpret_cast<char*>(&other->_impl_.component_id_));
}

::google::protobuf::Metadata Storage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[33]);
}
// ===================================================================

class StorageUpdate::_Internal {
 public:
  using HasBits = decltype(std::declval<StorageUpdate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(StorageUpdate, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::Storage& storage(const StorageUpdate* msg);
  static void set_has_storage(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::Storage& StorageUpdate::_Internal::storage(const StorageUpdate* msg) {
  return *msg->_impl_.storage_;
}
StorageUpdate::StorageUpdate(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.StorageUpdate)
}
inline PROTOBUF_NDEBUG_INLINE StorageUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

StorageUpdate::StorageUpdate(
    ::google::protobuf::Arena* arena,
    const StorageUpdate& from)
    : ::google::protobuf::Message(arena) {
  StorageUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.storage_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::Storage>(arena, *from._impl_.storage_)
                : nullptr;
  _impl_.component_id_ = from._impl_.component_id_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.StorageUpdate)
}
inline PROTOBUF_NDEBUG_INLINE StorageUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StorageUpdate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, storage_),
           0,
           offsetof(Impl_, component_id_) -
               offsetof(Impl_, storage_) +
               sizeof(Impl_::component_id_));
}
StorageUpdate::~StorageUpdate() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.StorageUpdate)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StorageUpdate::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.storage_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StorageUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.StorageUpdate)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.storage_ != nullptr);
    _impl_.storage_->Clear();
  }
  _impl_.component_id_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StorageUpdate::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> StorageUpdate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StorageUpdate, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StorageUpdate_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.Storage storage = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(StorageUpdate, _impl_.storage_)}},
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StorageUpdate, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StorageUpdate, _impl_.component_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(StorageUpdate, _impl_.component_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .mavsdk.rpc.camera.Storage storage = 2;
    {PROTOBUF_FIELD_OFFSET(StorageUpdate, _impl_.storage_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::Storage>()},
  }}, {{
  }},
};

::uint8_t* StorageUpdate::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.StorageUpdate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.Storage storage = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::storage(this),
        _Internal::storage(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.StorageUpdate)
  return target;
}

::size_t StorageUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.StorageUpdate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera.Storage storage = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.storage_);
  }

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StorageUpdate::_class_data_ = {
    StorageUpdate::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StorageUpdate::GetClassData() const {
  return &_class_data_;
}

void StorageUpdate::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StorageUpdate*>(&to_msg);
  auto& from = static_cast<const StorageUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.StorageUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_storage()->::mavsdk::rpc::camera::Storage::MergeFrom(
        from._internal_storage());
  }
  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StorageUpdate::CopyFrom(const StorageUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.StorageUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StorageUpdate::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StorageUpdate::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StorageUpdate::InternalSwap(StorageUpdate* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StorageUpdate, _impl_.component_id_)
      + sizeof(StorageUpdate::_impl_.component_id_)
      - PROTOBUF_FIELD_OFFSET(StorageUpdate, _impl_.storage_)>(
          reinterpret_cast<char*>(&_impl_.storage_),
          reinterpret_cast<char*>(&other->_impl_.storage_));
}

::google::protobuf::Metadata StorageUpdate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[34]);
}
// ===================================================================

class SubscribeStorageRequest::_Internal {
 public:
};

SubscribeStorageRequest::SubscribeStorageRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.SubscribeStorageRequest)
}
SubscribeStorageRequest::SubscribeStorageRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeStorageRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SubscribeStorageRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.SubscribeStorageRequest)
}









::google::protobuf::Metadata SubscribeStorageRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[35]);
}
// ===================================================================

class StorageResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<StorageResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(StorageResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::StorageUpdate& update(const StorageResponse* msg);
  static void set_has_update(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::StorageUpdate& StorageResponse::_Internal::update(const StorageResponse* msg) {
  return *msg->_impl_.update_;
}
StorageResponse::StorageResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.StorageResponse)
}
inline PROTOBUF_NDEBUG_INLINE StorageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

StorageResponse::StorageResponse(
    ::google::protobuf::Arena* arena,
    const StorageResponse& from)
    : ::google::protobuf::Message(arena) {
  StorageResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.update_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::StorageUpdate>(arena, *from._impl_.update_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.StorageResponse)
}
inline PROTOBUF_NDEBUG_INLINE StorageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StorageResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.update_ = {};
}
StorageResponse::~StorageResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.StorageResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StorageResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.update_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StorageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.StorageResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.update_ != nullptr);
    _impl_.update_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StorageResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> StorageResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StorageResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StorageResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.StorageUpdate update = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StorageResponse, _impl_.update_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.StorageUpdate update = 1;
    {PROTOBUF_FIELD_OFFSET(StorageResponse, _impl_.update_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::StorageUpdate>()},
  }}, {{
  }},
};

::uint8_t* StorageResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.StorageResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.StorageUpdate update = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::update(this),
        _Internal::update(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.StorageResponse)
  return target;
}

::size_t StorageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.StorageResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera.StorageUpdate update = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.update_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StorageResponse::_class_data_ = {
    StorageResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StorageResponse::GetClassData() const {
  return &_class_data_;
}

void StorageResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StorageResponse*>(&to_msg);
  auto& from = static_cast<const StorageResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.StorageResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_update()->::mavsdk::rpc::camera::StorageUpdate::MergeFrom(
        from._internal_update());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StorageResponse::CopyFrom(const StorageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.StorageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StorageResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StorageResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StorageResponse::InternalSwap(StorageResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.update_, other->_impl_.update_);
}

::google::protobuf::Metadata StorageResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[36]);
}
// ===================================================================

class CurrentSettingsUpdate::_Internal {
 public:
};

CurrentSettingsUpdate::CurrentSettingsUpdate(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.CurrentSettingsUpdate)
}
inline PROTOBUF_NDEBUG_INLINE CurrentSettingsUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : current_settings_{visibility, arena, from.current_settings_},
        _cached_size_{0} {}

CurrentSettingsUpdate::CurrentSettingsUpdate(
    ::google::protobuf::Arena* arena,
    const CurrentSettingsUpdate& from)
    : ::google::protobuf::Message(arena) {
  CurrentSettingsUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.component_id_ = from._impl_.component_id_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.CurrentSettingsUpdate)
}
inline PROTOBUF_NDEBUG_INLINE CurrentSettingsUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : current_settings_{visibility, arena},
        _cached_size_{0} {}

inline void CurrentSettingsUpdate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.component_id_ = {};
}
CurrentSettingsUpdate::~CurrentSettingsUpdate() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.CurrentSettingsUpdate)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CurrentSettingsUpdate::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CurrentSettingsUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.CurrentSettingsUpdate)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.current_settings_.Clear();
  _impl_.component_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CurrentSettingsUpdate::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> CurrentSettingsUpdate::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CurrentSettingsUpdate_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .mavsdk.rpc.camera.Setting current_settings = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CurrentSettingsUpdate, _impl_.current_settings_)}},
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CurrentSettingsUpdate, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CurrentSettingsUpdate, _impl_.component_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(CurrentSettingsUpdate, _impl_.component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated .mavsdk.rpc.camera.Setting current_settings = 2;
    {PROTOBUF_FIELD_OFFSET(CurrentSettingsUpdate, _impl_.current_settings_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::Setting>()},
  }}, {{
  }},
};

::uint8_t* CurrentSettingsUpdate::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.CurrentSettingsUpdate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  // repeated .mavsdk.rpc.camera.Setting current_settings = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_current_settings_size()); i < n; i++) {
    const auto& repfield = this->_internal_current_settings().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.CurrentSettingsUpdate)
  return target;
}

::size_t CurrentSettingsUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.CurrentSettingsUpdate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .mavsdk.rpc.camera.Setting current_settings = 2;
  total_size += 1UL * this->_internal_current_settings_size();
  for (const auto& msg : this->_internal_current_settings()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CurrentSettingsUpdate::_class_data_ = {
    CurrentSettingsUpdate::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CurrentSettingsUpdate::GetClassData() const {
  return &_class_data_;
}

void CurrentSettingsUpdate::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CurrentSettingsUpdate*>(&to_msg);
  auto& from = static_cast<const CurrentSettingsUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.CurrentSettingsUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_current_settings()->MergeFrom(
      from._internal_current_settings());
  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CurrentSettingsUpdate::CopyFrom(const CurrentSettingsUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.CurrentSettingsUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CurrentSettingsUpdate::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CurrentSettingsUpdate::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CurrentSettingsUpdate::InternalSwap(CurrentSettingsUpdate* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.current_settings_.InternalSwap(&other->_impl_.current_settings_);
        swap(_impl_.component_id_, other->_impl_.component_id_);
}

::google::protobuf::Metadata CurrentSettingsUpdate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[37]);
}
// ===================================================================

class SubscribeCurrentSettingsRequest::_Internal {
 public:
};

SubscribeCurrentSettingsRequest::SubscribeCurrentSettingsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.SubscribeCurrentSettingsRequest)
}
SubscribeCurrentSettingsRequest::SubscribeCurrentSettingsRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeCurrentSettingsRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SubscribeCurrentSettingsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.SubscribeCurrentSettingsRequest)
}









::google::protobuf::Metadata SubscribeCurrentSettingsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[38]);
}
// ===================================================================

class CurrentSettingsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CurrentSettingsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CurrentSettingsResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::CurrentSettingsUpdate& update(const CurrentSettingsResponse* msg);
  static void set_has_update(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::CurrentSettingsUpdate& CurrentSettingsResponse::_Internal::update(const CurrentSettingsResponse* msg) {
  return *msg->_impl_.update_;
}
CurrentSettingsResponse::CurrentSettingsResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.CurrentSettingsResponse)
}
inline PROTOBUF_NDEBUG_INLINE CurrentSettingsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CurrentSettingsResponse::CurrentSettingsResponse(
    ::google::protobuf::Arena* arena,
    const CurrentSettingsResponse& from)
    : ::google::protobuf::Message(arena) {
  CurrentSettingsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.update_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::CurrentSettingsUpdate>(arena, *from._impl_.update_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.CurrentSettingsResponse)
}
inline PROTOBUF_NDEBUG_INLINE CurrentSettingsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CurrentSettingsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.update_ = {};
}
CurrentSettingsResponse::~CurrentSettingsResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.CurrentSettingsResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CurrentSettingsResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.update_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CurrentSettingsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.CurrentSettingsResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.update_ != nullptr);
    _impl_.update_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CurrentSettingsResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CurrentSettingsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CurrentSettingsResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CurrentSettingsResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.CurrentSettingsUpdate update = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CurrentSettingsResponse, _impl_.update_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.CurrentSettingsUpdate update = 1;
    {PROTOBUF_FIELD_OFFSET(CurrentSettingsResponse, _impl_.update_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::CurrentSettingsUpdate>()},
  }}, {{
  }},
};

::uint8_t* CurrentSettingsResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.CurrentSettingsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.CurrentSettingsUpdate update = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::update(this),
        _Internal::update(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.CurrentSettingsResponse)
  return target;
}

::size_t CurrentSettingsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.CurrentSettingsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera.CurrentSettingsUpdate update = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.update_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CurrentSettingsResponse::_class_data_ = {
    CurrentSettingsResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CurrentSettingsResponse::GetClassData() const {
  return &_class_data_;
}

void CurrentSettingsResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CurrentSettingsResponse*>(&to_msg);
  auto& from = static_cast<const CurrentSettingsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.CurrentSettingsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_update()->::mavsdk::rpc::camera::CurrentSettingsUpdate::MergeFrom(
        from._internal_update());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CurrentSettingsResponse::CopyFrom(const CurrentSettingsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.CurrentSettingsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CurrentSettingsResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CurrentSettingsResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CurrentSettingsResponse::InternalSwap(CurrentSettingsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.update_, other->_impl_.update_);
}

::google::protobuf::Metadata CurrentSettingsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[39]);
}
// ===================================================================

class PossibleSettingOptionsUpdate::_Internal {
 public:
};

PossibleSettingOptionsUpdate::PossibleSettingOptionsUpdate(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.PossibleSettingOptionsUpdate)
}
inline PROTOBUF_NDEBUG_INLINE PossibleSettingOptionsUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : setting_options_{visibility, arena, from.setting_options_},
        _cached_size_{0} {}

PossibleSettingOptionsUpdate::PossibleSettingOptionsUpdate(
    ::google::protobuf::Arena* arena,
    const PossibleSettingOptionsUpdate& from)
    : ::google::protobuf::Message(arena) {
  PossibleSettingOptionsUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.component_id_ = from._impl_.component_id_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.PossibleSettingOptionsUpdate)
}
inline PROTOBUF_NDEBUG_INLINE PossibleSettingOptionsUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : setting_options_{visibility, arena},
        _cached_size_{0} {}

inline void PossibleSettingOptionsUpdate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.component_id_ = {};
}
PossibleSettingOptionsUpdate::~PossibleSettingOptionsUpdate() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.PossibleSettingOptionsUpdate)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PossibleSettingOptionsUpdate::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PossibleSettingOptionsUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.PossibleSettingOptionsUpdate)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.setting_options_.Clear();
  _impl_.component_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PossibleSettingOptionsUpdate::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> PossibleSettingOptionsUpdate::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PossibleSettingOptionsUpdate_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .mavsdk.rpc.camera.SettingOptions setting_options = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PossibleSettingOptionsUpdate, _impl_.setting_options_)}},
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PossibleSettingOptionsUpdate, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PossibleSettingOptionsUpdate, _impl_.component_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(PossibleSettingOptionsUpdate, _impl_.component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated .mavsdk.rpc.camera.SettingOptions setting_options = 2;
    {PROTOBUF_FIELD_OFFSET(PossibleSettingOptionsUpdate, _impl_.setting_options_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::SettingOptions>()},
  }}, {{
  }},
};

::uint8_t* PossibleSettingOptionsUpdate::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.PossibleSettingOptionsUpdate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  // repeated .mavsdk.rpc.camera.SettingOptions setting_options = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_setting_options_size()); i < n; i++) {
    const auto& repfield = this->_internal_setting_options().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.PossibleSettingOptionsUpdate)
  return target;
}

::size_t PossibleSettingOptionsUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.PossibleSettingOptionsUpdate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .mavsdk.rpc.camera.SettingOptions setting_options = 2;
  total_size += 1UL * this->_internal_setting_options_size();
  for (const auto& msg : this->_internal_setting_options()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PossibleSettingOptionsUpdate::_class_data_ = {
    PossibleSettingOptionsUpdate::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PossibleSettingOptionsUpdate::GetClassData() const {
  return &_class_data_;
}

void PossibleSettingOptionsUpdate::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PossibleSettingOptionsUpdate*>(&to_msg);
  auto& from = static_cast<const PossibleSettingOptionsUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.PossibleSettingOptionsUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_setting_options()->MergeFrom(
      from._internal_setting_options());
  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PossibleSettingOptionsUpdate::CopyFrom(const PossibleSettingOptionsUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.PossibleSettingOptionsUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PossibleSettingOptionsUpdate::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PossibleSettingOptionsUpdate::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PossibleSettingOptionsUpdate::InternalSwap(PossibleSettingOptionsUpdate* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.setting_options_.InternalSwap(&other->_impl_.setting_options_);
        swap(_impl_.component_id_, other->_impl_.component_id_);
}

::google::protobuf::Metadata PossibleSettingOptionsUpdate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[40]);
}
// ===================================================================

class SubscribePossibleSettingOptionsRequest::_Internal {
 public:
};

SubscribePossibleSettingOptionsRequest::SubscribePossibleSettingOptionsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.SubscribePossibleSettingOptionsRequest)
}
SubscribePossibleSettingOptionsRequest::SubscribePossibleSettingOptionsRequest(
    ::google::protobuf::Arena* arena,
    const SubscribePossibleSettingOptionsRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SubscribePossibleSettingOptionsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.SubscribePossibleSettingOptionsRequest)
}









::google::protobuf::Metadata SubscribePossibleSettingOptionsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[41]);
}
// ===================================================================

class PossibleSettingOptionsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<PossibleSettingOptionsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PossibleSettingOptionsResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::PossibleSettingOptionsUpdate& update(const PossibleSettingOptionsResponse* msg);
  static void set_has_update(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::PossibleSettingOptionsUpdate& PossibleSettingOptionsResponse::_Internal::update(const PossibleSettingOptionsResponse* msg) {
  return *msg->_impl_.update_;
}
PossibleSettingOptionsResponse::PossibleSettingOptionsResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.PossibleSettingOptionsResponse)
}
inline PROTOBUF_NDEBUG_INLINE PossibleSettingOptionsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PossibleSettingOptionsResponse::PossibleSettingOptionsResponse(
    ::google::protobuf::Arena* arena,
    const PossibleSettingOptionsResponse& from)
    : ::google::protobuf::Message(arena) {
  PossibleSettingOptionsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.update_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::PossibleSettingOptionsUpdate>(arena, *from._impl_.update_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.PossibleSettingOptionsResponse)
}
inline PROTOBUF_NDEBUG_INLINE PossibleSettingOptionsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PossibleSettingOptionsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.update_ = {};
}
PossibleSettingOptionsResponse::~PossibleSettingOptionsResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.PossibleSettingOptionsResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PossibleSettingOptionsResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.update_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PossibleSettingOptionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.PossibleSettingOptionsResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.update_ != nullptr);
    _impl_.update_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PossibleSettingOptionsResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> PossibleSettingOptionsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PossibleSettingOptionsResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PossibleSettingOptionsResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.PossibleSettingOptionsUpdate update = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PossibleSettingOptionsResponse, _impl_.update_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.PossibleSettingOptionsUpdate update = 1;
    {PROTOBUF_FIELD_OFFSET(PossibleSettingOptionsResponse, _impl_.update_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::PossibleSettingOptionsUpdate>()},
  }}, {{
  }},
};

::uint8_t* PossibleSettingOptionsResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.PossibleSettingOptionsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.PossibleSettingOptionsUpdate update = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::update(this),
        _Internal::update(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.PossibleSettingOptionsResponse)
  return target;
}

::size_t PossibleSettingOptionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.PossibleSettingOptionsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera.PossibleSettingOptionsUpdate update = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.update_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PossibleSettingOptionsResponse::_class_data_ = {
    PossibleSettingOptionsResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PossibleSettingOptionsResponse::GetClassData() const {
  return &_class_data_;
}

void PossibleSettingOptionsResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PossibleSettingOptionsResponse*>(&to_msg);
  auto& from = static_cast<const PossibleSettingOptionsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.PossibleSettingOptionsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_update()->::mavsdk::rpc::camera::PossibleSettingOptionsUpdate::MergeFrom(
        from._internal_update());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PossibleSettingOptionsResponse::CopyFrom(const PossibleSettingOptionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.PossibleSettingOptionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PossibleSettingOptionsResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PossibleSettingOptionsResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PossibleSettingOptionsResponse::InternalSwap(PossibleSettingOptionsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.update_, other->_impl_.update_);
}

::google::protobuf::Metadata PossibleSettingOptionsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[42]);
}
// ===================================================================

class SetSettingRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SetSettingRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetSettingRequest, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::Setting& setting(const SetSettingRequest* msg);
  static void set_has_setting(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::Setting& SetSettingRequest::_Internal::setting(const SetSettingRequest* msg) {
  return *msg->_impl_.setting_;
}
SetSettingRequest::SetSettingRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.SetSettingRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetSettingRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetSettingRequest::SetSettingRequest(
    ::google::protobuf::Arena* arena,
    const SetSettingRequest& from)
    : ::google::protobuf::Message(arena) {
  SetSettingRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.setting_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::Setting>(arena, *from._impl_.setting_)
                : nullptr;
  _impl_.component_id_ = from._impl_.component_id_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.SetSettingRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetSettingRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetSettingRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, setting_),
           0,
           offsetof(Impl_, component_id_) -
               offsetof(Impl_, setting_) +
               sizeof(Impl_::component_id_));
}
SetSettingRequest::~SetSettingRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.SetSettingRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetSettingRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.setting_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetSettingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.SetSettingRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.setting_ != nullptr);
    _impl_.setting_->Clear();
  }
  _impl_.component_id_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetSettingRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> SetSettingRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetSettingRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetSettingRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.Setting setting = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(SetSettingRequest, _impl_.setting_)}},
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetSettingRequest, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SetSettingRequest, _impl_.component_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(SetSettingRequest, _impl_.component_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .mavsdk.rpc.camera.Setting setting = 2;
    {PROTOBUF_FIELD_OFFSET(SetSettingRequest, _impl_.setting_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::Setting>()},
  }}, {{
  }},
};

::uint8_t* SetSettingRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.SetSettingRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.Setting setting = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::setting(this),
        _Internal::setting(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.SetSettingRequest)
  return target;
}

::size_t SetSettingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.SetSettingRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera.Setting setting = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.setting_);
  }

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetSettingRequest::_class_data_ = {
    SetSettingRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetSettingRequest::GetClassData() const {
  return &_class_data_;
}

void SetSettingRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetSettingRequest*>(&to_msg);
  auto& from = static_cast<const SetSettingRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.SetSettingRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_setting()->::mavsdk::rpc::camera::Setting::MergeFrom(
        from._internal_setting());
  }
  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetSettingRequest::CopyFrom(const SetSettingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.SetSettingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetSettingRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetSettingRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetSettingRequest::InternalSwap(SetSettingRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetSettingRequest, _impl_.component_id_)
      + sizeof(SetSettingRequest::_impl_.component_id_)
      - PROTOBUF_FIELD_OFFSET(SetSettingRequest, _impl_.setting_)>(
          reinterpret_cast<char*>(&_impl_.setting_),
          reinterpret_cast<char*>(&other->_impl_.setting_));
}

::google::protobuf::Metadata SetSettingRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[43]);
}
// ===================================================================

class SetSettingResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SetSettingResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetSettingResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::CameraResult& camera_result(const SetSettingResponse* msg);
  static void set_has_camera_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::CameraResult& SetSettingResponse::_Internal::camera_result(const SetSettingResponse* msg) {
  return *msg->_impl_.camera_result_;
}
SetSettingResponse::SetSettingResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.SetSettingResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetSettingResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetSettingResponse::SetSettingResponse(
    ::google::protobuf::Arena* arena,
    const SetSettingResponse& from)
    : ::google::protobuf::Message(arena) {
  SetSettingResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::CameraResult>(arena, *from._impl_.camera_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.SetSettingResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetSettingResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetSettingResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_result_ = {};
}
SetSettingResponse::~SetSettingResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.SetSettingResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetSettingResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetSettingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.SetSettingResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_result_ != nullptr);
    _impl_.camera_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetSettingResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetSettingResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetSettingResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetSettingResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetSettingResponse, _impl_.camera_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetSettingResponse, _impl_.camera_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::CameraResult>()},
  }}, {{
  }},
};

::uint8_t* SetSettingResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.SetSettingResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_result(this),
        _Internal::camera_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.SetSettingResponse)
  return target;
}

::size_t SetSettingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.SetSettingResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetSettingResponse::_class_data_ = {
    SetSettingResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetSettingResponse::GetClassData() const {
  return &_class_data_;
}

void SetSettingResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetSettingResponse*>(&to_msg);
  auto& from = static_cast<const SetSettingResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.SetSettingResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_result()->::mavsdk::rpc::camera::CameraResult::MergeFrom(
        from._internal_camera_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetSettingResponse::CopyFrom(const SetSettingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.SetSettingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetSettingResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetSettingResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetSettingResponse::InternalSwap(SetSettingResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_result_, other->_impl_.camera_result_);
}

::google::protobuf::Metadata SetSettingResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[44]);
}
// ===================================================================

class GetModeRequest::_Internal {
 public:
};

GetModeRequest::GetModeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.GetModeRequest)
}
GetModeRequest::GetModeRequest(
    ::google::protobuf::Arena* arena, const GetModeRequest& from)
    : GetModeRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE GetModeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetModeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.component_id_ = {};
}
GetModeRequest::~GetModeRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.GetModeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetModeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetModeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.GetModeRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.component_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetModeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> GetModeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetModeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetModeRequest, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GetModeRequest, _impl_.component_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetModeRequest, _impl_.component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* GetModeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.GetModeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.GetModeRequest)
  return target;
}

::size_t GetModeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.GetModeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetModeRequest::_class_data_ = {
    GetModeRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetModeRequest::GetClassData() const {
  return &_class_data_;
}

void GetModeRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetModeRequest*>(&to_msg);
  auto& from = static_cast<const GetModeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.GetModeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetModeRequest::CopyFrom(const GetModeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.GetModeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetModeRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetModeRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetModeRequest::InternalSwap(GetModeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.component_id_, other->_impl_.component_id_);
}

::google::protobuf::Metadata GetModeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[45]);
}
// ===================================================================

class GetModeResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetModeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetModeResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::CameraResult& camera_result(const GetModeResponse* msg);
  static void set_has_camera_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::CameraResult& GetModeResponse::_Internal::camera_result(const GetModeResponse* msg) {
  return *msg->_impl_.camera_result_;
}
GetModeResponse::GetModeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.GetModeResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetModeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetModeResponse::GetModeResponse(
    ::google::protobuf::Arena* arena,
    const GetModeResponse& from)
    : ::google::protobuf::Message(arena) {
  GetModeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::CameraResult>(arena, *from._impl_.camera_result_)
                : nullptr;
  _impl_.mode_ = from._impl_.mode_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.GetModeResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetModeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetModeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, camera_result_),
           0,
           offsetof(Impl_, mode_) -
               offsetof(Impl_, camera_result_) +
               sizeof(Impl_::mode_));
}
GetModeResponse::~GetModeResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.GetModeResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetModeResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetModeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.GetModeResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_result_ != nullptr);
    _impl_.camera_result_->Clear();
  }
  _impl_.mode_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetModeResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> GetModeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetModeResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetModeResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.Mode mode = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetModeResponse, _impl_.mode_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GetModeResponse, _impl_.mode_)}},
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetModeResponse, _impl_.camera_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {PROTOBUF_FIELD_OFFSET(GetModeResponse, _impl_.camera_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mavsdk.rpc.camera.Mode mode = 2;
    {PROTOBUF_FIELD_OFFSET(GetModeResponse, _impl_.mode_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::CameraResult>()},
  }}, {{
  }},
};

::uint8_t* GetModeResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.GetModeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_result(this),
        _Internal::camera_result(this).GetCachedSize(), target, stream);
  }

  // .mavsdk.rpc.camera.Mode mode = 2;
  if (this->_internal_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.GetModeResponse)
  return target;
}

::size_t GetModeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.GetModeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_result_);
  }

  // .mavsdk.rpc.camera.Mode mode = 2;
  if (this->_internal_mode() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetModeResponse::_class_data_ = {
    GetModeResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetModeResponse::GetClassData() const {
  return &_class_data_;
}

void GetModeResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetModeResponse*>(&to_msg);
  auto& from = static_cast<const GetModeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.GetModeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_result()->::mavsdk::rpc::camera::CameraResult::MergeFrom(
        from._internal_camera_result());
  }
  if (from._internal_mode() != 0) {
    _this->_internal_set_mode(from._internal_mode());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetModeResponse::CopyFrom(const GetModeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.GetModeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetModeResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetModeResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetModeResponse::InternalSwap(GetModeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetModeResponse, _impl_.mode_)
      + sizeof(GetModeResponse::_impl_.mode_)
      - PROTOBUF_FIELD_OFFSET(GetModeResponse, _impl_.camera_result_)>(
          reinterpret_cast<char*>(&_impl_.camera_result_),
          reinterpret_cast<char*>(&other->_impl_.camera_result_));
}

::google::protobuf::Metadata GetModeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[46]);
}
// ===================================================================

class GetVideoStreamInfoRequest::_Internal {
 public:
};

GetVideoStreamInfoRequest::GetVideoStreamInfoRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.GetVideoStreamInfoRequest)
}
GetVideoStreamInfoRequest::GetVideoStreamInfoRequest(
    ::google::protobuf::Arena* arena, const GetVideoStreamInfoRequest& from)
    : GetVideoStreamInfoRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE GetVideoStreamInfoRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetVideoStreamInfoRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.component_id_ = {};
}
GetVideoStreamInfoRequest::~GetVideoStreamInfoRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.GetVideoStreamInfoRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetVideoStreamInfoRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetVideoStreamInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.GetVideoStreamInfoRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.component_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetVideoStreamInfoRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> GetVideoStreamInfoRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetVideoStreamInfoRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetVideoStreamInfoRequest, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GetVideoStreamInfoRequest, _impl_.component_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetVideoStreamInfoRequest, _impl_.component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* GetVideoStreamInfoRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.GetVideoStreamInfoRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.GetVideoStreamInfoRequest)
  return target;
}

::size_t GetVideoStreamInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.GetVideoStreamInfoRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetVideoStreamInfoRequest::_class_data_ = {
    GetVideoStreamInfoRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetVideoStreamInfoRequest::GetClassData() const {
  return &_class_data_;
}

void GetVideoStreamInfoRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetVideoStreamInfoRequest*>(&to_msg);
  auto& from = static_cast<const GetVideoStreamInfoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.GetVideoStreamInfoRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetVideoStreamInfoRequest::CopyFrom(const GetVideoStreamInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.GetVideoStreamInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetVideoStreamInfoRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetVideoStreamInfoRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetVideoStreamInfoRequest::InternalSwap(GetVideoStreamInfoRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.component_id_, other->_impl_.component_id_);
}

::google::protobuf::Metadata GetVideoStreamInfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[47]);
}
// ===================================================================

class GetVideoStreamInfoResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetVideoStreamInfoResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetVideoStreamInfoResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::CameraResult& camera_result(const GetVideoStreamInfoResponse* msg);
  static void set_has_camera_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::mavsdk::rpc::camera::VideoStreamInfo& video_stream_info(const GetVideoStreamInfoResponse* msg);
  static void set_has_video_stream_info(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::mavsdk::rpc::camera::CameraResult& GetVideoStreamInfoResponse::_Internal::camera_result(const GetVideoStreamInfoResponse* msg) {
  return *msg->_impl_.camera_result_;
}
const ::mavsdk::rpc::camera::VideoStreamInfo& GetVideoStreamInfoResponse::_Internal::video_stream_info(const GetVideoStreamInfoResponse* msg) {
  return *msg->_impl_.video_stream_info_;
}
GetVideoStreamInfoResponse::GetVideoStreamInfoResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.GetVideoStreamInfoResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetVideoStreamInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetVideoStreamInfoResponse::GetVideoStreamInfoResponse(
    ::google::protobuf::Arena* arena,
    const GetVideoStreamInfoResponse& from)
    : ::google::protobuf::Message(arena) {
  GetVideoStreamInfoResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::CameraResult>(arena, *from._impl_.camera_result_)
                : nullptr;
  _impl_.video_stream_info_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::VideoStreamInfo>(arena, *from._impl_.video_stream_info_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.GetVideoStreamInfoResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetVideoStreamInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetVideoStreamInfoResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, camera_result_),
           0,
           offsetof(Impl_, video_stream_info_) -
               offsetof(Impl_, camera_result_) +
               sizeof(Impl_::video_stream_info_));
}
GetVideoStreamInfoResponse::~GetVideoStreamInfoResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.GetVideoStreamInfoResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetVideoStreamInfoResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_result_;
  delete _impl_.video_stream_info_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetVideoStreamInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.GetVideoStreamInfoResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.camera_result_ != nullptr);
      _impl_.camera_result_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.video_stream_info_ != nullptr);
      _impl_.video_stream_info_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetVideoStreamInfoResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> GetVideoStreamInfoResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetVideoStreamInfoResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetVideoStreamInfoResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.VideoStreamInfo video_stream_info = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(GetVideoStreamInfoResponse, _impl_.video_stream_info_)}},
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetVideoStreamInfoResponse, _impl_.camera_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {PROTOBUF_FIELD_OFFSET(GetVideoStreamInfoResponse, _impl_.camera_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mavsdk.rpc.camera.VideoStreamInfo video_stream_info = 2;
    {PROTOBUF_FIELD_OFFSET(GetVideoStreamInfoResponse, _impl_.video_stream_info_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::CameraResult>()},
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::VideoStreamInfo>()},
  }}, {{
  }},
};

::uint8_t* GetVideoStreamInfoResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.GetVideoStreamInfoResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_result(this),
        _Internal::camera_result(this).GetCachedSize(), target, stream);
  }

  // .mavsdk.rpc.camera.VideoStreamInfo video_stream_info = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::video_stream_info(this),
        _Internal::video_stream_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.GetVideoStreamInfoResponse)
  return target;
}

::size_t GetVideoStreamInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.GetVideoStreamInfoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_result_);
    }

    // .mavsdk.rpc.camera.VideoStreamInfo video_stream_info = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.video_stream_info_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetVideoStreamInfoResponse::_class_data_ = {
    GetVideoStreamInfoResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetVideoStreamInfoResponse::GetClassData() const {
  return &_class_data_;
}

void GetVideoStreamInfoResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetVideoStreamInfoResponse*>(&to_msg);
  auto& from = static_cast<const GetVideoStreamInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.GetVideoStreamInfoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_camera_result()->::mavsdk::rpc::camera::CameraResult::MergeFrom(
          from._internal_camera_result());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_video_stream_info()->::mavsdk::rpc::camera::VideoStreamInfo::MergeFrom(
          from._internal_video_stream_info());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetVideoStreamInfoResponse::CopyFrom(const GetVideoStreamInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.GetVideoStreamInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetVideoStreamInfoResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetVideoStreamInfoResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetVideoStreamInfoResponse::InternalSwap(GetVideoStreamInfoResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetVideoStreamInfoResponse, _impl_.video_stream_info_)
      + sizeof(GetVideoStreamInfoResponse::_impl_.video_stream_info_)
      - PROTOBUF_FIELD_OFFSET(GetVideoStreamInfoResponse, _impl_.camera_result_)>(
          reinterpret_cast<char*>(&_impl_.camera_result_),
          reinterpret_cast<char*>(&other->_impl_.camera_result_));
}

::google::protobuf::Metadata GetVideoStreamInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[48]);
}
// ===================================================================

class GetStorageRequest::_Internal {
 public:
};

GetStorageRequest::GetStorageRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.GetStorageRequest)
}
GetStorageRequest::GetStorageRequest(
    ::google::protobuf::Arena* arena, const GetStorageRequest& from)
    : GetStorageRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE GetStorageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetStorageRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.component_id_ = {};
}
GetStorageRequest::~GetStorageRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.GetStorageRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetStorageRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetStorageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.GetStorageRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.component_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetStorageRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> GetStorageRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetStorageRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetStorageRequest, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GetStorageRequest, _impl_.component_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetStorageRequest, _impl_.component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* GetStorageRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.GetStorageRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.GetStorageRequest)
  return target;
}

::size_t GetStorageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.GetStorageRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetStorageRequest::_class_data_ = {
    GetStorageRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetStorageRequest::GetClassData() const {
  return &_class_data_;
}

void GetStorageRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetStorageRequest*>(&to_msg);
  auto& from = static_cast<const GetStorageRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.GetStorageRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetStorageRequest::CopyFrom(const GetStorageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.GetStorageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetStorageRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetStorageRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetStorageRequest::InternalSwap(GetStorageRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.component_id_, other->_impl_.component_id_);
}

::google::protobuf::Metadata GetStorageRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[49]);
}
// ===================================================================

class GetStorageResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetStorageResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetStorageResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::CameraResult& camera_result(const GetStorageResponse* msg);
  static void set_has_camera_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::mavsdk::rpc::camera::Storage& storage(const GetStorageResponse* msg);
  static void set_has_storage(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::mavsdk::rpc::camera::CameraResult& GetStorageResponse::_Internal::camera_result(const GetStorageResponse* msg) {
  return *msg->_impl_.camera_result_;
}
const ::mavsdk::rpc::camera::Storage& GetStorageResponse::_Internal::storage(const GetStorageResponse* msg) {
  return *msg->_impl_.storage_;
}
GetStorageResponse::GetStorageResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.GetStorageResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetStorageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetStorageResponse::GetStorageResponse(
    ::google::protobuf::Arena* arena,
    const GetStorageResponse& from)
    : ::google::protobuf::Message(arena) {
  GetStorageResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::CameraResult>(arena, *from._impl_.camera_result_)
                : nullptr;
  _impl_.storage_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::Storage>(arena, *from._impl_.storage_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.GetStorageResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetStorageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetStorageResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, camera_result_),
           0,
           offsetof(Impl_, storage_) -
               offsetof(Impl_, camera_result_) +
               sizeof(Impl_::storage_));
}
GetStorageResponse::~GetStorageResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.GetStorageResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetStorageResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_result_;
  delete _impl_.storage_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetStorageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.GetStorageResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.camera_result_ != nullptr);
      _impl_.camera_result_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.storage_ != nullptr);
      _impl_.storage_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetStorageResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> GetStorageResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetStorageResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetStorageResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.Storage storage = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(GetStorageResponse, _impl_.storage_)}},
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetStorageResponse, _impl_.camera_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {PROTOBUF_FIELD_OFFSET(GetStorageResponse, _impl_.camera_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mavsdk.rpc.camera.Storage storage = 2;
    {PROTOBUF_FIELD_OFFSET(GetStorageResponse, _impl_.storage_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::CameraResult>()},
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::Storage>()},
  }}, {{
  }},
};

::uint8_t* GetStorageResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.GetStorageResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_result(this),
        _Internal::camera_result(this).GetCachedSize(), target, stream);
  }

  // .mavsdk.rpc.camera.Storage storage = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::storage(this),
        _Internal::storage(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.GetStorageResponse)
  return target;
}

::size_t GetStorageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.GetStorageResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_result_);
    }

    // .mavsdk.rpc.camera.Storage storage = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.storage_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetStorageResponse::_class_data_ = {
    GetStorageResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetStorageResponse::GetClassData() const {
  return &_class_data_;
}

void GetStorageResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetStorageResponse*>(&to_msg);
  auto& from = static_cast<const GetStorageResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.GetStorageResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_camera_result()->::mavsdk::rpc::camera::CameraResult::MergeFrom(
          from._internal_camera_result());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_storage()->::mavsdk::rpc::camera::Storage::MergeFrom(
          from._internal_storage());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetStorageResponse::CopyFrom(const GetStorageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.GetStorageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetStorageResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetStorageResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetStorageResponse::InternalSwap(GetStorageResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetStorageResponse, _impl_.storage_)
      + sizeof(GetStorageResponse::_impl_.storage_)
      - PROTOBUF_FIELD_OFFSET(GetStorageResponse, _impl_.camera_result_)>(
          reinterpret_cast<char*>(&_impl_.camera_result_),
          reinterpret_cast<char*>(&other->_impl_.camera_result_));
}

::google::protobuf::Metadata GetStorageResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[50]);
}
// ===================================================================

class GetCurrentSettingsRequest::_Internal {
 public:
};

GetCurrentSettingsRequest::GetCurrentSettingsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.GetCurrentSettingsRequest)
}
GetCurrentSettingsRequest::GetCurrentSettingsRequest(
    ::google::protobuf::Arena* arena, const GetCurrentSettingsRequest& from)
    : GetCurrentSettingsRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE GetCurrentSettingsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetCurrentSettingsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.component_id_ = {};
}
GetCurrentSettingsRequest::~GetCurrentSettingsRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.GetCurrentSettingsRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetCurrentSettingsRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetCurrentSettingsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.GetCurrentSettingsRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.component_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetCurrentSettingsRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> GetCurrentSettingsRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetCurrentSettingsRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetCurrentSettingsRequest, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GetCurrentSettingsRequest, _impl_.component_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetCurrentSettingsRequest, _impl_.component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* GetCurrentSettingsRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.GetCurrentSettingsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.GetCurrentSettingsRequest)
  return target;
}

::size_t GetCurrentSettingsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.GetCurrentSettingsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetCurrentSettingsRequest::_class_data_ = {
    GetCurrentSettingsRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetCurrentSettingsRequest::GetClassData() const {
  return &_class_data_;
}

void GetCurrentSettingsRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetCurrentSettingsRequest*>(&to_msg);
  auto& from = static_cast<const GetCurrentSettingsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.GetCurrentSettingsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetCurrentSettingsRequest::CopyFrom(const GetCurrentSettingsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.GetCurrentSettingsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetCurrentSettingsRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetCurrentSettingsRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetCurrentSettingsRequest::InternalSwap(GetCurrentSettingsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.component_id_, other->_impl_.component_id_);
}

::google::protobuf::Metadata GetCurrentSettingsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[51]);
}
// ===================================================================

class GetCurrentSettingsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetCurrentSettingsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetCurrentSettingsResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::CameraResult& camera_result(const GetCurrentSettingsResponse* msg);
  static void set_has_camera_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::CameraResult& GetCurrentSettingsResponse::_Internal::camera_result(const GetCurrentSettingsResponse* msg) {
  return *msg->_impl_.camera_result_;
}
GetCurrentSettingsResponse::GetCurrentSettingsResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.GetCurrentSettingsResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetCurrentSettingsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        current_settings_{visibility, arena, from.current_settings_} {}

GetCurrentSettingsResponse::GetCurrentSettingsResponse(
    ::google::protobuf::Arena* arena,
    const GetCurrentSettingsResponse& from)
    : ::google::protobuf::Message(arena) {
  GetCurrentSettingsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::CameraResult>(arena, *from._impl_.camera_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.GetCurrentSettingsResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetCurrentSettingsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        current_settings_{visibility, arena} {}

inline void GetCurrentSettingsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_result_ = {};
}
GetCurrentSettingsResponse::~GetCurrentSettingsResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.GetCurrentSettingsResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetCurrentSettingsResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetCurrentSettingsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.GetCurrentSettingsResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.current_settings_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_result_ != nullptr);
    _impl_.camera_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetCurrentSettingsResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> GetCurrentSettingsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetCurrentSettingsResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetCurrentSettingsResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .mavsdk.rpc.camera.Setting current_settings = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(GetCurrentSettingsResponse, _impl_.current_settings_)}},
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetCurrentSettingsResponse, _impl_.camera_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {PROTOBUF_FIELD_OFFSET(GetCurrentSettingsResponse, _impl_.camera_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .mavsdk.rpc.camera.Setting current_settings = 2;
    {PROTOBUF_FIELD_OFFSET(GetCurrentSettingsResponse, _impl_.current_settings_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::CameraResult>()},
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::Setting>()},
  }}, {{
  }},
};

::uint8_t* GetCurrentSettingsResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.GetCurrentSettingsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_result(this),
        _Internal::camera_result(this).GetCachedSize(), target, stream);
  }

  // repeated .mavsdk.rpc.camera.Setting current_settings = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_current_settings_size()); i < n; i++) {
    const auto& repfield = this->_internal_current_settings().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.GetCurrentSettingsResponse)
  return target;
}

::size_t GetCurrentSettingsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.GetCurrentSettingsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .mavsdk.rpc.camera.Setting current_settings = 2;
  total_size += 1UL * this->_internal_current_settings_size();
  for (const auto& msg : this->_internal_current_settings()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetCurrentSettingsResponse::_class_data_ = {
    GetCurrentSettingsResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetCurrentSettingsResponse::GetClassData() const {
  return &_class_data_;
}

void GetCurrentSettingsResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetCurrentSettingsResponse*>(&to_msg);
  auto& from = static_cast<const GetCurrentSettingsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.GetCurrentSettingsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_current_settings()->MergeFrom(
      from._internal_current_settings());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_result()->::mavsdk::rpc::camera::CameraResult::MergeFrom(
        from._internal_camera_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetCurrentSettingsResponse::CopyFrom(const GetCurrentSettingsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.GetCurrentSettingsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetCurrentSettingsResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetCurrentSettingsResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetCurrentSettingsResponse::InternalSwap(GetCurrentSettingsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.current_settings_.InternalSwap(&other->_impl_.current_settings_);
  swap(_impl_.camera_result_, other->_impl_.camera_result_);
}

::google::protobuf::Metadata GetCurrentSettingsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[52]);
}
// ===================================================================

class GetPossibleSettingOptionsRequest::_Internal {
 public:
};

GetPossibleSettingOptionsRequest::GetPossibleSettingOptionsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.GetPossibleSettingOptionsRequest)
}
GetPossibleSettingOptionsRequest::GetPossibleSettingOptionsRequest(
    ::google::protobuf::Arena* arena, const GetPossibleSettingOptionsRequest& from)
    : GetPossibleSettingOptionsRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE GetPossibleSettingOptionsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetPossibleSettingOptionsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.component_id_ = {};
}
GetPossibleSettingOptionsRequest::~GetPossibleSettingOptionsRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.GetPossibleSettingOptionsRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetPossibleSettingOptionsRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetPossibleSettingOptionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.GetPossibleSettingOptionsRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.component_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetPossibleSettingOptionsRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> GetPossibleSettingOptionsRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetPossibleSettingOptionsRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetPossibleSettingOptionsRequest, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GetPossibleSettingOptionsRequest, _impl_.component_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetPossibleSettingOptionsRequest, _impl_.component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* GetPossibleSettingOptionsRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.GetPossibleSettingOptionsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.GetPossibleSettingOptionsRequest)
  return target;
}

::size_t GetPossibleSettingOptionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.GetPossibleSettingOptionsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetPossibleSettingOptionsRequest::_class_data_ = {
    GetPossibleSettingOptionsRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetPossibleSettingOptionsRequest::GetClassData() const {
  return &_class_data_;
}

void GetPossibleSettingOptionsRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetPossibleSettingOptionsRequest*>(&to_msg);
  auto& from = static_cast<const GetPossibleSettingOptionsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.GetPossibleSettingOptionsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetPossibleSettingOptionsRequest::CopyFrom(const GetPossibleSettingOptionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.GetPossibleSettingOptionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetPossibleSettingOptionsRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetPossibleSettingOptionsRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetPossibleSettingOptionsRequest::InternalSwap(GetPossibleSettingOptionsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.component_id_, other->_impl_.component_id_);
}

::google::protobuf::Metadata GetPossibleSettingOptionsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[53]);
}
// ===================================================================

class GetPossibleSettingOptionsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetPossibleSettingOptionsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetPossibleSettingOptionsResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::CameraResult& camera_result(const GetPossibleSettingOptionsResponse* msg);
  static void set_has_camera_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::CameraResult& GetPossibleSettingOptionsResponse::_Internal::camera_result(const GetPossibleSettingOptionsResponse* msg) {
  return *msg->_impl_.camera_result_;
}
GetPossibleSettingOptionsResponse::GetPossibleSettingOptionsResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.GetPossibleSettingOptionsResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetPossibleSettingOptionsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        setting_options_{visibility, arena, from.setting_options_} {}

GetPossibleSettingOptionsResponse::GetPossibleSettingOptionsResponse(
    ::google::protobuf::Arena* arena,
    const GetPossibleSettingOptionsResponse& from)
    : ::google::protobuf::Message(arena) {
  GetPossibleSettingOptionsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::CameraResult>(arena, *from._impl_.camera_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.GetPossibleSettingOptionsResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetPossibleSettingOptionsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        setting_options_{visibility, arena} {}

inline void GetPossibleSettingOptionsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_result_ = {};
}
GetPossibleSettingOptionsResponse::~GetPossibleSettingOptionsResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.GetPossibleSettingOptionsResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetPossibleSettingOptionsResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetPossibleSettingOptionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.GetPossibleSettingOptionsResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.setting_options_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_result_ != nullptr);
    _impl_.camera_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetPossibleSettingOptionsResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> GetPossibleSettingOptionsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetPossibleSettingOptionsResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetPossibleSettingOptionsResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .mavsdk.rpc.camera.SettingOptions setting_options = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(GetPossibleSettingOptionsResponse, _impl_.setting_options_)}},
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetPossibleSettingOptionsResponse, _impl_.camera_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {PROTOBUF_FIELD_OFFSET(GetPossibleSettingOptionsResponse, _impl_.camera_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .mavsdk.rpc.camera.SettingOptions setting_options = 2;
    {PROTOBUF_FIELD_OFFSET(GetPossibleSettingOptionsResponse, _impl_.setting_options_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::CameraResult>()},
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::SettingOptions>()},
  }}, {{
  }},
};

::uint8_t* GetPossibleSettingOptionsResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.GetPossibleSettingOptionsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_result(this),
        _Internal::camera_result(this).GetCachedSize(), target, stream);
  }

  // repeated .mavsdk.rpc.camera.SettingOptions setting_options = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_setting_options_size()); i < n; i++) {
    const auto& repfield = this->_internal_setting_options().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.GetPossibleSettingOptionsResponse)
  return target;
}

::size_t GetPossibleSettingOptionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.GetPossibleSettingOptionsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .mavsdk.rpc.camera.SettingOptions setting_options = 2;
  total_size += 1UL * this->_internal_setting_options_size();
  for (const auto& msg : this->_internal_setting_options()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetPossibleSettingOptionsResponse::_class_data_ = {
    GetPossibleSettingOptionsResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetPossibleSettingOptionsResponse::GetClassData() const {
  return &_class_data_;
}

void GetPossibleSettingOptionsResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetPossibleSettingOptionsResponse*>(&to_msg);
  auto& from = static_cast<const GetPossibleSettingOptionsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.GetPossibleSettingOptionsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_setting_options()->MergeFrom(
      from._internal_setting_options());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_result()->::mavsdk::rpc::camera::CameraResult::MergeFrom(
        from._internal_camera_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetPossibleSettingOptionsResponse::CopyFrom(const GetPossibleSettingOptionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.GetPossibleSettingOptionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetPossibleSettingOptionsResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetPossibleSettingOptionsResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetPossibleSettingOptionsResponse::InternalSwap(GetPossibleSettingOptionsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.setting_options_.InternalSwap(&other->_impl_.setting_options_);
  swap(_impl_.camera_result_, other->_impl_.camera_result_);
}

::google::protobuf::Metadata GetPossibleSettingOptionsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[54]);
}
// ===================================================================

class GetSettingRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetSettingRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetSettingRequest, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::Setting& setting(const GetSettingRequest* msg);
  static void set_has_setting(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::Setting& GetSettingRequest::_Internal::setting(const GetSettingRequest* msg) {
  return *msg->_impl_.setting_;
}
GetSettingRequest::GetSettingRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.GetSettingRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetSettingRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetSettingRequest::GetSettingRequest(
    ::google::protobuf::Arena* arena,
    const GetSettingRequest& from)
    : ::google::protobuf::Message(arena) {
  GetSettingRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.setting_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::Setting>(arena, *from._impl_.setting_)
                : nullptr;
  _impl_.component_id_ = from._impl_.component_id_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.GetSettingRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetSettingRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetSettingRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, setting_),
           0,
           offsetof(Impl_, component_id_) -
               offsetof(Impl_, setting_) +
               sizeof(Impl_::component_id_));
}
GetSettingRequest::~GetSettingRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.GetSettingRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetSettingRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.setting_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetSettingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.GetSettingRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.setting_ != nullptr);
    _impl_.setting_->Clear();
  }
  _impl_.component_id_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetSettingRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> GetSettingRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetSettingRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetSettingRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.Setting setting = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(GetSettingRequest, _impl_.setting_)}},
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetSettingRequest, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GetSettingRequest, _impl_.component_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetSettingRequest, _impl_.component_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .mavsdk.rpc.camera.Setting setting = 2;
    {PROTOBUF_FIELD_OFFSET(GetSettingRequest, _impl_.setting_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::Setting>()},
  }}, {{
  }},
};

::uint8_t* GetSettingRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.GetSettingRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.Setting setting = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::setting(this),
        _Internal::setting(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.GetSettingRequest)
  return target;
}

::size_t GetSettingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.GetSettingRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera.Setting setting = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.setting_);
  }

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetSettingRequest::_class_data_ = {
    GetSettingRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetSettingRequest::GetClassData() const {
  return &_class_data_;
}

void GetSettingRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetSettingRequest*>(&to_msg);
  auto& from = static_cast<const GetSettingRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.GetSettingRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_setting()->::mavsdk::rpc::camera::Setting::MergeFrom(
        from._internal_setting());
  }
  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetSettingRequest::CopyFrom(const GetSettingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.GetSettingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetSettingRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetSettingRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetSettingRequest::InternalSwap(GetSettingRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetSettingRequest, _impl_.component_id_)
      + sizeof(GetSettingRequest::_impl_.component_id_)
      - PROTOBUF_FIELD_OFFSET(GetSettingRequest, _impl_.setting_)>(
          reinterpret_cast<char*>(&_impl_.setting_),
          reinterpret_cast<char*>(&other->_impl_.setting_));
}

::google::protobuf::Metadata GetSettingRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[55]);
}
// ===================================================================

class GetSettingResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetSettingResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetSettingResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::CameraResult& camera_result(const GetSettingResponse* msg);
  static void set_has_camera_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::mavsdk::rpc::camera::Setting& setting(const GetSettingResponse* msg);
  static void set_has_setting(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::mavsdk::rpc::camera::CameraResult& GetSettingResponse::_Internal::camera_result(const GetSettingResponse* msg) {
  return *msg->_impl_.camera_result_;
}
const ::mavsdk::rpc::camera::Setting& GetSettingResponse::_Internal::setting(const GetSettingResponse* msg) {
  return *msg->_impl_.setting_;
}
GetSettingResponse::GetSettingResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.GetSettingResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetSettingResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetSettingResponse::GetSettingResponse(
    ::google::protobuf::Arena* arena,
    const GetSettingResponse& from)
    : ::google::protobuf::Message(arena) {
  GetSettingResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::CameraResult>(arena, *from._impl_.camera_result_)
                : nullptr;
  _impl_.setting_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::Setting>(arena, *from._impl_.setting_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.GetSettingResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetSettingResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetSettingResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, camera_result_),
           0,
           offsetof(Impl_, setting_) -
               offsetof(Impl_, camera_result_) +
               sizeof(Impl_::setting_));
}
GetSettingResponse::~GetSettingResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.GetSettingResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetSettingResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_result_;
  delete _impl_.setting_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetSettingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.GetSettingResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.camera_result_ != nullptr);
      _impl_.camera_result_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.setting_ != nullptr);
      _impl_.setting_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetSettingResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> GetSettingResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetSettingResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetSettingResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.Setting setting = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(GetSettingResponse, _impl_.setting_)}},
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetSettingResponse, _impl_.camera_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {PROTOBUF_FIELD_OFFSET(GetSettingResponse, _impl_.camera_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mavsdk.rpc.camera.Setting setting = 2;
    {PROTOBUF_FIELD_OFFSET(GetSettingResponse, _impl_.setting_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::CameraResult>()},
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::Setting>()},
  }}, {{
  }},
};

::uint8_t* GetSettingResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.GetSettingResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_result(this),
        _Internal::camera_result(this).GetCachedSize(), target, stream);
  }

  // .mavsdk.rpc.camera.Setting setting = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::setting(this),
        _Internal::setting(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.GetSettingResponse)
  return target;
}

::size_t GetSettingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.GetSettingResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_result_);
    }

    // .mavsdk.rpc.camera.Setting setting = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.setting_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetSettingResponse::_class_data_ = {
    GetSettingResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetSettingResponse::GetClassData() const {
  return &_class_data_;
}

void GetSettingResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetSettingResponse*>(&to_msg);
  auto& from = static_cast<const GetSettingResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.GetSettingResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_camera_result()->::mavsdk::rpc::camera::CameraResult::MergeFrom(
          from._internal_camera_result());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_setting()->::mavsdk::rpc::camera::Setting::MergeFrom(
          from._internal_setting());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetSettingResponse::CopyFrom(const GetSettingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.GetSettingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetSettingResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetSettingResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetSettingResponse::InternalSwap(GetSettingResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetSettingResponse, _impl_.setting_)
      + sizeof(GetSettingResponse::_impl_.setting_)
      - PROTOBUF_FIELD_OFFSET(GetSettingResponse, _impl_.camera_result_)>(
          reinterpret_cast<char*>(&_impl_.camera_result_),
          reinterpret_cast<char*>(&other->_impl_.camera_result_));
}

::google::protobuf::Metadata GetSettingResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[56]);
}
// ===================================================================

class FormatStorageRequest::_Internal {
 public:
};

FormatStorageRequest::FormatStorageRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.FormatStorageRequest)
}
FormatStorageRequest::FormatStorageRequest(
    ::google::protobuf::Arena* arena, const FormatStorageRequest& from)
    : FormatStorageRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE FormatStorageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FormatStorageRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, component_id_),
           0,
           offsetof(Impl_, storage_id_) -
               offsetof(Impl_, component_id_) +
               sizeof(Impl_::storage_id_));
}
FormatStorageRequest::~FormatStorageRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.FormatStorageRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FormatStorageRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void FormatStorageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.FormatStorageRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.component_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.storage_id_) -
      reinterpret_cast<char*>(&_impl_.component_id_)) + sizeof(_impl_.storage_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FormatStorageRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> FormatStorageRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_FormatStorageRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 storage_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FormatStorageRequest, _impl_.storage_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(FormatStorageRequest, _impl_.storage_id_)}},
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FormatStorageRequest, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(FormatStorageRequest, _impl_.component_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(FormatStorageRequest, _impl_.component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 storage_id = 2;
    {PROTOBUF_FIELD_OFFSET(FormatStorageRequest, _impl_.storage_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* FormatStorageRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.FormatStorageRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  // int32 storage_id = 2;
  if (this->_internal_storage_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_storage_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.FormatStorageRequest)
  return target;
}

::size_t FormatStorageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.FormatStorageRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  // int32 storage_id = 2;
  if (this->_internal_storage_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_storage_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FormatStorageRequest::_class_data_ = {
    FormatStorageRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* FormatStorageRequest::GetClassData() const {
  return &_class_data_;
}

void FormatStorageRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FormatStorageRequest*>(&to_msg);
  auto& from = static_cast<const FormatStorageRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.FormatStorageRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  if (from._internal_storage_id() != 0) {
    _this->_internal_set_storage_id(from._internal_storage_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FormatStorageRequest::CopyFrom(const FormatStorageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.FormatStorageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FormatStorageRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* FormatStorageRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void FormatStorageRequest::InternalSwap(FormatStorageRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FormatStorageRequest, _impl_.storage_id_)
      + sizeof(FormatStorageRequest::_impl_.storage_id_)
      - PROTOBUF_FIELD_OFFSET(FormatStorageRequest, _impl_.component_id_)>(
          reinterpret_cast<char*>(&_impl_.component_id_),
          reinterpret_cast<char*>(&other->_impl_.component_id_));
}

::google::protobuf::Metadata FormatStorageRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[57]);
}
// ===================================================================

class FormatStorageResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<FormatStorageResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(FormatStorageResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::CameraResult& camera_result(const FormatStorageResponse* msg);
  static void set_has_camera_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::CameraResult& FormatStorageResponse::_Internal::camera_result(const FormatStorageResponse* msg) {
  return *msg->_impl_.camera_result_;
}
FormatStorageResponse::FormatStorageResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.FormatStorageResponse)
}
inline PROTOBUF_NDEBUG_INLINE FormatStorageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

FormatStorageResponse::FormatStorageResponse(
    ::google::protobuf::Arena* arena,
    const FormatStorageResponse& from)
    : ::google::protobuf::Message(arena) {
  FormatStorageResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::CameraResult>(arena, *from._impl_.camera_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.FormatStorageResponse)
}
inline PROTOBUF_NDEBUG_INLINE FormatStorageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FormatStorageResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_result_ = {};
}
FormatStorageResponse::~FormatStorageResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.FormatStorageResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FormatStorageResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void FormatStorageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.FormatStorageResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_result_ != nullptr);
    _impl_.camera_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FormatStorageResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> FormatStorageResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FormatStorageResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_FormatStorageResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(FormatStorageResponse, _impl_.camera_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {PROTOBUF_FIELD_OFFSET(FormatStorageResponse, _impl_.camera_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::CameraResult>()},
  }}, {{
  }},
};

::uint8_t* FormatStorageResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.FormatStorageResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_result(this),
        _Internal::camera_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.FormatStorageResponse)
  return target;
}

::size_t FormatStorageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.FormatStorageResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FormatStorageResponse::_class_data_ = {
    FormatStorageResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* FormatStorageResponse::GetClassData() const {
  return &_class_data_;
}

void FormatStorageResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FormatStorageResponse*>(&to_msg);
  auto& from = static_cast<const FormatStorageResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.FormatStorageResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_result()->::mavsdk::rpc::camera::CameraResult::MergeFrom(
        from._internal_camera_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FormatStorageResponse::CopyFrom(const FormatStorageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.FormatStorageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FormatStorageResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* FormatStorageResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void FormatStorageResponse::InternalSwap(FormatStorageResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_result_, other->_impl_.camera_result_);
}

::google::protobuf::Metadata FormatStorageResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[58]);
}
// ===================================================================

class ResetSettingsRequest::_Internal {
 public:
};

ResetSettingsRequest::ResetSettingsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.ResetSettingsRequest)
}
ResetSettingsRequest::ResetSettingsRequest(
    ::google::protobuf::Arena* arena, const ResetSettingsRequest& from)
    : ResetSettingsRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ResetSettingsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ResetSettingsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.component_id_ = {};
}
ResetSettingsRequest::~ResetSettingsRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.ResetSettingsRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ResetSettingsRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ResetSettingsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.ResetSettingsRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.component_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ResetSettingsRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ResetSettingsRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ResetSettingsRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ResetSettingsRequest, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ResetSettingsRequest, _impl_.component_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(ResetSettingsRequest, _impl_.component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ResetSettingsRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.ResetSettingsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.ResetSettingsRequest)
  return target;
}

::size_t ResetSettingsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.ResetSettingsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ResetSettingsRequest::_class_data_ = {
    ResetSettingsRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ResetSettingsRequest::GetClassData() const {
  return &_class_data_;
}

void ResetSettingsRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ResetSettingsRequest*>(&to_msg);
  auto& from = static_cast<const ResetSettingsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.ResetSettingsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResetSettingsRequest::CopyFrom(const ResetSettingsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.ResetSettingsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ResetSettingsRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ResetSettingsRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ResetSettingsRequest::InternalSwap(ResetSettingsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.component_id_, other->_impl_.component_id_);
}

::google::protobuf::Metadata ResetSettingsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[59]);
}
// ===================================================================

class ResetSettingsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ResetSettingsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ResetSettingsResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::CameraResult& camera_result(const ResetSettingsResponse* msg);
  static void set_has_camera_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::CameraResult& ResetSettingsResponse::_Internal::camera_result(const ResetSettingsResponse* msg) {
  return *msg->_impl_.camera_result_;
}
ResetSettingsResponse::ResetSettingsResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.ResetSettingsResponse)
}
inline PROTOBUF_NDEBUG_INLINE ResetSettingsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ResetSettingsResponse::ResetSettingsResponse(
    ::google::protobuf::Arena* arena,
    const ResetSettingsResponse& from)
    : ::google::protobuf::Message(arena) {
  ResetSettingsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::CameraResult>(arena, *from._impl_.camera_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.ResetSettingsResponse)
}
inline PROTOBUF_NDEBUG_INLINE ResetSettingsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ResetSettingsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_result_ = {};
}
ResetSettingsResponse::~ResetSettingsResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.ResetSettingsResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ResetSettingsResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ResetSettingsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.ResetSettingsResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_result_ != nullptr);
    _impl_.camera_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ResetSettingsResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ResetSettingsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ResetSettingsResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ResetSettingsResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ResetSettingsResponse, _impl_.camera_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {PROTOBUF_FIELD_OFFSET(ResetSettingsResponse, _impl_.camera_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::CameraResult>()},
  }}, {{
  }},
};

::uint8_t* ResetSettingsResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.ResetSettingsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_result(this),
        _Internal::camera_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.ResetSettingsResponse)
  return target;
}

::size_t ResetSettingsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.ResetSettingsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ResetSettingsResponse::_class_data_ = {
    ResetSettingsResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ResetSettingsResponse::GetClassData() const {
  return &_class_data_;
}

void ResetSettingsResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ResetSettingsResponse*>(&to_msg);
  auto& from = static_cast<const ResetSettingsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.ResetSettingsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_result()->::mavsdk::rpc::camera::CameraResult::MergeFrom(
        from._internal_camera_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResetSettingsResponse::CopyFrom(const ResetSettingsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.ResetSettingsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ResetSettingsResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ResetSettingsResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ResetSettingsResponse::InternalSwap(ResetSettingsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_result_, other->_impl_.camera_result_);
}

::google::protobuf::Metadata ResetSettingsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[60]);
}
// ===================================================================

class ZoomInStartRequest::_Internal {
 public:
};

ZoomInStartRequest::ZoomInStartRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.ZoomInStartRequest)
}
ZoomInStartRequest::ZoomInStartRequest(
    ::google::protobuf::Arena* arena, const ZoomInStartRequest& from)
    : ZoomInStartRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ZoomInStartRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ZoomInStartRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.component_id_ = {};
}
ZoomInStartRequest::~ZoomInStartRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.ZoomInStartRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ZoomInStartRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ZoomInStartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.ZoomInStartRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.component_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ZoomInStartRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ZoomInStartRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ZoomInStartRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ZoomInStartRequest, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ZoomInStartRequest, _impl_.component_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(ZoomInStartRequest, _impl_.component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ZoomInStartRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.ZoomInStartRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.ZoomInStartRequest)
  return target;
}

::size_t ZoomInStartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.ZoomInStartRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ZoomInStartRequest::_class_data_ = {
    ZoomInStartRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ZoomInStartRequest::GetClassData() const {
  return &_class_data_;
}

void ZoomInStartRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ZoomInStartRequest*>(&to_msg);
  auto& from = static_cast<const ZoomInStartRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.ZoomInStartRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ZoomInStartRequest::CopyFrom(const ZoomInStartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.ZoomInStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ZoomInStartRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ZoomInStartRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ZoomInStartRequest::InternalSwap(ZoomInStartRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.component_id_, other->_impl_.component_id_);
}

::google::protobuf::Metadata ZoomInStartRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[61]);
}
// ===================================================================

class ZoomInStartResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ZoomInStartResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ZoomInStartResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::CameraResult& camera_result(const ZoomInStartResponse* msg);
  static void set_has_camera_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::CameraResult& ZoomInStartResponse::_Internal::camera_result(const ZoomInStartResponse* msg) {
  return *msg->_impl_.camera_result_;
}
ZoomInStartResponse::ZoomInStartResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.ZoomInStartResponse)
}
inline PROTOBUF_NDEBUG_INLINE ZoomInStartResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ZoomInStartResponse::ZoomInStartResponse(
    ::google::protobuf::Arena* arena,
    const ZoomInStartResponse& from)
    : ::google::protobuf::Message(arena) {
  ZoomInStartResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::CameraResult>(arena, *from._impl_.camera_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.ZoomInStartResponse)
}
inline PROTOBUF_NDEBUG_INLINE ZoomInStartResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ZoomInStartResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_result_ = {};
}
ZoomInStartResponse::~ZoomInStartResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.ZoomInStartResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ZoomInStartResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ZoomInStartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.ZoomInStartResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_result_ != nullptr);
    _impl_.camera_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ZoomInStartResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ZoomInStartResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ZoomInStartResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ZoomInStartResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ZoomInStartResponse, _impl_.camera_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {PROTOBUF_FIELD_OFFSET(ZoomInStartResponse, _impl_.camera_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::CameraResult>()},
  }}, {{
  }},
};

::uint8_t* ZoomInStartResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.ZoomInStartResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_result(this),
        _Internal::camera_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.ZoomInStartResponse)
  return target;
}

::size_t ZoomInStartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.ZoomInStartResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ZoomInStartResponse::_class_data_ = {
    ZoomInStartResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ZoomInStartResponse::GetClassData() const {
  return &_class_data_;
}

void ZoomInStartResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ZoomInStartResponse*>(&to_msg);
  auto& from = static_cast<const ZoomInStartResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.ZoomInStartResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_result()->::mavsdk::rpc::camera::CameraResult::MergeFrom(
        from._internal_camera_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ZoomInStartResponse::CopyFrom(const ZoomInStartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.ZoomInStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ZoomInStartResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ZoomInStartResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ZoomInStartResponse::InternalSwap(ZoomInStartResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_result_, other->_impl_.camera_result_);
}

::google::protobuf::Metadata ZoomInStartResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[62]);
}
// ===================================================================

class ZoomOutStartRequest::_Internal {
 public:
};

ZoomOutStartRequest::ZoomOutStartRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.ZoomOutStartRequest)
}
ZoomOutStartRequest::ZoomOutStartRequest(
    ::google::protobuf::Arena* arena, const ZoomOutStartRequest& from)
    : ZoomOutStartRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ZoomOutStartRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ZoomOutStartRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.component_id_ = {};
}
ZoomOutStartRequest::~ZoomOutStartRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.ZoomOutStartRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ZoomOutStartRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ZoomOutStartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.ZoomOutStartRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.component_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ZoomOutStartRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ZoomOutStartRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ZoomOutStartRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ZoomOutStartRequest, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ZoomOutStartRequest, _impl_.component_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(ZoomOutStartRequest, _impl_.component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ZoomOutStartRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.ZoomOutStartRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.ZoomOutStartRequest)
  return target;
}

::size_t ZoomOutStartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.ZoomOutStartRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ZoomOutStartRequest::_class_data_ = {
    ZoomOutStartRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ZoomOutStartRequest::GetClassData() const {
  return &_class_data_;
}

void ZoomOutStartRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ZoomOutStartRequest*>(&to_msg);
  auto& from = static_cast<const ZoomOutStartRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.ZoomOutStartRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ZoomOutStartRequest::CopyFrom(const ZoomOutStartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.ZoomOutStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ZoomOutStartRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ZoomOutStartRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ZoomOutStartRequest::InternalSwap(ZoomOutStartRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.component_id_, other->_impl_.component_id_);
}

::google::protobuf::Metadata ZoomOutStartRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[63]);
}
// ===================================================================

class ZoomOutStartResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ZoomOutStartResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ZoomOutStartResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::CameraResult& camera_result(const ZoomOutStartResponse* msg);
  static void set_has_camera_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::CameraResult& ZoomOutStartResponse::_Internal::camera_result(const ZoomOutStartResponse* msg) {
  return *msg->_impl_.camera_result_;
}
ZoomOutStartResponse::ZoomOutStartResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.ZoomOutStartResponse)
}
inline PROTOBUF_NDEBUG_INLINE ZoomOutStartResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ZoomOutStartResponse::ZoomOutStartResponse(
    ::google::protobuf::Arena* arena,
    const ZoomOutStartResponse& from)
    : ::google::protobuf::Message(arena) {
  ZoomOutStartResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::CameraResult>(arena, *from._impl_.camera_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.ZoomOutStartResponse)
}
inline PROTOBUF_NDEBUG_INLINE ZoomOutStartResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ZoomOutStartResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_result_ = {};
}
ZoomOutStartResponse::~ZoomOutStartResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.ZoomOutStartResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ZoomOutStartResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ZoomOutStartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.ZoomOutStartResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_result_ != nullptr);
    _impl_.camera_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ZoomOutStartResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ZoomOutStartResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ZoomOutStartResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ZoomOutStartResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ZoomOutStartResponse, _impl_.camera_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {PROTOBUF_FIELD_OFFSET(ZoomOutStartResponse, _impl_.camera_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::CameraResult>()},
  }}, {{
  }},
};

::uint8_t* ZoomOutStartResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.ZoomOutStartResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_result(this),
        _Internal::camera_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.ZoomOutStartResponse)
  return target;
}

::size_t ZoomOutStartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.ZoomOutStartResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ZoomOutStartResponse::_class_data_ = {
    ZoomOutStartResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ZoomOutStartResponse::GetClassData() const {
  return &_class_data_;
}

void ZoomOutStartResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ZoomOutStartResponse*>(&to_msg);
  auto& from = static_cast<const ZoomOutStartResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.ZoomOutStartResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_result()->::mavsdk::rpc::camera::CameraResult::MergeFrom(
        from._internal_camera_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ZoomOutStartResponse::CopyFrom(const ZoomOutStartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.ZoomOutStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ZoomOutStartResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ZoomOutStartResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ZoomOutStartResponse::InternalSwap(ZoomOutStartResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_result_, other->_impl_.camera_result_);
}

::google::protobuf::Metadata ZoomOutStartResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[64]);
}
// ===================================================================

class ZoomStopRequest::_Internal {
 public:
};

ZoomStopRequest::ZoomStopRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.ZoomStopRequest)
}
ZoomStopRequest::ZoomStopRequest(
    ::google::protobuf::Arena* arena, const ZoomStopRequest& from)
    : ZoomStopRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ZoomStopRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ZoomStopRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.component_id_ = {};
}
ZoomStopRequest::~ZoomStopRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.ZoomStopRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ZoomStopRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ZoomStopRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.ZoomStopRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.component_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ZoomStopRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ZoomStopRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ZoomStopRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ZoomStopRequest, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ZoomStopRequest, _impl_.component_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(ZoomStopRequest, _impl_.component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ZoomStopRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.ZoomStopRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.ZoomStopRequest)
  return target;
}

::size_t ZoomStopRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.ZoomStopRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ZoomStopRequest::_class_data_ = {
    ZoomStopRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ZoomStopRequest::GetClassData() const {
  return &_class_data_;
}

void ZoomStopRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ZoomStopRequest*>(&to_msg);
  auto& from = static_cast<const ZoomStopRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.ZoomStopRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ZoomStopRequest::CopyFrom(const ZoomStopRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.ZoomStopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ZoomStopRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ZoomStopRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ZoomStopRequest::InternalSwap(ZoomStopRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.component_id_, other->_impl_.component_id_);
}

::google::protobuf::Metadata ZoomStopRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[65]);
}
// ===================================================================

class ZoomStopResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ZoomStopResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ZoomStopResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::CameraResult& camera_result(const ZoomStopResponse* msg);
  static void set_has_camera_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::CameraResult& ZoomStopResponse::_Internal::camera_result(const ZoomStopResponse* msg) {
  return *msg->_impl_.camera_result_;
}
ZoomStopResponse::ZoomStopResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.ZoomStopResponse)
}
inline PROTOBUF_NDEBUG_INLINE ZoomStopResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ZoomStopResponse::ZoomStopResponse(
    ::google::protobuf::Arena* arena,
    const ZoomStopResponse& from)
    : ::google::protobuf::Message(arena) {
  ZoomStopResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::CameraResult>(arena, *from._impl_.camera_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.ZoomStopResponse)
}
inline PROTOBUF_NDEBUG_INLINE ZoomStopResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ZoomStopResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_result_ = {};
}
ZoomStopResponse::~ZoomStopResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.ZoomStopResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ZoomStopResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ZoomStopResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.ZoomStopResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_result_ != nullptr);
    _impl_.camera_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ZoomStopResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ZoomStopResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ZoomStopResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ZoomStopResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ZoomStopResponse, _impl_.camera_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {PROTOBUF_FIELD_OFFSET(ZoomStopResponse, _impl_.camera_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::CameraResult>()},
  }}, {{
  }},
};

::uint8_t* ZoomStopResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.ZoomStopResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_result(this),
        _Internal::camera_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.ZoomStopResponse)
  return target;
}

::size_t ZoomStopResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.ZoomStopResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ZoomStopResponse::_class_data_ = {
    ZoomStopResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ZoomStopResponse::GetClassData() const {
  return &_class_data_;
}

void ZoomStopResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ZoomStopResponse*>(&to_msg);
  auto& from = static_cast<const ZoomStopResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.ZoomStopResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_result()->::mavsdk::rpc::camera::CameraResult::MergeFrom(
        from._internal_camera_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ZoomStopResponse::CopyFrom(const ZoomStopResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.ZoomStopResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ZoomStopResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ZoomStopResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ZoomStopResponse::InternalSwap(ZoomStopResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_result_, other->_impl_.camera_result_);
}

::google::protobuf::Metadata ZoomStopResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[66]);
}
// ===================================================================

class ZoomRangeRequest::_Internal {
 public:
};

ZoomRangeRequest::ZoomRangeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.ZoomRangeRequest)
}
ZoomRangeRequest::ZoomRangeRequest(
    ::google::protobuf::Arena* arena, const ZoomRangeRequest& from)
    : ZoomRangeRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ZoomRangeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ZoomRangeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, component_id_),
           0,
           offsetof(Impl_, range_) -
               offsetof(Impl_, component_id_) +
               sizeof(Impl_::range_));
}
ZoomRangeRequest::~ZoomRangeRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.ZoomRangeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ZoomRangeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ZoomRangeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.ZoomRangeRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.component_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.range_) -
      reinterpret_cast<char*>(&_impl_.component_id_)) + sizeof(_impl_.range_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ZoomRangeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> ZoomRangeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ZoomRangeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float range = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(ZoomRangeRequest, _impl_.range_)}},
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ZoomRangeRequest, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ZoomRangeRequest, _impl_.component_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(ZoomRangeRequest, _impl_.component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // float range = 2;
    {PROTOBUF_FIELD_OFFSET(ZoomRangeRequest, _impl_.range_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ZoomRangeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.ZoomRangeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  // float range = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_range = this->_internal_range();
  ::uint32_t raw_range;
  memcpy(&raw_range, &tmp_range, sizeof(tmp_range));
  if (raw_range != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_range(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.ZoomRangeRequest)
  return target;
}

::size_t ZoomRangeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.ZoomRangeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  // float range = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_range = this->_internal_range();
  ::uint32_t raw_range;
  memcpy(&raw_range, &tmp_range, sizeof(tmp_range));
  if (raw_range != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ZoomRangeRequest::_class_data_ = {
    ZoomRangeRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ZoomRangeRequest::GetClassData() const {
  return &_class_data_;
}

void ZoomRangeRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ZoomRangeRequest*>(&to_msg);
  auto& from = static_cast<const ZoomRangeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.ZoomRangeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_range = from._internal_range();
  ::uint32_t raw_range;
  memcpy(&raw_range, &tmp_range, sizeof(tmp_range));
  if (raw_range != 0) {
    _this->_internal_set_range(from._internal_range());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ZoomRangeRequest::CopyFrom(const ZoomRangeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.ZoomRangeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ZoomRangeRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ZoomRangeRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ZoomRangeRequest::InternalSwap(ZoomRangeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ZoomRangeRequest, _impl_.range_)
      + sizeof(ZoomRangeRequest::_impl_.range_)
      - PROTOBUF_FIELD_OFFSET(ZoomRangeRequest, _impl_.component_id_)>(
          reinterpret_cast<char*>(&_impl_.component_id_),
          reinterpret_cast<char*>(&other->_impl_.component_id_));
}

::google::protobuf::Metadata ZoomRangeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[67]);
}
// ===================================================================

class ZoomRangeResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ZoomRangeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ZoomRangeResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::CameraResult& camera_result(const ZoomRangeResponse* msg);
  static void set_has_camera_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::CameraResult& ZoomRangeResponse::_Internal::camera_result(const ZoomRangeResponse* msg) {
  return *msg->_impl_.camera_result_;
}
ZoomRangeResponse::ZoomRangeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.ZoomRangeResponse)
}
inline PROTOBUF_NDEBUG_INLINE ZoomRangeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ZoomRangeResponse::ZoomRangeResponse(
    ::google::protobuf::Arena* arena,
    const ZoomRangeResponse& from)
    : ::google::protobuf::Message(arena) {
  ZoomRangeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::CameraResult>(arena, *from._impl_.camera_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.ZoomRangeResponse)
}
inline PROTOBUF_NDEBUG_INLINE ZoomRangeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ZoomRangeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_result_ = {};
}
ZoomRangeResponse::~ZoomRangeResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.ZoomRangeResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ZoomRangeResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ZoomRangeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.ZoomRangeResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_result_ != nullptr);
    _impl_.camera_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ZoomRangeResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ZoomRangeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ZoomRangeResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ZoomRangeResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ZoomRangeResponse, _impl_.camera_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {PROTOBUF_FIELD_OFFSET(ZoomRangeResponse, _impl_.camera_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::CameraResult>()},
  }}, {{
  }},
};

::uint8_t* ZoomRangeResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.ZoomRangeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_result(this),
        _Internal::camera_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.ZoomRangeResponse)
  return target;
}

::size_t ZoomRangeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.ZoomRangeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ZoomRangeResponse::_class_data_ = {
    ZoomRangeResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ZoomRangeResponse::GetClassData() const {
  return &_class_data_;
}

void ZoomRangeResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ZoomRangeResponse*>(&to_msg);
  auto& from = static_cast<const ZoomRangeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.ZoomRangeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_result()->::mavsdk::rpc::camera::CameraResult::MergeFrom(
        from._internal_camera_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ZoomRangeResponse::CopyFrom(const ZoomRangeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.ZoomRangeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ZoomRangeResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ZoomRangeResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ZoomRangeResponse::InternalSwap(ZoomRangeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_result_, other->_impl_.camera_result_);
}

::google::protobuf::Metadata ZoomRangeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[68]);
}
// ===================================================================

class TrackPointRequest::_Internal {
 public:
};

TrackPointRequest::TrackPointRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.TrackPointRequest)
}
TrackPointRequest::TrackPointRequest(
    ::google::protobuf::Arena* arena, const TrackPointRequest& from)
    : TrackPointRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE TrackPointRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TrackPointRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, component_id_),
           0,
           offsetof(Impl_, radius_) -
               offsetof(Impl_, component_id_) +
               sizeof(Impl_::radius_));
}
TrackPointRequest::~TrackPointRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.TrackPointRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TrackPointRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TrackPointRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.TrackPointRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.component_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.radius_) -
      reinterpret_cast<char*>(&_impl_.component_id_)) + sizeof(_impl_.radius_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TrackPointRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> TrackPointRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TrackPointRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float radius = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(TrackPointRequest, _impl_.radius_)}},
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TrackPointRequest, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TrackPointRequest, _impl_.component_id_)}},
    // float point_x = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(TrackPointRequest, _impl_.point_x_)}},
    // float point_y = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(TrackPointRequest, _impl_.point_y_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(TrackPointRequest, _impl_.component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // float point_x = 2;
    {PROTOBUF_FIELD_OFFSET(TrackPointRequest, _impl_.point_x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float point_y = 3;
    {PROTOBUF_FIELD_OFFSET(TrackPointRequest, _impl_.point_y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float radius = 4;
    {PROTOBUF_FIELD_OFFSET(TrackPointRequest, _impl_.radius_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TrackPointRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.TrackPointRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  // float point_x = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_point_x = this->_internal_point_x();
  ::uint32_t raw_point_x;
  memcpy(&raw_point_x, &tmp_point_x, sizeof(tmp_point_x));
  if (raw_point_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_point_x(), target);
  }

  // float point_y = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_point_y = this->_internal_point_y();
  ::uint32_t raw_point_y;
  memcpy(&raw_point_y, &tmp_point_y, sizeof(tmp_point_y));
  if (raw_point_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_point_y(), target);
  }

  // float radius = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_radius = this->_internal_radius();
  ::uint32_t raw_radius;
  memcpy(&raw_radius, &tmp_radius, sizeof(tmp_radius));
  if (raw_radius != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_radius(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.TrackPointRequest)
  return target;
}

::size_t TrackPointRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.TrackPointRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  // float point_x = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_point_x = this->_internal_point_x();
  ::uint32_t raw_point_x;
  memcpy(&raw_point_x, &tmp_point_x, sizeof(tmp_point_x));
  if (raw_point_x != 0) {
    total_size += 5;
  }

  // float point_y = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_point_y = this->_internal_point_y();
  ::uint32_t raw_point_y;
  memcpy(&raw_point_y, &tmp_point_y, sizeof(tmp_point_y));
  if (raw_point_y != 0) {
    total_size += 5;
  }

  // float radius = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_radius = this->_internal_radius();
  ::uint32_t raw_radius;
  memcpy(&raw_radius, &tmp_radius, sizeof(tmp_radius));
  if (raw_radius != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TrackPointRequest::_class_data_ = {
    TrackPointRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TrackPointRequest::GetClassData() const {
  return &_class_data_;
}

void TrackPointRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TrackPointRequest*>(&to_msg);
  auto& from = static_cast<const TrackPointRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.TrackPointRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_point_x = from._internal_point_x();
  ::uint32_t raw_point_x;
  memcpy(&raw_point_x, &tmp_point_x, sizeof(tmp_point_x));
  if (raw_point_x != 0) {
    _this->_internal_set_point_x(from._internal_point_x());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_point_y = from._internal_point_y();
  ::uint32_t raw_point_y;
  memcpy(&raw_point_y, &tmp_point_y, sizeof(tmp_point_y));
  if (raw_point_y != 0) {
    _this->_internal_set_point_y(from._internal_point_y());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_radius = from._internal_radius();
  ::uint32_t raw_radius;
  memcpy(&raw_radius, &tmp_radius, sizeof(tmp_radius));
  if (raw_radius != 0) {
    _this->_internal_set_radius(from._internal_radius());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TrackPointRequest::CopyFrom(const TrackPointRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.TrackPointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TrackPointRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TrackPointRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TrackPointRequest::InternalSwap(TrackPointRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TrackPointRequest, _impl_.radius_)
      + sizeof(TrackPointRequest::_impl_.radius_)
      - PROTOBUF_FIELD_OFFSET(TrackPointRequest, _impl_.component_id_)>(
          reinterpret_cast<char*>(&_impl_.component_id_),
          reinterpret_cast<char*>(&other->_impl_.component_id_));
}

::google::protobuf::Metadata TrackPointRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[69]);
}
// ===================================================================

class TrackPointResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<TrackPointResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TrackPointResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::CameraResult& camera_result(const TrackPointResponse* msg);
  static void set_has_camera_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::CameraResult& TrackPointResponse::_Internal::camera_result(const TrackPointResponse* msg) {
  return *msg->_impl_.camera_result_;
}
TrackPointResponse::TrackPointResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.TrackPointResponse)
}
inline PROTOBUF_NDEBUG_INLINE TrackPointResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TrackPointResponse::TrackPointResponse(
    ::google::protobuf::Arena* arena,
    const TrackPointResponse& from)
    : ::google::protobuf::Message(arena) {
  TrackPointResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::CameraResult>(arena, *from._impl_.camera_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.TrackPointResponse)
}
inline PROTOBUF_NDEBUG_INLINE TrackPointResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TrackPointResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_result_ = {};
}
TrackPointResponse::~TrackPointResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.TrackPointResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TrackPointResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TrackPointResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.TrackPointResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_result_ != nullptr);
    _impl_.camera_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TrackPointResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TrackPointResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TrackPointResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TrackPointResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TrackPointResponse, _impl_.camera_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {PROTOBUF_FIELD_OFFSET(TrackPointResponse, _impl_.camera_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::CameraResult>()},
  }}, {{
  }},
};

::uint8_t* TrackPointResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.TrackPointResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_result(this),
        _Internal::camera_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.TrackPointResponse)
  return target;
}

::size_t TrackPointResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.TrackPointResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TrackPointResponse::_class_data_ = {
    TrackPointResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TrackPointResponse::GetClassData() const {
  return &_class_data_;
}

void TrackPointResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TrackPointResponse*>(&to_msg);
  auto& from = static_cast<const TrackPointResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.TrackPointResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_result()->::mavsdk::rpc::camera::CameraResult::MergeFrom(
        from._internal_camera_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TrackPointResponse::CopyFrom(const TrackPointResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.TrackPointResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TrackPointResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TrackPointResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TrackPointResponse::InternalSwap(TrackPointResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_result_, other->_impl_.camera_result_);
}

::google::protobuf::Metadata TrackPointResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[70]);
}
// ===================================================================

class TrackRectangleRequest::_Internal {
 public:
};

TrackRectangleRequest::TrackRectangleRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.TrackRectangleRequest)
}
TrackRectangleRequest::TrackRectangleRequest(
    ::google::protobuf::Arena* arena, const TrackRectangleRequest& from)
    : TrackRectangleRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE TrackRectangleRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TrackRectangleRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, component_id_),
           0,
           offsetof(Impl_, bottom_right_y_) -
               offsetof(Impl_, component_id_) +
               sizeof(Impl_::bottom_right_y_));
}
TrackRectangleRequest::~TrackRectangleRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.TrackRectangleRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TrackRectangleRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TrackRectangleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.TrackRectangleRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.component_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.bottom_right_y_) -
      reinterpret_cast<char*>(&_impl_.component_id_)) + sizeof(_impl_.bottom_right_y_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TrackRectangleRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> TrackRectangleRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TrackRectangleRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TrackRectangleRequest, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TrackRectangleRequest, _impl_.component_id_)}},
    // float top_left_x = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(TrackRectangleRequest, _impl_.top_left_x_)}},
    // float top_left_y = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(TrackRectangleRequest, _impl_.top_left_y_)}},
    // float bottom_right_x = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(TrackRectangleRequest, _impl_.bottom_right_x_)}},
    // float bottom_right_y = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(TrackRectangleRequest, _impl_.bottom_right_y_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(TrackRectangleRequest, _impl_.component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // float top_left_x = 2;
    {PROTOBUF_FIELD_OFFSET(TrackRectangleRequest, _impl_.top_left_x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float top_left_y = 3;
    {PROTOBUF_FIELD_OFFSET(TrackRectangleRequest, _impl_.top_left_y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float bottom_right_x = 4;
    {PROTOBUF_FIELD_OFFSET(TrackRectangleRequest, _impl_.bottom_right_x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float bottom_right_y = 5;
    {PROTOBUF_FIELD_OFFSET(TrackRectangleRequest, _impl_.bottom_right_y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TrackRectangleRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.TrackRectangleRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  // float top_left_x = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_top_left_x = this->_internal_top_left_x();
  ::uint32_t raw_top_left_x;
  memcpy(&raw_top_left_x, &tmp_top_left_x, sizeof(tmp_top_left_x));
  if (raw_top_left_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_top_left_x(), target);
  }

  // float top_left_y = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_top_left_y = this->_internal_top_left_y();
  ::uint32_t raw_top_left_y;
  memcpy(&raw_top_left_y, &tmp_top_left_y, sizeof(tmp_top_left_y));
  if (raw_top_left_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_top_left_y(), target);
  }

  // float bottom_right_x = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_bottom_right_x = this->_internal_bottom_right_x();
  ::uint32_t raw_bottom_right_x;
  memcpy(&raw_bottom_right_x, &tmp_bottom_right_x, sizeof(tmp_bottom_right_x));
  if (raw_bottom_right_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_bottom_right_x(), target);
  }

  // float bottom_right_y = 5;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_bottom_right_y = this->_internal_bottom_right_y();
  ::uint32_t raw_bottom_right_y;
  memcpy(&raw_bottom_right_y, &tmp_bottom_right_y, sizeof(tmp_bottom_right_y));
  if (raw_bottom_right_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_bottom_right_y(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.TrackRectangleRequest)
  return target;
}

::size_t TrackRectangleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.TrackRectangleRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  // float top_left_x = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_top_left_x = this->_internal_top_left_x();
  ::uint32_t raw_top_left_x;
  memcpy(&raw_top_left_x, &tmp_top_left_x, sizeof(tmp_top_left_x));
  if (raw_top_left_x != 0) {
    total_size += 5;
  }

  // float top_left_y = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_top_left_y = this->_internal_top_left_y();
  ::uint32_t raw_top_left_y;
  memcpy(&raw_top_left_y, &tmp_top_left_y, sizeof(tmp_top_left_y));
  if (raw_top_left_y != 0) {
    total_size += 5;
  }

  // float bottom_right_x = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_bottom_right_x = this->_internal_bottom_right_x();
  ::uint32_t raw_bottom_right_x;
  memcpy(&raw_bottom_right_x, &tmp_bottom_right_x, sizeof(tmp_bottom_right_x));
  if (raw_bottom_right_x != 0) {
    total_size += 5;
  }

  // float bottom_right_y = 5;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_bottom_right_y = this->_internal_bottom_right_y();
  ::uint32_t raw_bottom_right_y;
  memcpy(&raw_bottom_right_y, &tmp_bottom_right_y, sizeof(tmp_bottom_right_y));
  if (raw_bottom_right_y != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TrackRectangleRequest::_class_data_ = {
    TrackRectangleRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TrackRectangleRequest::GetClassData() const {
  return &_class_data_;
}

void TrackRectangleRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TrackRectangleRequest*>(&to_msg);
  auto& from = static_cast<const TrackRectangleRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.TrackRectangleRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_top_left_x = from._internal_top_left_x();
  ::uint32_t raw_top_left_x;
  memcpy(&raw_top_left_x, &tmp_top_left_x, sizeof(tmp_top_left_x));
  if (raw_top_left_x != 0) {
    _this->_internal_set_top_left_x(from._internal_top_left_x());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_top_left_y = from._internal_top_left_y();
  ::uint32_t raw_top_left_y;
  memcpy(&raw_top_left_y, &tmp_top_left_y, sizeof(tmp_top_left_y));
  if (raw_top_left_y != 0) {
    _this->_internal_set_top_left_y(from._internal_top_left_y());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_bottom_right_x = from._internal_bottom_right_x();
  ::uint32_t raw_bottom_right_x;
  memcpy(&raw_bottom_right_x, &tmp_bottom_right_x, sizeof(tmp_bottom_right_x));
  if (raw_bottom_right_x != 0) {
    _this->_internal_set_bottom_right_x(from._internal_bottom_right_x());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_bottom_right_y = from._internal_bottom_right_y();
  ::uint32_t raw_bottom_right_y;
  memcpy(&raw_bottom_right_y, &tmp_bottom_right_y, sizeof(tmp_bottom_right_y));
  if (raw_bottom_right_y != 0) {
    _this->_internal_set_bottom_right_y(from._internal_bottom_right_y());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TrackRectangleRequest::CopyFrom(const TrackRectangleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.TrackRectangleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TrackRectangleRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TrackRectangleRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TrackRectangleRequest::InternalSwap(TrackRectangleRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TrackRectangleRequest, _impl_.bottom_right_y_)
      + sizeof(TrackRectangleRequest::_impl_.bottom_right_y_)
      - PROTOBUF_FIELD_OFFSET(TrackRectangleRequest, _impl_.component_id_)>(
          reinterpret_cast<char*>(&_impl_.component_id_),
          reinterpret_cast<char*>(&other->_impl_.component_id_));
}

::google::protobuf::Metadata TrackRectangleRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[71]);
}
// ===================================================================

class TrackRectangleResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<TrackRectangleResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TrackRectangleResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::CameraResult& camera_result(const TrackRectangleResponse* msg);
  static void set_has_camera_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::CameraResult& TrackRectangleResponse::_Internal::camera_result(const TrackRectangleResponse* msg) {
  return *msg->_impl_.camera_result_;
}
TrackRectangleResponse::TrackRectangleResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.TrackRectangleResponse)
}
inline PROTOBUF_NDEBUG_INLINE TrackRectangleResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TrackRectangleResponse::TrackRectangleResponse(
    ::google::protobuf::Arena* arena,
    const TrackRectangleResponse& from)
    : ::google::protobuf::Message(arena) {
  TrackRectangleResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::CameraResult>(arena, *from._impl_.camera_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.TrackRectangleResponse)
}
inline PROTOBUF_NDEBUG_INLINE TrackRectangleResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TrackRectangleResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_result_ = {};
}
TrackRectangleResponse::~TrackRectangleResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.TrackRectangleResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TrackRectangleResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TrackRectangleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.TrackRectangleResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_result_ != nullptr);
    _impl_.camera_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TrackRectangleResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TrackRectangleResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TrackRectangleResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TrackRectangleResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TrackRectangleResponse, _impl_.camera_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {PROTOBUF_FIELD_OFFSET(TrackRectangleResponse, _impl_.camera_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::CameraResult>()},
  }}, {{
  }},
};

::uint8_t* TrackRectangleResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.TrackRectangleResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_result(this),
        _Internal::camera_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.TrackRectangleResponse)
  return target;
}

::size_t TrackRectangleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.TrackRectangleResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TrackRectangleResponse::_class_data_ = {
    TrackRectangleResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TrackRectangleResponse::GetClassData() const {
  return &_class_data_;
}

void TrackRectangleResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TrackRectangleResponse*>(&to_msg);
  auto& from = static_cast<const TrackRectangleResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.TrackRectangleResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_result()->::mavsdk::rpc::camera::CameraResult::MergeFrom(
        from._internal_camera_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TrackRectangleResponse::CopyFrom(const TrackRectangleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.TrackRectangleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TrackRectangleResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TrackRectangleResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TrackRectangleResponse::InternalSwap(TrackRectangleResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_result_, other->_impl_.camera_result_);
}

::google::protobuf::Metadata TrackRectangleResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[72]);
}
// ===================================================================

class TrackStopRequest::_Internal {
 public:
};

TrackStopRequest::TrackStopRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.TrackStopRequest)
}
TrackStopRequest::TrackStopRequest(
    ::google::protobuf::Arena* arena, const TrackStopRequest& from)
    : TrackStopRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE TrackStopRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TrackStopRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.component_id_ = {};
}
TrackStopRequest::~TrackStopRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.TrackStopRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TrackStopRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TrackStopRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.TrackStopRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.component_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TrackStopRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> TrackStopRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TrackStopRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TrackStopRequest, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TrackStopRequest, _impl_.component_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(TrackStopRequest, _impl_.component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TrackStopRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.TrackStopRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.TrackStopRequest)
  return target;
}

::size_t TrackStopRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.TrackStopRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TrackStopRequest::_class_data_ = {
    TrackStopRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TrackStopRequest::GetClassData() const {
  return &_class_data_;
}

void TrackStopRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TrackStopRequest*>(&to_msg);
  auto& from = static_cast<const TrackStopRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.TrackStopRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TrackStopRequest::CopyFrom(const TrackStopRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.TrackStopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TrackStopRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TrackStopRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TrackStopRequest::InternalSwap(TrackStopRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.component_id_, other->_impl_.component_id_);
}

::google::protobuf::Metadata TrackStopRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[73]);
}
// ===================================================================

class TrackStopResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<TrackStopResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TrackStopResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::CameraResult& camera_result(const TrackStopResponse* msg);
  static void set_has_camera_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::CameraResult& TrackStopResponse::_Internal::camera_result(const TrackStopResponse* msg) {
  return *msg->_impl_.camera_result_;
}
TrackStopResponse::TrackStopResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.TrackStopResponse)
}
inline PROTOBUF_NDEBUG_INLINE TrackStopResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TrackStopResponse::TrackStopResponse(
    ::google::protobuf::Arena* arena,
    const TrackStopResponse& from)
    : ::google::protobuf::Message(arena) {
  TrackStopResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::CameraResult>(arena, *from._impl_.camera_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.TrackStopResponse)
}
inline PROTOBUF_NDEBUG_INLINE TrackStopResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TrackStopResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_result_ = {};
}
TrackStopResponse::~TrackStopResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.TrackStopResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TrackStopResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TrackStopResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.TrackStopResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_result_ != nullptr);
    _impl_.camera_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TrackStopResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TrackStopResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TrackStopResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TrackStopResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TrackStopResponse, _impl_.camera_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {PROTOBUF_FIELD_OFFSET(TrackStopResponse, _impl_.camera_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::CameraResult>()},
  }}, {{
  }},
};

::uint8_t* TrackStopResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.TrackStopResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_result(this),
        _Internal::camera_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.TrackStopResponse)
  return target;
}

::size_t TrackStopResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.TrackStopResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TrackStopResponse::_class_data_ = {
    TrackStopResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TrackStopResponse::GetClassData() const {
  return &_class_data_;
}

void TrackStopResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TrackStopResponse*>(&to_msg);
  auto& from = static_cast<const TrackStopResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.TrackStopResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_result()->::mavsdk::rpc::camera::CameraResult::MergeFrom(
        from._internal_camera_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TrackStopResponse::CopyFrom(const TrackStopResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.TrackStopResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TrackStopResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TrackStopResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TrackStopResponse::InternalSwap(TrackStopResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_result_, other->_impl_.camera_result_);
}

::google::protobuf::Metadata TrackStopResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[74]);
}
// ===================================================================

class FocusInStartRequest::_Internal {
 public:
};

FocusInStartRequest::FocusInStartRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.FocusInStartRequest)
}
FocusInStartRequest::FocusInStartRequest(
    ::google::protobuf::Arena* arena, const FocusInStartRequest& from)
    : FocusInStartRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE FocusInStartRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FocusInStartRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.component_id_ = {};
}
FocusInStartRequest::~FocusInStartRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.FocusInStartRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FocusInStartRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void FocusInStartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.FocusInStartRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.component_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FocusInStartRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> FocusInStartRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_FocusInStartRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FocusInStartRequest, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(FocusInStartRequest, _impl_.component_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(FocusInStartRequest, _impl_.component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* FocusInStartRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.FocusInStartRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.FocusInStartRequest)
  return target;
}

::size_t FocusInStartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.FocusInStartRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FocusInStartRequest::_class_data_ = {
    FocusInStartRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* FocusInStartRequest::GetClassData() const {
  return &_class_data_;
}

void FocusInStartRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FocusInStartRequest*>(&to_msg);
  auto& from = static_cast<const FocusInStartRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.FocusInStartRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FocusInStartRequest::CopyFrom(const FocusInStartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.FocusInStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FocusInStartRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* FocusInStartRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void FocusInStartRequest::InternalSwap(FocusInStartRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.component_id_, other->_impl_.component_id_);
}

::google::protobuf::Metadata FocusInStartRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[75]);
}
// ===================================================================

class FocusInStartResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<FocusInStartResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(FocusInStartResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::CameraResult& camera_result(const FocusInStartResponse* msg);
  static void set_has_camera_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::CameraResult& FocusInStartResponse::_Internal::camera_result(const FocusInStartResponse* msg) {
  return *msg->_impl_.camera_result_;
}
FocusInStartResponse::FocusInStartResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.FocusInStartResponse)
}
inline PROTOBUF_NDEBUG_INLINE FocusInStartResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

FocusInStartResponse::FocusInStartResponse(
    ::google::protobuf::Arena* arena,
    const FocusInStartResponse& from)
    : ::google::protobuf::Message(arena) {
  FocusInStartResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::CameraResult>(arena, *from._impl_.camera_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.FocusInStartResponse)
}
inline PROTOBUF_NDEBUG_INLINE FocusInStartResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FocusInStartResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_result_ = {};
}
FocusInStartResponse::~FocusInStartResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.FocusInStartResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FocusInStartResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void FocusInStartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.FocusInStartResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_result_ != nullptr);
    _impl_.camera_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FocusInStartResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> FocusInStartResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FocusInStartResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_FocusInStartResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(FocusInStartResponse, _impl_.camera_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {PROTOBUF_FIELD_OFFSET(FocusInStartResponse, _impl_.camera_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::CameraResult>()},
  }}, {{
  }},
};

::uint8_t* FocusInStartResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.FocusInStartResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_result(this),
        _Internal::camera_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.FocusInStartResponse)
  return target;
}

::size_t FocusInStartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.FocusInStartResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FocusInStartResponse::_class_data_ = {
    FocusInStartResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* FocusInStartResponse::GetClassData() const {
  return &_class_data_;
}

void FocusInStartResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FocusInStartResponse*>(&to_msg);
  auto& from = static_cast<const FocusInStartResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.FocusInStartResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_result()->::mavsdk::rpc::camera::CameraResult::MergeFrom(
        from._internal_camera_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FocusInStartResponse::CopyFrom(const FocusInStartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.FocusInStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FocusInStartResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* FocusInStartResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void FocusInStartResponse::InternalSwap(FocusInStartResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_result_, other->_impl_.camera_result_);
}

::google::protobuf::Metadata FocusInStartResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[76]);
}
// ===================================================================

class FocusOutStartRequest::_Internal {
 public:
};

FocusOutStartRequest::FocusOutStartRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.FocusOutStartRequest)
}
FocusOutStartRequest::FocusOutStartRequest(
    ::google::protobuf::Arena* arena, const FocusOutStartRequest& from)
    : FocusOutStartRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE FocusOutStartRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FocusOutStartRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.component_id_ = {};
}
FocusOutStartRequest::~FocusOutStartRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.FocusOutStartRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FocusOutStartRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void FocusOutStartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.FocusOutStartRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.component_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FocusOutStartRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> FocusOutStartRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_FocusOutStartRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FocusOutStartRequest, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(FocusOutStartRequest, _impl_.component_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(FocusOutStartRequest, _impl_.component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* FocusOutStartRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.FocusOutStartRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.FocusOutStartRequest)
  return target;
}

::size_t FocusOutStartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.FocusOutStartRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FocusOutStartRequest::_class_data_ = {
    FocusOutStartRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* FocusOutStartRequest::GetClassData() const {
  return &_class_data_;
}

void FocusOutStartRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FocusOutStartRequest*>(&to_msg);
  auto& from = static_cast<const FocusOutStartRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.FocusOutStartRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FocusOutStartRequest::CopyFrom(const FocusOutStartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.FocusOutStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FocusOutStartRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* FocusOutStartRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void FocusOutStartRequest::InternalSwap(FocusOutStartRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.component_id_, other->_impl_.component_id_);
}

::google::protobuf::Metadata FocusOutStartRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[77]);
}
// ===================================================================

class FocusOutStartResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<FocusOutStartResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(FocusOutStartResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::CameraResult& camera_result(const FocusOutStartResponse* msg);
  static void set_has_camera_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::CameraResult& FocusOutStartResponse::_Internal::camera_result(const FocusOutStartResponse* msg) {
  return *msg->_impl_.camera_result_;
}
FocusOutStartResponse::FocusOutStartResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.FocusOutStartResponse)
}
inline PROTOBUF_NDEBUG_INLINE FocusOutStartResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

FocusOutStartResponse::FocusOutStartResponse(
    ::google::protobuf::Arena* arena,
    const FocusOutStartResponse& from)
    : ::google::protobuf::Message(arena) {
  FocusOutStartResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::CameraResult>(arena, *from._impl_.camera_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.FocusOutStartResponse)
}
inline PROTOBUF_NDEBUG_INLINE FocusOutStartResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FocusOutStartResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_result_ = {};
}
FocusOutStartResponse::~FocusOutStartResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.FocusOutStartResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FocusOutStartResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void FocusOutStartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.FocusOutStartResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_result_ != nullptr);
    _impl_.camera_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FocusOutStartResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> FocusOutStartResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FocusOutStartResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_FocusOutStartResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(FocusOutStartResponse, _impl_.camera_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {PROTOBUF_FIELD_OFFSET(FocusOutStartResponse, _impl_.camera_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::CameraResult>()},
  }}, {{
  }},
};

::uint8_t* FocusOutStartResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.FocusOutStartResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_result(this),
        _Internal::camera_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.FocusOutStartResponse)
  return target;
}

::size_t FocusOutStartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.FocusOutStartResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FocusOutStartResponse::_class_data_ = {
    FocusOutStartResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* FocusOutStartResponse::GetClassData() const {
  return &_class_data_;
}

void FocusOutStartResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FocusOutStartResponse*>(&to_msg);
  auto& from = static_cast<const FocusOutStartResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.FocusOutStartResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_result()->::mavsdk::rpc::camera::CameraResult::MergeFrom(
        from._internal_camera_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FocusOutStartResponse::CopyFrom(const FocusOutStartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.FocusOutStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FocusOutStartResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* FocusOutStartResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void FocusOutStartResponse::InternalSwap(FocusOutStartResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_result_, other->_impl_.camera_result_);
}

::google::protobuf::Metadata FocusOutStartResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[78]);
}
// ===================================================================

class FocusStopRequest::_Internal {
 public:
};

FocusStopRequest::FocusStopRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.FocusStopRequest)
}
FocusStopRequest::FocusStopRequest(
    ::google::protobuf::Arena* arena, const FocusStopRequest& from)
    : FocusStopRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE FocusStopRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FocusStopRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.component_id_ = {};
}
FocusStopRequest::~FocusStopRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.FocusStopRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FocusStopRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void FocusStopRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.FocusStopRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.component_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FocusStopRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> FocusStopRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_FocusStopRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FocusStopRequest, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(FocusStopRequest, _impl_.component_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(FocusStopRequest, _impl_.component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* FocusStopRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.FocusStopRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.FocusStopRequest)
  return target;
}

::size_t FocusStopRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.FocusStopRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FocusStopRequest::_class_data_ = {
    FocusStopRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* FocusStopRequest::GetClassData() const {
  return &_class_data_;
}

void FocusStopRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FocusStopRequest*>(&to_msg);
  auto& from = static_cast<const FocusStopRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.FocusStopRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FocusStopRequest::CopyFrom(const FocusStopRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.FocusStopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FocusStopRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* FocusStopRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void FocusStopRequest::InternalSwap(FocusStopRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.component_id_, other->_impl_.component_id_);
}

::google::protobuf::Metadata FocusStopRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[79]);
}
// ===================================================================

class FocusStopResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<FocusStopResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(FocusStopResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::CameraResult& camera_result(const FocusStopResponse* msg);
  static void set_has_camera_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::CameraResult& FocusStopResponse::_Internal::camera_result(const FocusStopResponse* msg) {
  return *msg->_impl_.camera_result_;
}
FocusStopResponse::FocusStopResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.FocusStopResponse)
}
inline PROTOBUF_NDEBUG_INLINE FocusStopResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

FocusStopResponse::FocusStopResponse(
    ::google::protobuf::Arena* arena,
    const FocusStopResponse& from)
    : ::google::protobuf::Message(arena) {
  FocusStopResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::CameraResult>(arena, *from._impl_.camera_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.FocusStopResponse)
}
inline PROTOBUF_NDEBUG_INLINE FocusStopResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FocusStopResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_result_ = {};
}
FocusStopResponse::~FocusStopResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.FocusStopResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FocusStopResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void FocusStopResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.FocusStopResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_result_ != nullptr);
    _impl_.camera_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FocusStopResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> FocusStopResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FocusStopResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_FocusStopResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(FocusStopResponse, _impl_.camera_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {PROTOBUF_FIELD_OFFSET(FocusStopResponse, _impl_.camera_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::CameraResult>()},
  }}, {{
  }},
};

::uint8_t* FocusStopResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.FocusStopResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_result(this),
        _Internal::camera_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.FocusStopResponse)
  return target;
}

::size_t FocusStopResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.FocusStopResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FocusStopResponse::_class_data_ = {
    FocusStopResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* FocusStopResponse::GetClassData() const {
  return &_class_data_;
}

void FocusStopResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FocusStopResponse*>(&to_msg);
  auto& from = static_cast<const FocusStopResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.FocusStopResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_result()->::mavsdk::rpc::camera::CameraResult::MergeFrom(
        from._internal_camera_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FocusStopResponse::CopyFrom(const FocusStopResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.FocusStopResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FocusStopResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* FocusStopResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void FocusStopResponse::InternalSwap(FocusStopResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_result_, other->_impl_.camera_result_);
}

::google::protobuf::Metadata FocusStopResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[80]);
}
// ===================================================================

class FocusRangeRequest::_Internal {
 public:
};

FocusRangeRequest::FocusRangeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.FocusRangeRequest)
}
FocusRangeRequest::FocusRangeRequest(
    ::google::protobuf::Arena* arena, const FocusRangeRequest& from)
    : FocusRangeRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE FocusRangeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FocusRangeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, component_id_),
           0,
           offsetof(Impl_, range_) -
               offsetof(Impl_, component_id_) +
               sizeof(Impl_::range_));
}
FocusRangeRequest::~FocusRangeRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.FocusRangeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FocusRangeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void FocusRangeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.FocusRangeRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.component_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.range_) -
      reinterpret_cast<char*>(&_impl_.component_id_)) + sizeof(_impl_.range_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FocusRangeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> FocusRangeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_FocusRangeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float range = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(FocusRangeRequest, _impl_.range_)}},
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FocusRangeRequest, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(FocusRangeRequest, _impl_.component_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(FocusRangeRequest, _impl_.component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // float range = 2;
    {PROTOBUF_FIELD_OFFSET(FocusRangeRequest, _impl_.range_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* FocusRangeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.FocusRangeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  // float range = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_range = this->_internal_range();
  ::uint32_t raw_range;
  memcpy(&raw_range, &tmp_range, sizeof(tmp_range));
  if (raw_range != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_range(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.FocusRangeRequest)
  return target;
}

::size_t FocusRangeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.FocusRangeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  // float range = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_range = this->_internal_range();
  ::uint32_t raw_range;
  memcpy(&raw_range, &tmp_range, sizeof(tmp_range));
  if (raw_range != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FocusRangeRequest::_class_data_ = {
    FocusRangeRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* FocusRangeRequest::GetClassData() const {
  return &_class_data_;
}

void FocusRangeRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FocusRangeRequest*>(&to_msg);
  auto& from = static_cast<const FocusRangeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.FocusRangeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_range = from._internal_range();
  ::uint32_t raw_range;
  memcpy(&raw_range, &tmp_range, sizeof(tmp_range));
  if (raw_range != 0) {
    _this->_internal_set_range(from._internal_range());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FocusRangeRequest::CopyFrom(const FocusRangeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.FocusRangeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FocusRangeRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* FocusRangeRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void FocusRangeRequest::InternalSwap(FocusRangeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FocusRangeRequest, _impl_.range_)
      + sizeof(FocusRangeRequest::_impl_.range_)
      - PROTOBUF_FIELD_OFFSET(FocusRangeRequest, _impl_.component_id_)>(
          reinterpret_cast<char*>(&_impl_.component_id_),
          reinterpret_cast<char*>(&other->_impl_.component_id_));
}

::google::protobuf::Metadata FocusRangeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[81]);
}
// ===================================================================

class FocusRangeResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<FocusRangeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(FocusRangeResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::CameraResult& camera_result(const FocusRangeResponse* msg);
  static void set_has_camera_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera::CameraResult& FocusRangeResponse::_Internal::camera_result(const FocusRangeResponse* msg) {
  return *msg->_impl_.camera_result_;
}
FocusRangeResponse::FocusRangeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.FocusRangeResponse)
}
inline PROTOBUF_NDEBUG_INLINE FocusRangeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

FocusRangeResponse::FocusRangeResponse(
    ::google::protobuf::Arena* arena,
    const FocusRangeResponse& from)
    : ::google::protobuf::Message(arena) {
  FocusRangeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::CameraResult>(arena, *from._impl_.camera_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.FocusRangeResponse)
}
inline PROTOBUF_NDEBUG_INLINE FocusRangeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FocusRangeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_result_ = {};
}
FocusRangeResponse::~FocusRangeResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.FocusRangeResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FocusRangeResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void FocusRangeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.FocusRangeResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_result_ != nullptr);
    _impl_.camera_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FocusRangeResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> FocusRangeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FocusRangeResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_FocusRangeResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(FocusRangeResponse, _impl_.camera_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.CameraResult camera_result = 1;
    {PROTOBUF_FIELD_OFFSET(FocusRangeResponse, _impl_.camera_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::CameraResult>()},
  }}, {{
  }},
};

::uint8_t* FocusRangeResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.FocusRangeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_result(this),
        _Internal::camera_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.FocusRangeResponse)
  return target;
}

::size_t FocusRangeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.FocusRangeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera.CameraResult camera_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FocusRangeResponse::_class_data_ = {
    FocusRangeResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* FocusRangeResponse::GetClassData() const {
  return &_class_data_;
}

void FocusRangeResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FocusRangeResponse*>(&to_msg);
  auto& from = static_cast<const FocusRangeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.FocusRangeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_result()->::mavsdk::rpc::camera::CameraResult::MergeFrom(
        from._internal_camera_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FocusRangeResponse::CopyFrom(const FocusRangeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.FocusRangeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FocusRangeResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* FocusRangeResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void FocusRangeResponse::InternalSwap(FocusRangeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_result_, other->_impl_.camera_result_);
}

::google::protobuf::Metadata FocusRangeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[82]);
}
// ===================================================================

class CameraResult::_Internal {
 public:
};

CameraResult::CameraResult(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.CameraResult)
}
inline PROTOBUF_NDEBUG_INLINE CameraResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : result_str_(arena, from.result_str_),
        _cached_size_{0} {}

CameraResult::CameraResult(
    ::google::protobuf::Arena* arena,
    const CameraResult& from)
    : ::google::protobuf::Message(arena) {
  CameraResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.result_ = from._impl_.result_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.CameraResult)
}
inline PROTOBUF_NDEBUG_INLINE CameraResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : result_str_(arena),
        _cached_size_{0} {}

inline void CameraResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
CameraResult::~CameraResult() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.CameraResult)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CameraResult::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.result_str_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CameraResult::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.CameraResult)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_str_.ClearToEmpty();
  _impl_.result_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CameraResult::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 49, 2> CameraResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CameraResult_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string result_str = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CameraResult, _impl_.result_str_)}},
    // .mavsdk.rpc.camera.CameraResult.Result result = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CameraResult, _impl_.result_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CameraResult, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera.CameraResult.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(CameraResult, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string result_str = 2;
    {PROTOBUF_FIELD_OFFSET(CameraResult, _impl_.result_str_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\0\12\0\0\0\0\0"
    "mavsdk.rpc.camera.CameraResult"
    "result_str"
  }},
};

::uint8_t* CameraResult::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.CameraResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .mavsdk.rpc.camera.CameraResult.Result result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_result(), target);
  }

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    const std::string& _s = this->_internal_result_str();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.camera.CameraResult.result_str");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.CameraResult)
  return target;
}

::size_t CameraResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.CameraResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_result_str());
  }

  // .mavsdk.rpc.camera.CameraResult.Result result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CameraResult::_class_data_ = {
    CameraResult::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CameraResult::GetClassData() const {
  return &_class_data_;
}

void CameraResult::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CameraResult*>(&to_msg);
  auto& from = static_cast<const CameraResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.CameraResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result_str().empty()) {
    _this->_internal_set_result_str(from._internal_result_str());
  }
  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CameraResult::CopyFrom(const CameraResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.CameraResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CameraResult::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CameraResult::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CameraResult::InternalSwap(CameraResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.result_str_, &other->_impl_.result_str_, arena);
  swap(_impl_.result_, other->_impl_.result_);
}

::google::protobuf::Metadata CameraResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[83]);
}
// ===================================================================

class Position::_Internal {
 public:
};

Position::Position(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.Position)
}
Position::Position(
    ::google::protobuf::Arena* arena, const Position& from)
    : Position(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Position::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Position::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, latitude_deg_),
           0,
           offsetof(Impl_, relative_altitude_m_) -
               offsetof(Impl_, latitude_deg_) +
               sizeof(Impl_::relative_altitude_m_));
}
Position::~Position() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.Position)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Position::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Position::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.Position)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.latitude_deg_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.relative_altitude_m_) -
      reinterpret_cast<char*>(&_impl_.latitude_deg_)) + sizeof(_impl_.relative_altitude_m_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Position::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> Position::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Position_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float relative_altitude_m = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.relative_altitude_m_)}},
    // double latitude_deg = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.latitude_deg_)}},
    // double longitude_deg = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.longitude_deg_)}},
    // float absolute_altitude_m = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.absolute_altitude_m_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double latitude_deg = 1;
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.latitude_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double longitude_deg = 2;
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.longitude_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // float absolute_altitude_m = 3;
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.absolute_altitude_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float relative_altitude_m = 4;
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.relative_altitude_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Position::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.Position)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double latitude_deg = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_latitude_deg = this->_internal_latitude_deg();
  ::uint64_t raw_latitude_deg;
  memcpy(&raw_latitude_deg, &tmp_latitude_deg, sizeof(tmp_latitude_deg));
  if (raw_latitude_deg != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_latitude_deg(), target);
  }

  // double longitude_deg = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_longitude_deg = this->_internal_longitude_deg();
  ::uint64_t raw_longitude_deg;
  memcpy(&raw_longitude_deg, &tmp_longitude_deg, sizeof(tmp_longitude_deg));
  if (raw_longitude_deg != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_longitude_deg(), target);
  }

  // float absolute_altitude_m = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_absolute_altitude_m = this->_internal_absolute_altitude_m();
  ::uint32_t raw_absolute_altitude_m;
  memcpy(&raw_absolute_altitude_m, &tmp_absolute_altitude_m, sizeof(tmp_absolute_altitude_m));
  if (raw_absolute_altitude_m != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_absolute_altitude_m(), target);
  }

  // float relative_altitude_m = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_relative_altitude_m = this->_internal_relative_altitude_m();
  ::uint32_t raw_relative_altitude_m;
  memcpy(&raw_relative_altitude_m, &tmp_relative_altitude_m, sizeof(tmp_relative_altitude_m));
  if (raw_relative_altitude_m != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_relative_altitude_m(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.Position)
  return target;
}

::size_t Position::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.Position)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double latitude_deg = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_latitude_deg = this->_internal_latitude_deg();
  ::uint64_t raw_latitude_deg;
  memcpy(&raw_latitude_deg, &tmp_latitude_deg, sizeof(tmp_latitude_deg));
  if (raw_latitude_deg != 0) {
    total_size += 9;
  }

  // double longitude_deg = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_longitude_deg = this->_internal_longitude_deg();
  ::uint64_t raw_longitude_deg;
  memcpy(&raw_longitude_deg, &tmp_longitude_deg, sizeof(tmp_longitude_deg));
  if (raw_longitude_deg != 0) {
    total_size += 9;
  }

  // float absolute_altitude_m = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_absolute_altitude_m = this->_internal_absolute_altitude_m();
  ::uint32_t raw_absolute_altitude_m;
  memcpy(&raw_absolute_altitude_m, &tmp_absolute_altitude_m, sizeof(tmp_absolute_altitude_m));
  if (raw_absolute_altitude_m != 0) {
    total_size += 5;
  }

  // float relative_altitude_m = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_relative_altitude_m = this->_internal_relative_altitude_m();
  ::uint32_t raw_relative_altitude_m;
  memcpy(&raw_relative_altitude_m, &tmp_relative_altitude_m, sizeof(tmp_relative_altitude_m));
  if (raw_relative_altitude_m != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Position::_class_data_ = {
    Position::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Position::GetClassData() const {
  return &_class_data_;
}

void Position::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Position*>(&to_msg);
  auto& from = static_cast<const Position&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.Position)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_latitude_deg = from._internal_latitude_deg();
  ::uint64_t raw_latitude_deg;
  memcpy(&raw_latitude_deg, &tmp_latitude_deg, sizeof(tmp_latitude_deg));
  if (raw_latitude_deg != 0) {
    _this->_internal_set_latitude_deg(from._internal_latitude_deg());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_longitude_deg = from._internal_longitude_deg();
  ::uint64_t raw_longitude_deg;
  memcpy(&raw_longitude_deg, &tmp_longitude_deg, sizeof(tmp_longitude_deg));
  if (raw_longitude_deg != 0) {
    _this->_internal_set_longitude_deg(from._internal_longitude_deg());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_absolute_altitude_m = from._internal_absolute_altitude_m();
  ::uint32_t raw_absolute_altitude_m;
  memcpy(&raw_absolute_altitude_m, &tmp_absolute_altitude_m, sizeof(tmp_absolute_altitude_m));
  if (raw_absolute_altitude_m != 0) {
    _this->_internal_set_absolute_altitude_m(from._internal_absolute_altitude_m());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_relative_altitude_m = from._internal_relative_altitude_m();
  ::uint32_t raw_relative_altitude_m;
  memcpy(&raw_relative_altitude_m, &tmp_relative_altitude_m, sizeof(tmp_relative_altitude_m));
  if (raw_relative_altitude_m != 0) {
    _this->_internal_set_relative_altitude_m(from._internal_relative_altitude_m());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Position::CopyFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Position::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Position::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Position::InternalSwap(Position* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Position, _impl_.relative_altitude_m_)
      + sizeof(Position::_impl_.relative_altitude_m_)
      - PROTOBUF_FIELD_OFFSET(Position, _impl_.latitude_deg_)>(
          reinterpret_cast<char*>(&_impl_.latitude_deg_),
          reinterpret_cast<char*>(&other->_impl_.latitude_deg_));
}

::google::protobuf::Metadata Position::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[84]);
}
// ===================================================================

class Quaternion::_Internal {
 public:
};

Quaternion::Quaternion(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.Quaternion)
}
Quaternion::Quaternion(
    ::google::protobuf::Arena* arena, const Quaternion& from)
    : Quaternion(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Quaternion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Quaternion::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, w_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, w_) +
               sizeof(Impl_::z_));
}
Quaternion::~Quaternion() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.Quaternion)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Quaternion::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Quaternion::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.Quaternion)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.w_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.z_) -
      reinterpret_cast<char*>(&_impl_.w_)) + sizeof(_impl_.z_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Quaternion::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> Quaternion::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Quaternion_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float z = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.z_)}},
    // float w = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.w_)}},
    // float x = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.x_)}},
    // float y = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.y_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float w = 1;
    {PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.w_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float x = 2;
    {PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float y = 3;
    {PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float z = 4;
    {PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Quaternion::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.Quaternion)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float w = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_w = this->_internal_w();
  ::uint32_t raw_w;
  memcpy(&raw_w, &tmp_w, sizeof(tmp_w));
  if (raw_w != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_w(), target);
  }

  // float x = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_x(), target);
  }

  // float y = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_y(), target);
  }

  // float z = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_z = this->_internal_z();
  ::uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.Quaternion)
  return target;
}

::size_t Quaternion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.Quaternion)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float w = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_w = this->_internal_w();
  ::uint32_t raw_w;
  memcpy(&raw_w, &tmp_w, sizeof(tmp_w));
  if (raw_w != 0) {
    total_size += 5;
  }

  // float x = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    total_size += 5;
  }

  // float y = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    total_size += 5;
  }

  // float z = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_z = this->_internal_z();
  ::uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Quaternion::_class_data_ = {
    Quaternion::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Quaternion::GetClassData() const {
  return &_class_data_;
}

void Quaternion::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Quaternion*>(&to_msg);
  auto& from = static_cast<const Quaternion&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.Quaternion)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_w = from._internal_w();
  ::uint32_t raw_w;
  memcpy(&raw_w, &tmp_w, sizeof(tmp_w));
  if (raw_w != 0) {
    _this->_internal_set_w(from._internal_w());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = from._internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    _this->_internal_set_x(from._internal_x());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = from._internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    _this->_internal_set_y(from._internal_y());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_z = from._internal_z();
  ::uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    _this->_internal_set_z(from._internal_z());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Quaternion::CopyFrom(const Quaternion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.Quaternion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Quaternion::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Quaternion::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Quaternion::InternalSwap(Quaternion* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.z_)
      + sizeof(Quaternion::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.w_)>(
          reinterpret_cast<char*>(&_impl_.w_),
          reinterpret_cast<char*>(&other->_impl_.w_));
}

::google::protobuf::Metadata Quaternion::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[85]);
}
// ===================================================================

class EulerAngle::_Internal {
 public:
};

EulerAngle::EulerAngle(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.EulerAngle)
}
EulerAngle::EulerAngle(
    ::google::protobuf::Arena* arena, const EulerAngle& from)
    : EulerAngle(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE EulerAngle::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void EulerAngle::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, roll_deg_),
           0,
           offsetof(Impl_, yaw_deg_) -
               offsetof(Impl_, roll_deg_) +
               sizeof(Impl_::yaw_deg_));
}
EulerAngle::~EulerAngle() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.EulerAngle)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EulerAngle::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void EulerAngle::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.EulerAngle)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.roll_deg_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.yaw_deg_) -
      reinterpret_cast<char*>(&_impl_.roll_deg_)) + sizeof(_impl_.yaw_deg_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EulerAngle::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> EulerAngle::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_EulerAngle_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float roll_deg = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(EulerAngle, _impl_.roll_deg_)}},
    // float pitch_deg = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(EulerAngle, _impl_.pitch_deg_)}},
    // float yaw_deg = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(EulerAngle, _impl_.yaw_deg_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float roll_deg = 1;
    {PROTOBUF_FIELD_OFFSET(EulerAngle, _impl_.roll_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float pitch_deg = 2;
    {PROTOBUF_FIELD_OFFSET(EulerAngle, _impl_.pitch_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float yaw_deg = 3;
    {PROTOBUF_FIELD_OFFSET(EulerAngle, _impl_.yaw_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* EulerAngle::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.EulerAngle)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float roll_deg = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_roll_deg = this->_internal_roll_deg();
  ::uint32_t raw_roll_deg;
  memcpy(&raw_roll_deg, &tmp_roll_deg, sizeof(tmp_roll_deg));
  if (raw_roll_deg != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_roll_deg(), target);
  }

  // float pitch_deg = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_pitch_deg = this->_internal_pitch_deg();
  ::uint32_t raw_pitch_deg;
  memcpy(&raw_pitch_deg, &tmp_pitch_deg, sizeof(tmp_pitch_deg));
  if (raw_pitch_deg != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_pitch_deg(), target);
  }

  // float yaw_deg = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_yaw_deg = this->_internal_yaw_deg();
  ::uint32_t raw_yaw_deg;
  memcpy(&raw_yaw_deg, &tmp_yaw_deg, sizeof(tmp_yaw_deg));
  if (raw_yaw_deg != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_yaw_deg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.EulerAngle)
  return target;
}

::size_t EulerAngle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.EulerAngle)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float roll_deg = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_roll_deg = this->_internal_roll_deg();
  ::uint32_t raw_roll_deg;
  memcpy(&raw_roll_deg, &tmp_roll_deg, sizeof(tmp_roll_deg));
  if (raw_roll_deg != 0) {
    total_size += 5;
  }

  // float pitch_deg = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_pitch_deg = this->_internal_pitch_deg();
  ::uint32_t raw_pitch_deg;
  memcpy(&raw_pitch_deg, &tmp_pitch_deg, sizeof(tmp_pitch_deg));
  if (raw_pitch_deg != 0) {
    total_size += 5;
  }

  // float yaw_deg = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_yaw_deg = this->_internal_yaw_deg();
  ::uint32_t raw_yaw_deg;
  memcpy(&raw_yaw_deg, &tmp_yaw_deg, sizeof(tmp_yaw_deg));
  if (raw_yaw_deg != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EulerAngle::_class_data_ = {
    EulerAngle::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* EulerAngle::GetClassData() const {
  return &_class_data_;
}

void EulerAngle::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EulerAngle*>(&to_msg);
  auto& from = static_cast<const EulerAngle&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.EulerAngle)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_roll_deg = from._internal_roll_deg();
  ::uint32_t raw_roll_deg;
  memcpy(&raw_roll_deg, &tmp_roll_deg, sizeof(tmp_roll_deg));
  if (raw_roll_deg != 0) {
    _this->_internal_set_roll_deg(from._internal_roll_deg());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_pitch_deg = from._internal_pitch_deg();
  ::uint32_t raw_pitch_deg;
  memcpy(&raw_pitch_deg, &tmp_pitch_deg, sizeof(tmp_pitch_deg));
  if (raw_pitch_deg != 0) {
    _this->_internal_set_pitch_deg(from._internal_pitch_deg());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_yaw_deg = from._internal_yaw_deg();
  ::uint32_t raw_yaw_deg;
  memcpy(&raw_yaw_deg, &tmp_yaw_deg, sizeof(tmp_yaw_deg));
  if (raw_yaw_deg != 0) {
    _this->_internal_set_yaw_deg(from._internal_yaw_deg());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EulerAngle::CopyFrom(const EulerAngle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.EulerAngle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EulerAngle::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* EulerAngle::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void EulerAngle::InternalSwap(EulerAngle* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EulerAngle, _impl_.yaw_deg_)
      + sizeof(EulerAngle::_impl_.yaw_deg_)
      - PROTOBUF_FIELD_OFFSET(EulerAngle, _impl_.roll_deg_)>(
          reinterpret_cast<char*>(&_impl_.roll_deg_),
          reinterpret_cast<char*>(&other->_impl_.roll_deg_));
}

::google::protobuf::Metadata EulerAngle::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[86]);
}
// ===================================================================

class CaptureInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<CaptureInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera::Position& position(const CaptureInfo* msg);
  static void set_has_position(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::mavsdk::rpc::camera::Quaternion& attitude_quaternion(const CaptureInfo* msg);
  static void set_has_attitude_quaternion(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::mavsdk::rpc::camera::EulerAngle& attitude_euler_angle(const CaptureInfo* msg);
  static void set_has_attitude_euler_angle(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::mavsdk::rpc::camera::Position& CaptureInfo::_Internal::position(const CaptureInfo* msg) {
  return *msg->_impl_.position_;
}
const ::mavsdk::rpc::camera::Quaternion& CaptureInfo::_Internal::attitude_quaternion(const CaptureInfo* msg) {
  return *msg->_impl_.attitude_quaternion_;
}
const ::mavsdk::rpc::camera::EulerAngle& CaptureInfo::_Internal::attitude_euler_angle(const CaptureInfo* msg) {
  return *msg->_impl_.attitude_euler_angle_;
}
CaptureInfo::CaptureInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.CaptureInfo)
}
inline PROTOBUF_NDEBUG_INLINE CaptureInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        file_url_(arena, from.file_url_) {}

CaptureInfo::CaptureInfo(
    ::google::protobuf::Arena* arena,
    const CaptureInfo& from)
    : ::google::protobuf::Message(arena) {
  CaptureInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::Position>(arena, *from._impl_.position_)
                : nullptr;
  _impl_.attitude_quaternion_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::Quaternion>(arena, *from._impl_.attitude_quaternion_)
                : nullptr;
  _impl_.attitude_euler_angle_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera::EulerAngle>(arena, *from._impl_.attitude_euler_angle_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, component_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, component_id_),
           offsetof(Impl_, index_) -
               offsetof(Impl_, component_id_) +
               sizeof(Impl_::index_));

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.CaptureInfo)
}
inline PROTOBUF_NDEBUG_INLINE CaptureInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        file_url_(arena) {}

inline void CaptureInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_),
           0,
           offsetof(Impl_, index_) -
               offsetof(Impl_, position_) +
               sizeof(Impl_::index_));
}
CaptureInfo::~CaptureInfo() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.CaptureInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CaptureInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.file_url_.Destroy();
  delete _impl_.position_;
  delete _impl_.attitude_quaternion_;
  delete _impl_.attitude_euler_angle_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CaptureInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.CaptureInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.file_url_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.attitude_quaternion_ != nullptr);
      _impl_.attitude_quaternion_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.attitude_euler_angle_ != nullptr);
      _impl_.attitude_euler_angle_->Clear();
    }
  }
  ::memset(&_impl_.component_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.index_) -
      reinterpret_cast<char*>(&_impl_.component_id_)) + sizeof(_impl_.index_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CaptureInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 3, 54, 2> CaptureInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CaptureInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string file_url = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_.file_url_)}},
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CaptureInfo, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_.component_id_)}},
    // .mavsdk.rpc.camera.Position position = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_.position_)}},
    // .mavsdk.rpc.camera.Quaternion attitude_quaternion = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_.attitude_quaternion_)}},
    // .mavsdk.rpc.camera.EulerAngle attitude_euler_angle = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 2, PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_.attitude_euler_angle_)}},
    // uint64 time_utc_us = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CaptureInfo, _impl_.time_utc_us_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_.time_utc_us_)}},
    // bool is_success = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CaptureInfo, _impl_.is_success_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_.is_success_)}},
    // int32 index = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CaptureInfo, _impl_.index_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_.index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_.component_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .mavsdk.rpc.camera.Position position = 2;
    {PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_.position_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mavsdk.rpc.camera.Quaternion attitude_quaternion = 3;
    {PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_.attitude_quaternion_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mavsdk.rpc.camera.EulerAngle attitude_euler_angle = 4;
    {PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_.attitude_euler_angle_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 time_utc_us = 5;
    {PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_.time_utc_us_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bool is_success = 6;
    {PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_.is_success_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 index = 7;
    {PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_.index_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string file_url = 8;
    {PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_.file_url_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::Position>()},
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::Quaternion>()},
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::EulerAngle>()},
  }}, {{
    "\35\0\0\0\0\0\0\0\10\0\0\0\0\0\0\0"
    "mavsdk.rpc.camera.CaptureInfo"
    "file_url"
  }},
};

::uint8_t* CaptureInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.CaptureInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera.Position position = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::position(this),
        _Internal::position(this).GetCachedSize(), target, stream);
  }

  // .mavsdk.rpc.camera.Quaternion attitude_quaternion = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::attitude_quaternion(this),
        _Internal::attitude_quaternion(this).GetCachedSize(), target, stream);
  }

  // .mavsdk.rpc.camera.EulerAngle attitude_euler_angle = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::attitude_euler_angle(this),
        _Internal::attitude_euler_angle(this).GetCachedSize(), target, stream);
  }

  // uint64 time_utc_us = 5;
  if (this->_internal_time_utc_us() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        5, this->_internal_time_utc_us(), target);
  }

  // bool is_success = 6;
  if (this->_internal_is_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_is_success(), target);
  }

  // int32 index = 7;
  if (this->_internal_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<7>(
            stream, this->_internal_index(), target);
  }

  // string file_url = 8;
  if (!this->_internal_file_url().empty()) {
    const std::string& _s = this->_internal_file_url();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.camera.CaptureInfo.file_url");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.CaptureInfo)
  return target;
}

::size_t CaptureInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.CaptureInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file_url = 8;
  if (!this->_internal_file_url().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_file_url());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .mavsdk.rpc.camera.Position position = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.position_);
    }

    // .mavsdk.rpc.camera.Quaternion attitude_quaternion = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.attitude_quaternion_);
    }

    // .mavsdk.rpc.camera.EulerAngle attitude_euler_angle = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.attitude_euler_angle_);
    }

  }
  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  // bool is_success = 6;
  if (this->_internal_is_success() != 0) {
    total_size += 2;
  }

  // uint64 time_utc_us = 5;
  if (this->_internal_time_utc_us() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_time_utc_us());
  }

  // int32 index = 7;
  if (this->_internal_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CaptureInfo::_class_data_ = {
    CaptureInfo::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CaptureInfo::GetClassData() const {
  return &_class_data_;
}

void CaptureInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CaptureInfo*>(&to_msg);
  auto& from = static_cast<const CaptureInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.CaptureInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_file_url().empty()) {
    _this->_internal_set_file_url(from._internal_file_url());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_position()->::mavsdk::rpc::camera::Position::MergeFrom(
          from._internal_position());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_attitude_quaternion()->::mavsdk::rpc::camera::Quaternion::MergeFrom(
          from._internal_attitude_quaternion());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_attitude_euler_angle()->::mavsdk::rpc::camera::EulerAngle::MergeFrom(
          from._internal_attitude_euler_angle());
    }
  }
  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  if (from._internal_is_success() != 0) {
    _this->_internal_set_is_success(from._internal_is_success());
  }
  if (from._internal_time_utc_us() != 0) {
    _this->_internal_set_time_utc_us(from._internal_time_utc_us());
  }
  if (from._internal_index() != 0) {
    _this->_internal_set_index(from._internal_index());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CaptureInfo::CopyFrom(const CaptureInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.CaptureInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CaptureInfo::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CaptureInfo::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CaptureInfo::InternalSwap(CaptureInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.file_url_, &other->_impl_.file_url_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_.index_)
      + sizeof(CaptureInfo::_impl_.index_)
      - PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_.position_)>(
          reinterpret_cast<char*>(&_impl_.position_),
          reinterpret_cast<char*>(&other->_impl_.position_));
}

::google::protobuf::Metadata CaptureInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[87]);
}
// ===================================================================

class Information::_Internal {
 public:
};

Information::Information(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.Information)
}
inline PROTOBUF_NDEBUG_INLINE Information::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : vendor_name_(arena, from.vendor_name_),
        model_name_(arena, from.model_name_),
        _cached_size_{0} {}

Information::Information(
    ::google::protobuf::Arena* arena,
    const Information& from)
    : ::google::protobuf::Message(arena) {
  Information* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, component_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, component_id_),
           offsetof(Impl_, vertical_resolution_px_) -
               offsetof(Impl_, component_id_) +
               sizeof(Impl_::vertical_resolution_px_));

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.Information)
}
inline PROTOBUF_NDEBUG_INLINE Information::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : vendor_name_(arena),
        model_name_(arena),
        _cached_size_{0} {}

inline void Information::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, component_id_),
           0,
           offsetof(Impl_, vertical_resolution_px_) -
               offsetof(Impl_, component_id_) +
               sizeof(Impl_::vertical_resolution_px_));
}
Information::~Information() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.Information)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Information::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.vendor_name_.Destroy();
  _impl_.model_name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Information::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.Information)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.vendor_name_.ClearToEmpty();
  _impl_.model_name_.ClearToEmpty();
  ::memset(&_impl_.component_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.vertical_resolution_px_) -
      reinterpret_cast<char*>(&_impl_.component_id_)) + sizeof(_impl_.vertical_resolution_px_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Information::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 67, 2> Information::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Information_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 vertical_resolution_px = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Information, _impl_.vertical_resolution_px_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(Information, _impl_.vertical_resolution_px_)}},
    // int32 component_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Information, _impl_.component_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Information, _impl_.component_id_)}},
    // string vendor_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Information, _impl_.vendor_name_)}},
    // string model_name = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Information, _impl_.model_name_)}},
    // float focal_length_mm = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(Information, _impl_.focal_length_mm_)}},
    // float horizontal_sensor_size_mm = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(Information, _impl_.horizontal_sensor_size_mm_)}},
    // float vertical_sensor_size_mm = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 63, 0, PROTOBUF_FIELD_OFFSET(Information, _impl_.vertical_sensor_size_mm_)}},
    // uint32 horizontal_resolution_px = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Information, _impl_.horizontal_resolution_px_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(Information, _impl_.horizontal_resolution_px_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 component_id = 1;
    {PROTOBUF_FIELD_OFFSET(Information, _impl_.component_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string vendor_name = 2;
    {PROTOBUF_FIELD_OFFSET(Information, _impl_.vendor_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string model_name = 3;
    {PROTOBUF_FIELD_OFFSET(Information, _impl_.model_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float focal_length_mm = 4;
    {PROTOBUF_FIELD_OFFSET(Information, _impl_.focal_length_mm_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float horizontal_sensor_size_mm = 5;
    {PROTOBUF_FIELD_OFFSET(Information, _impl_.horizontal_sensor_size_mm_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float vertical_sensor_size_mm = 6;
    {PROTOBUF_FIELD_OFFSET(Information, _impl_.vertical_sensor_size_mm_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // uint32 horizontal_resolution_px = 7;
    {PROTOBUF_FIELD_OFFSET(Information, _impl_.horizontal_resolution_px_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 vertical_resolution_px = 8;
    {PROTOBUF_FIELD_OFFSET(Information, _impl_.vertical_resolution_px_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\35\0\13\12\0\0\0\0\0\0\0\0\0\0\0\0"
    "mavsdk.rpc.camera.Information"
    "vendor_name"
    "model_name"
  }},
};

::uint8_t* Information::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.Information)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_component_id(), target);
  }

  // string vendor_name = 2;
  if (!this->_internal_vendor_name().empty()) {
    const std::string& _s = this->_internal_vendor_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.camera.Information.vendor_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string model_name = 3;
  if (!this->_internal_model_name().empty()) {
    const std::string& _s = this->_internal_model_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.camera.Information.model_name");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // float focal_length_mm = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_focal_length_mm = this->_internal_focal_length_mm();
  ::uint32_t raw_focal_length_mm;
  memcpy(&raw_focal_length_mm, &tmp_focal_length_mm, sizeof(tmp_focal_length_mm));
  if (raw_focal_length_mm != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_focal_length_mm(), target);
  }

  // float horizontal_sensor_size_mm = 5;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_horizontal_sensor_size_mm = this->_internal_horizontal_sensor_size_mm();
  ::uint32_t raw_horizontal_sensor_size_mm;
  memcpy(&raw_horizontal_sensor_size_mm, &tmp_horizontal_sensor_size_mm, sizeof(tmp_horizontal_sensor_size_mm));
  if (raw_horizontal_sensor_size_mm != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_horizontal_sensor_size_mm(), target);
  }

  // float vertical_sensor_size_mm = 6;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_vertical_sensor_size_mm = this->_internal_vertical_sensor_size_mm();
  ::uint32_t raw_vertical_sensor_size_mm;
  memcpy(&raw_vertical_sensor_size_mm, &tmp_vertical_sensor_size_mm, sizeof(tmp_vertical_sensor_size_mm));
  if (raw_vertical_sensor_size_mm != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        6, this->_internal_vertical_sensor_size_mm(), target);
  }

  // uint32 horizontal_resolution_px = 7;
  if (this->_internal_horizontal_resolution_px() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this->_internal_horizontal_resolution_px(), target);
  }

  // uint32 vertical_resolution_px = 8;
  if (this->_internal_vertical_resolution_px() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this->_internal_vertical_resolution_px(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.Information)
  return target;
}

::size_t Information::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.Information)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string vendor_name = 2;
  if (!this->_internal_vendor_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_vendor_name());
  }

  // string model_name = 3;
  if (!this->_internal_model_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_model_name());
  }

  // int32 component_id = 1;
  if (this->_internal_component_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_id());
  }

  // float focal_length_mm = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_focal_length_mm = this->_internal_focal_length_mm();
  ::uint32_t raw_focal_length_mm;
  memcpy(&raw_focal_length_mm, &tmp_focal_length_mm, sizeof(tmp_focal_length_mm));
  if (raw_focal_length_mm != 0) {
    total_size += 5;
  }

  // float horizontal_sensor_size_mm = 5;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_horizontal_sensor_size_mm = this->_internal_horizontal_sensor_size_mm();
  ::uint32_t raw_horizontal_sensor_size_mm;
  memcpy(&raw_horizontal_sensor_size_mm, &tmp_horizontal_sensor_size_mm, sizeof(tmp_horizontal_sensor_size_mm));
  if (raw_horizontal_sensor_size_mm != 0) {
    total_size += 5;
  }

  // float vertical_sensor_size_mm = 6;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_vertical_sensor_size_mm = this->_internal_vertical_sensor_size_mm();
  ::uint32_t raw_vertical_sensor_size_mm;
  memcpy(&raw_vertical_sensor_size_mm, &tmp_vertical_sensor_size_mm, sizeof(tmp_vertical_sensor_size_mm));
  if (raw_vertical_sensor_size_mm != 0) {
    total_size += 5;
  }

  // uint32 horizontal_resolution_px = 7;
  if (this->_internal_horizontal_resolution_px() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_horizontal_resolution_px());
  }

  // uint32 vertical_resolution_px = 8;
  if (this->_internal_vertical_resolution_px() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_vertical_resolution_px());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Information::_class_data_ = {
    Information::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Information::GetClassData() const {
  return &_class_data_;
}

void Information::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Information*>(&to_msg);
  auto& from = static_cast<const Information&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.Information)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_vendor_name().empty()) {
    _this->_internal_set_vendor_name(from._internal_vendor_name());
  }
  if (!from._internal_model_name().empty()) {
    _this->_internal_set_model_name(from._internal_model_name());
  }
  if (from._internal_component_id() != 0) {
    _this->_internal_set_component_id(from._internal_component_id());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_focal_length_mm = from._internal_focal_length_mm();
  ::uint32_t raw_focal_length_mm;
  memcpy(&raw_focal_length_mm, &tmp_focal_length_mm, sizeof(tmp_focal_length_mm));
  if (raw_focal_length_mm != 0) {
    _this->_internal_set_focal_length_mm(from._internal_focal_length_mm());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_horizontal_sensor_size_mm = from._internal_horizontal_sensor_size_mm();
  ::uint32_t raw_horizontal_sensor_size_mm;
  memcpy(&raw_horizontal_sensor_size_mm, &tmp_horizontal_sensor_size_mm, sizeof(tmp_horizontal_sensor_size_mm));
  if (raw_horizontal_sensor_size_mm != 0) {
    _this->_internal_set_horizontal_sensor_size_mm(from._internal_horizontal_sensor_size_mm());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_vertical_sensor_size_mm = from._internal_vertical_sensor_size_mm();
  ::uint32_t raw_vertical_sensor_size_mm;
  memcpy(&raw_vertical_sensor_size_mm, &tmp_vertical_sensor_size_mm, sizeof(tmp_vertical_sensor_size_mm));
  if (raw_vertical_sensor_size_mm != 0) {
    _this->_internal_set_vertical_sensor_size_mm(from._internal_vertical_sensor_size_mm());
  }
  if (from._internal_horizontal_resolution_px() != 0) {
    _this->_internal_set_horizontal_resolution_px(from._internal_horizontal_resolution_px());
  }
  if (from._internal_vertical_resolution_px() != 0) {
    _this->_internal_set_vertical_resolution_px(from._internal_vertical_resolution_px());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Information::CopyFrom(const Information& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.Information)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Information::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Information::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Information::InternalSwap(Information* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.vendor_name_, &other->_impl_.vendor_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.model_name_, &other->_impl_.model_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Information, _impl_.vertical_resolution_px_)
      + sizeof(Information::_impl_.vertical_resolution_px_)
      - PROTOBUF_FIELD_OFFSET(Information, _impl_.component_id_)>(
          reinterpret_cast<char*>(&_impl_.component_id_),
          reinterpret_cast<char*>(&other->_impl_.component_id_));
}

::google::protobuf::Metadata Information::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[88]);
}
// ===================================================================

class CameraList::_Internal {
 public:
};

CameraList::CameraList(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera.CameraList)
}
inline PROTOBUF_NDEBUG_INLINE CameraList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : cameras_{visibility, arena, from.cameras_},
        _cached_size_{0} {}

CameraList::CameraList(
    ::google::protobuf::Arena* arena,
    const CameraList& from)
    : ::google::protobuf::Message(arena) {
  CameraList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera.CameraList)
}
inline PROTOBUF_NDEBUG_INLINE CameraList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : cameras_{visibility, arena},
        _cached_size_{0} {}

inline void CameraList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CameraList::~CameraList() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera.CameraList)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CameraList::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CameraList::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera.CameraList)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cameras_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CameraList::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CameraList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CameraList_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .mavsdk.rpc.camera.Information cameras = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CameraList, _impl_.cameras_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .mavsdk.rpc.camera.Information cameras = 1;
    {PROTOBUF_FIELD_OFFSET(CameraList, _impl_.cameras_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera::Information>()},
  }}, {{
  }},
};

::uint8_t* CameraList::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera.CameraList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .mavsdk.rpc.camera.Information cameras = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_cameras_size()); i < n; i++) {
    const auto& repfield = this->_internal_cameras().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera.CameraList)
  return target;
}

::size_t CameraList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera.CameraList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .mavsdk.rpc.camera.Information cameras = 1;
  total_size += 1UL * this->_internal_cameras_size();
  for (const auto& msg : this->_internal_cameras()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CameraList::_class_data_ = {
    CameraList::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CameraList::GetClassData() const {
  return &_class_data_;
}

void CameraList::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CameraList*>(&to_msg);
  auto& from = static_cast<const CameraList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera.CameraList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_cameras()->MergeFrom(
      from._internal_cameras());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CameraList::CopyFrom(const CameraList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera.CameraList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CameraList::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CameraList::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CameraList::InternalSwap(CameraList* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.cameras_.InternalSwap(&other->_impl_.cameras_);
}

::google::protobuf::Metadata CameraList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_2fcamera_2eproto_getter, &descriptor_table_camera_2fcamera_2eproto_once,
      file_level_metadata_camera_2fcamera_2eproto[89]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace camera
}  // namespace rpc
}  // namespace mavsdk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
